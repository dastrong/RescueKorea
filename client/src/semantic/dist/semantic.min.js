/*
 * # Semantic UI - 2.4.2
 * https://github.com/Semantic-Org/Semantic-UI
 * http://www.semantic-ui.com/
 *
 * Copyright 2014 Contributors
 * Released under the MIT license
 * http://opensource.org/licenses/MIT
 *
 */
!(function(p, h, v, b) {
  (p.site = p.fn.site = function(e) {
    var s,
      l,
      i = new Date().getTime(),
      o = [],
      t = e,
      n = "string" == typeof t,
      c = [].slice.call(arguments, 1),
      u = p.isPlainObject(e)
        ? p.extend(!0, {}, p.site.settings, e)
        : p.extend({}, p.site.settings),
      a = u.namespace,
      d = u.error,
      r = "module-" + a,
      f = p(v),
      m = this,
      g = f.data(r);
    return (
      (s = {
        initialize: function() {
          s.instantiate();
        },
        instantiate: function() {
          s.verbose("Storing instance of site", s), (g = s), f.data(r, s);
        },
        normalize: function() {
          s.fix.console(), s.fix.requestAnimationFrame();
        },
        fix: {
          console: function() {
            s.debug("Normalizing window.console"),
              (console !== b && console.log !== b) ||
                (s.verbose("Console not available, normalizing events"),
                s.disable.console()),
              (void 0 !== console.group &&
                void 0 !== console.groupEnd &&
                void 0 !== console.groupCollapsed) ||
                (s.verbose("Console group not available, normalizing events"),
                (h.console.group = function() {}),
                (h.console.groupEnd = function() {}),
                (h.console.groupCollapsed = function() {})),
              void 0 === console.markTimeline &&
                (s.verbose("Mark timeline not available, normalizing events"),
                (h.console.markTimeline = function() {}));
          },
          consoleClear: function() {
            s.debug("Disabling programmatic console clearing"),
              (h.console.clear = function() {});
          },
          requestAnimationFrame: function() {
            s.debug("Normalizing requestAnimationFrame"),
              h.requestAnimationFrame === b &&
                (s.debug("RequestAnimationFrame not available, normalizing event"),
                (h.requestAnimationFrame =
                  h.requestAnimationFrame ||
                  h.mozRequestAnimationFrame ||
                  h.webkitRequestAnimationFrame ||
                  h.msRequestAnimationFrame ||
                  function(e) {
                    setTimeout(e, 0);
                  }));
          },
        },
        moduleExists: function(e) {
          return p.fn[e] !== b && p.fn[e].settings !== b;
        },
        enabled: {
          modules: function(e) {
            var n = [];
            return (
              (e = e || u.modules),
              p.each(e, function(e, t) {
                s.moduleExists(t) && n.push(t);
              }),
              n
            );
          },
        },
        disabled: {
          modules: function(e) {
            var n = [];
            return (
              (e = e || u.modules),
              p.each(e, function(e, t) {
                s.moduleExists(t) || n.push(t);
              }),
              n
            );
          },
        },
        change: {
          setting: function(o, a, e, r) {
            (e = "string" == typeof e ? ("all" === e ? u.modules : [e]) : e || u.modules),
              (r = r === b || r),
              p.each(e, function(e, t) {
                var n,
                  i = !s.moduleExists(t) || (p.fn[t].settings.namespace || !1);
                s.moduleExists(t) &&
                  (s.verbose("Changing default setting", o, a, t),
                  (p.fn[t].settings[o] = a),
                  r &&
                    i &&
                    0 < (n = p(":data(module-" + i + ")")).length &&
                    (s.verbose("Modifying existing settings", n), n[t]("setting", o, a)));
              });
          },
          settings: function(i, e, o) {
            (e = "string" == typeof e ? [e] : e || u.modules),
              (o = o === b || o),
              p.each(e, function(e, t) {
                var n;
                s.moduleExists(t) &&
                  (s.verbose("Changing default setting", i, t),
                  p.extend(!0, p.fn[t].settings, i),
                  o &&
                    a &&
                    0 < (n = p(":data(module-" + a + ")")).length &&
                    (s.verbose("Modifying existing settings", n), n[t]("setting", i)));
              });
          },
        },
        enable: {
          console: function() {
            s.console(!0);
          },
          debug: function(e, t) {
            (e = e || u.modules),
              s.debug("Enabling debug for modules", e),
              s.change.setting("debug", !0, e, t);
          },
          verbose: function(e, t) {
            (e = e || u.modules),
              s.debug("Enabling verbose debug for modules", e),
              s.change.setting("verbose", !0, e, t);
          },
        },
        disable: {
          console: function() {
            s.console(!1);
          },
          debug: function(e, t) {
            (e = e || u.modules),
              s.debug("Disabling debug for modules", e),
              s.change.setting("debug", !1, e, t);
          },
          verbose: function(e, t) {
            (e = e || u.modules),
              s.debug("Disabling verbose debug for modules", e),
              s.change.setting("verbose", !1, e, t);
          },
        },
        console: function(e) {
          if (e) {
            if (g.cache.console === b) return void s.error(d.console);
            s.debug("Restoring console function"), (h.console = g.cache.console);
          } else
            s.debug("Disabling console function"),
              (g.cache.console = h.console),
              (h.console = {
                clear: function() {},
                error: function() {},
                group: function() {},
                groupCollapsed: function() {},
                groupEnd: function() {},
                info: function() {},
                log: function() {},
                markTimeline: function() {},
                warn: function() {},
              });
        },
        destroy: function() {
          s.verbose("Destroying previous site for", f), f.removeData(r);
        },
        cache: {},
        setting: function(e, t) {
          if (p.isPlainObject(e)) p.extend(!0, u, e);
          else {
            if (t === b) return u[e];
            u[e] = t;
          }
        },
        internal: function(e, t) {
          if (p.isPlainObject(e)) p.extend(!0, s, e);
          else {
            if (t === b) return s[e];
            s[e] = t;
          }
        },
        debug: function() {
          u.debug &&
            (u.performance
              ? s.performance.log(arguments)
              : ((s.debug = Function.prototype.bind.call(
                  console.info,
                  console,
                  u.name + ":"
                )),
                s.debug.apply(console, arguments)));
        },
        verbose: function() {
          u.verbose &&
            u.debug &&
            (u.performance
              ? s.performance.log(arguments)
              : ((s.verbose = Function.prototype.bind.call(
                  console.info,
                  console,
                  u.name + ":"
                )),
                s.verbose.apply(console, arguments)));
        },
        error: function() {
          (s.error = Function.prototype.bind.call(console.error, console, u.name + ":")),
            s.error.apply(console, arguments);
        },
        performance: {
          log: function(e) {
            var t, n;
            u.performance &&
              ((n = (t = new Date().getTime()) - (i || t)),
              (i = t),
              o.push({
                Element: m,
                Name: e[0],
                Arguments: [].slice.call(e, 1) || "",
                "Execution Time": n,
              })),
              clearTimeout(s.performance.timer),
              (s.performance.timer = setTimeout(s.performance.display, 500));
          },
          display: function() {
            var e = u.name + ":",
              n = 0;
            (i = !1),
              clearTimeout(s.performance.timer),
              p.each(o, function(e, t) {
                n += t["Execution Time"];
              }),
              (e += " " + n + "ms"),
              (console.group !== b || console.table !== b) &&
                0 < o.length &&
                (console.groupCollapsed(e),
                console.table
                  ? console.table(o)
                  : p.each(o, function(e, t) {
                      console.log(t.Name + ": " + t["Execution Time"] + "ms");
                    }),
                console.groupEnd()),
              (o = []);
          },
        },
        invoke: function(i, e, t) {
          var o,
            a,
            n,
            r = g;
          return (
            (e = e || c),
            (t = m || t),
            "string" == typeof i &&
              r !== b &&
              ((i = i.split(/[\. ]/)),
              (o = i.length - 1),
              p.each(i, function(e, t) {
                var n =
                  e != o ? t + i[e + 1].charAt(0).toUpperCase() + i[e + 1].slice(1) : i;
                if (p.isPlainObject(r[n]) && e != o) r = r[n];
                else {
                  if (r[n] !== b) return (a = r[n]), !1;
                  if (!p.isPlainObject(r[t]) || e == o)
                    return r[t] !== b ? (a = r[t]) : s.error(d.method, i), !1;
                  r = r[t];
                }
              })),
            p.isFunction(a) ? (n = a.apply(t, e)) : a !== b && (n = a),
            p.isArray(l) ? l.push(n) : l !== b ? (l = [l, n]) : n !== b && (l = n),
            a
          );
        },
      }),
      n
        ? (g === b && s.initialize(), s.invoke(t))
        : (g !== b && s.destroy(), s.initialize()),
      l !== b ? l : this
    );
  }),
    (p.site.settings = {
      name: "Site",
      namespace: "site",
      error: {
        console:
          "Console cannot be restored, most likely it was overwritten outside of module",
        method: "The method you called is not defined.",
      },
      debug: !1,
      verbose: !1,
      performance: !0,
      modules: [
        "accordion",
        "api",
        "checkbox",
        "dimmer",
        "dropdown",
        "embed",
        "form",
        "modal",
        "nag",
        "popup",
        "rating",
        "shape",
        "sidebar",
        "state",
        "sticky",
        "tab",
        "transition",
        "visit",
        "visibility",
      ],
      siteNamespace: "site",
      namespaceStub: { cache: {}, config: {}, sections: {}, section: {}, utilities: {} },
    }),
    p.extend(p.expr[":"], {
      data: p.expr.createPseudo
        ? p.expr.createPseudo(function(t) {
            return function(e) {
              return !!p.data(e, t);
            };
          })
        : function(e, t, n) {
            return !!p.data(e, n[3]);
          },
    });
})(jQuery, window, document),
  (function(O, e, R, P) {
    "use strict";
    (e =
      void 0 !== e && e.Math == Math
        ? e
        : "undefined" != typeof self && self.Math == Math
        ? self
        : Function("return this")()),
      (O.fn.form = function(w) {
        var C,
          x = O(this),
          k = x.selector || "",
          S = new Date().getTime(),
          T = [],
          A = w,
          E = arguments[1],
          D = "string" == typeof A,
          F = [].slice.call(arguments, 1);
        return (
          x.each(function() {
            var n,
              l,
              t,
              e,
              d,
              c,
              u,
              f,
              m,
              i,
              s,
              o,
              a,
              g,
              p,
              h,
              r = O(this),
              v = this,
              b = [],
              y = !1;
            (h = {
              initialize: function() {
                h.get.settings(),
                  D
                    ? (p === P && h.instantiate(), h.invoke(A))
                    : (p !== P && p.invoke("destroy"),
                      h.verbose("Initializing form validation", r, d),
                      h.bindEvents(),
                      h.set.defaults(),
                      h.instantiate());
              },
              instantiate: function() {
                h.verbose("Storing instance of module", h), (p = h), r.data(a, h);
              },
              destroy: function() {
                h.verbose("Destroying previous module", p),
                  h.removeEvents(),
                  r.removeData(a);
              },
              refresh: function() {
                h.verbose("Refreshing selector cache"),
                  (n = r.find(f.field)),
                  (l = r.find(f.group)),
                  (t = r.find(f.message)),
                  r.find(f.prompt),
                  (e = r.find(f.submit)),
                  r.find(f.clear),
                  r.find(f.reset);
              },
              submit: function() {
                h.verbose("Submitting form", r), r.submit();
              },
              attachEvents: function(e, t) {
                (t = t || "submit"),
                  O(e).on("click" + g, function(e) {
                    h[t](), e.preventDefault();
                  });
              },
              bindEvents: function() {
                h.verbose("Attaching form events"),
                  r
                    .on("submit" + g, h.validate.form)
                    .on("blur" + g, f.field, h.event.field.blur)
                    .on("click" + g, f.submit, h.submit)
                    .on("click" + g, f.reset, h.reset)
                    .on("click" + g, f.clear, h.clear),
                  d.keyboardShortcuts &&
                    r.on("keydown" + g, f.field, h.event.field.keydown),
                  n.each(function() {
                    var e = O(this),
                      t = e.prop("type"),
                      n = h.get.changeEvent(t, e);
                    O(this).on(n + g, h.event.field.change);
                  });
              },
              clear: function() {
                n.each(function() {
                  var e = O(this),
                    t = e.parent(),
                    n = e.closest(l),
                    i = n.find(f.prompt),
                    o = e.data(u.defaultValue) || "",
                    a = t.is(f.uiCheckbox),
                    r = t.is(f.uiDropdown);
                  n.hasClass(m.error) &&
                    (h.verbose("Resetting error on field", n),
                    n.removeClass(m.error),
                    i.remove()),
                    r
                      ? (h.verbose("Resetting dropdown value", t, o), t.dropdown("clear"))
                      : a
                      ? e.prop("checked", !1)
                      : (h.verbose("Resetting field value", e, o), e.val(""));
                });
              },
              reset: function() {
                n.each(function() {
                  var e = O(this),
                    t = e.parent(),
                    n = e.closest(l),
                    i = n.find(f.prompt),
                    o = e.data(u.defaultValue),
                    a = t.is(f.uiCheckbox),
                    r = t.is(f.uiDropdown),
                    s = n.hasClass(m.error);
                  o !== P &&
                    (s &&
                      (h.verbose("Resetting error on field", n),
                      n.removeClass(m.error),
                      i.remove()),
                    r
                      ? (h.verbose("Resetting dropdown value", t, o),
                        t.dropdown("restore defaults"))
                      : a
                      ? (h.verbose("Resetting checkbox value", t, o),
                        e.prop("checked", o))
                      : (h.verbose("Resetting field value", e, o), e.val(o)));
                });
              },
              determine: {
                isValid: function() {
                  var n = !0;
                  return (
                    O.each(c, function(e, t) {
                      h.validate.field(t, e, !0) || (n = !1);
                    }),
                    n
                  );
                },
              },
              is: {
                bracketedRule: function(e) {
                  return e.type && e.type.match(d.regExp.bracket);
                },
                shorthandFields: function(e) {
                  var t = e[Object.keys(e)[0]];
                  return h.is.shorthandRules(t);
                },
                shorthandRules: function(e) {
                  return "string" == typeof e || O.isArray(e);
                },
                empty: function(e) {
                  return (
                    !e ||
                    0 === e.length ||
                    (e.is('input[type="checkbox"]') ? !e.is(":checked") : h.is.blank(e))
                  );
                },
                blank: function(e) {
                  return "" === O.trim(e.val());
                },
                valid: function(e) {
                  var n = !0;
                  return e
                    ? (h.verbose("Checking if field is valid", e),
                      h.validate.field(c[e], e, !1))
                    : (h.verbose("Checking if form is valid"),
                      O.each(c, function(e, t) {
                        h.is.valid(e) || (n = !1);
                      }),
                      n);
                },
              },
              removeEvents: function() {
                r.off(g), n.off(g), e.off(g), n.off(g);
              },
              event: {
                field: {
                  keydown: function(e) {
                    var t = O(this),
                      n = e.which,
                      i = t.is(f.input),
                      o = t.is(f.checkbox),
                      a = 0 < t.closest(f.uiDropdown).length,
                      r = 13;
                    n == 27 && (h.verbose("Escape key pressed blurring field"), t.blur()),
                      e.ctrlKey ||
                        n != r ||
                        !i ||
                        a ||
                        o ||
                        (y ||
                          (t.one("keyup" + g, h.event.field.keyup),
                          h.submit(),
                          h.debug("Enter pressed on input submitting form")),
                        (y = !0));
                  },
                  keyup: function() {
                    y = !1;
                  },
                  blur: function(e) {
                    var t = O(this),
                      n = t.closest(l),
                      i = h.get.validation(t);
                    n.hasClass(m.error)
                      ? (h.debug("Revalidating field", t, i), i && h.validate.field(i))
                      : "blur" == d.on && i && h.validate.field(i);
                  },
                  change: function(e) {
                    var t = O(this),
                      n = t.closest(l),
                      i = h.get.validation(t);
                    i &&
                      ("change" == d.on || (n.hasClass(m.error) && d.revalidate)) &&
                      (clearTimeout(h.timer),
                      (h.timer = setTimeout(function() {
                        h.debug("Revalidating field", t, h.get.validation(t)),
                          h.validate.field(i);
                      }, d.delay)));
                  },
                },
              },
              get: {
                ancillaryValue: function(e) {
                  return (
                    !(!e.type || (!e.value && !h.is.bracketedRule(e))) &&
                    (e.value !== P ? e.value : e.type.match(d.regExp.bracket)[1] + "")
                  );
                },
                ruleName: function(e) {
                  return h.is.bracketedRule(e)
                    ? e.type.replace(e.type.match(d.regExp.bracket)[0], "")
                    : e.type;
                },
                changeEvent: function(e, t) {
                  return "checkbox" == e ||
                    "radio" == e ||
                    "hidden" == e ||
                    t.is("select")
                    ? "change"
                    : h.get.inputEvent();
                },
                inputEvent: function() {
                  return R.createElement("input").oninput !== P
                    ? "input"
                    : R.createElement("input").onpropertychange !== P
                    ? "propertychange"
                    : "keyup";
                },
                fieldsFromShorthand: function(e) {
                  var i = {};
                  return (
                    O.each(e, function(n, e) {
                      "string" == typeof e && (e = [e]),
                        (i[n] = { rules: [] }),
                        O.each(e, function(e, t) {
                          i[n].rules.push({ type: t });
                        });
                    }),
                    i
                  );
                },
                prompt: function(e, t) {
                  var n,
                    i,
                    o = h.get.ruleName(e),
                    a = h.get.ancillaryValue(e),
                    r = h.get.field(t.identifier),
                    s = r.val(),
                    l = O.isFunction(e.prompt)
                      ? e.prompt(s)
                      : e.prompt || d.prompt[o] || d.text.unspecifiedRule,
                    c = -1 !== l.search("{value}"),
                    u = -1 !== l.search("{name}");
                  return (
                    c && (l = l.replace("{value}", r.val())),
                    u &&
                      ((i =
                        1 ==
                        (n = r
                          .closest(f.group)
                          .find("label")
                          .eq(0)).length
                          ? n.text()
                          : r.prop("placeholder") || d.text.unspecifiedField),
                      (l = l.replace("{name}", i))),
                    (l = (l = l.replace("{identifier}", t.identifier)).replace(
                      "{ruleValue}",
                      a
                    )),
                    e.prompt ||
                      h.verbose("Using default validation prompt for type", l, o),
                    l
                  );
                },
                settings: function() {
                  if (O.isPlainObject(w)) {
                    var e = Object.keys(w);
                    0 < e.length && (w[e[0]].identifier !== P && w[e[0]].rules !== P)
                      ? ((d = O.extend(!0, {}, O.fn.form.settings, E)),
                        (c = O.extend({}, O.fn.form.settings.defaults, w)),
                        h.error(d.error.oldSyntax, v),
                        h.verbose("Extending settings from legacy parameters", c, d))
                      : (w.fields &&
                          h.is.shorthandFields(w.fields) &&
                          (w.fields = h.get.fieldsFromShorthand(w.fields)),
                        (d = O.extend(!0, {}, O.fn.form.settings, w)),
                        (c = O.extend({}, O.fn.form.settings.defaults, d.fields)),
                        h.verbose("Extending settings", c, d));
                  } else
                    (d = O.fn.form.settings),
                      (c = O.fn.form.settings.defaults),
                      h.verbose("Using default form validation", c, d);
                  (o = d.namespace),
                    (u = d.metadata),
                    (f = d.selector),
                    (m = d.className),
                    (i = d.regExp),
                    (s = d.error),
                    (a = "module-" + o),
                    (g = "." + o),
                    (p = r.data(a)),
                    h.refresh();
                },
                field: function(e) {
                  return (
                    h.verbose("Finding field with identifier", e),
                    (e = h.escape.string(e)),
                    0 < n.filter("#" + e).length
                      ? n.filter("#" + e)
                      : 0 < n.filter('[name="' + e + '"]').length
                      ? n.filter('[name="' + e + '"]')
                      : 0 < n.filter('[name="' + e + '[]"]').length
                      ? n.filter('[name="' + e + '[]"]')
                      : 0 < n.filter("[data-" + u.validate + '="' + e + '"]').length
                      ? n.filter("[data-" + u.validate + '="' + e + '"]')
                      : O("<input/>")
                  );
                },
                fields: function(e) {
                  var n = O();
                  return (
                    O.each(e, function(e, t) {
                      n = n.add(h.get.field(t));
                    }),
                    n
                  );
                },
                validation: function(n) {
                  var i, o;
                  return (
                    !!c &&
                    (O.each(c, function(e, t) {
                      (o = t.identifier || e),
                        h.get.field(o)[0] == n[0] && ((t.identifier = o), (i = t));
                    }),
                    i || !1)
                  );
                },
                value: function(e) {
                  var t = [];
                  return t.push(e), h.get.values.call(v, t)[e];
                },
                values: function(e) {
                  var t = O.isArray(e) ? h.get.fields(e) : n,
                    c = {};
                  return (
                    t.each(function(e, t) {
                      var n = O(t),
                        i = (n.prop("type"), n.prop("name")),
                        o = n.val(),
                        a = n.is(f.checkbox),
                        r = n.is(f.radio),
                        s = -1 !== i.indexOf("[]"),
                        l = !!a && n.is(":checked");
                      i &&
                        (s
                          ? ((i = i.replace("[]", "")),
                            c[i] || (c[i] = []),
                            a ? (l ? c[i].push(o || !0) : c[i].push(!1)) : c[i].push(o))
                          : r
                          ? (c[i] !== P && 0 != c[i]) || (c[i] = !!l && (o || !0))
                          : (c[i] = a ? !!l && (o || !0) : o));
                    }),
                    c
                  );
                },
              },
              has: {
                field: function(e) {
                  return (
                    h.verbose("Checking for existence of a field with identifier", e),
                    "string" != typeof (e = h.escape.string(e)) &&
                      h.error(s.identifier, e),
                    0 < n.filter("#" + e).length ||
                      (0 < n.filter('[name="' + e + '"]').length ||
                        0 < n.filter("[data-" + u.validate + '="' + e + '"]').length)
                  );
                },
              },
              escape: {
                string: function(e) {
                  return (e = String(e)).replace(i.escape, "\\$&");
                },
              },
              add: {
                rule: function(e, t) {
                  h.add.field(e, t);
                },
                field: function(n, e) {
                  var i = {};
                  h.is.shorthandRules(e)
                    ? ((e = O.isArray(e) ? e : [e]),
                      (i[n] = { rules: [] }),
                      O.each(e, function(e, t) {
                        i[n].rules.push({ type: t });
                      }))
                    : (i[n] = e),
                    (c = O.extend({}, c, i)),
                    h.debug("Adding rules", i, c);
                },
                fields: function(e) {
                  var t;
                  (t = e && h.is.shorthandFields(e) ? h.get.fieldsFromShorthand(e) : e),
                    (c = O.extend({}, c, t));
                },
                prompt: function(e, t) {
                  var n = h.get.field(e).closest(l),
                    i = n.children(f.prompt),
                    o = 0 !== i.length;
                  (t = "string" == typeof t ? [t] : t),
                    h.verbose("Adding field error state", e),
                    n.addClass(m.error),
                    d.inline &&
                      (o || (i = d.templates.prompt(t)).appendTo(n),
                      i.html(t[0]),
                      o
                        ? h.verbose(
                            "Inline errors are disabled, no inline error added",
                            e
                          )
                        : d.transition &&
                          O.fn.transition !== P &&
                          r.transition("is supported")
                        ? (h.verbose(
                            "Displaying error with css transition",
                            d.transition
                          ),
                          i.transition(d.transition + " in", d.duration))
                        : (h.verbose(
                            "Displaying error with fallback javascript animation"
                          ),
                          i.fadeIn(d.duration)));
                },
                errors: function(e) {
                  h.debug("Adding form error messages", e),
                    h.set.error(),
                    t.html(d.templates.error(e));
                },
              },
              remove: {
                rule: function(n, e) {
                  var i = O.isArray(e) ? e : [e];
                  if (e == P) return h.debug("Removed all rules"), void (c[n].rules = []);
                  c[n] != P &&
                    O.isArray(c[n].rules) &&
                    O.each(c[n].rules, function(e, t) {
                      -1 !== i.indexOf(t.type) &&
                        (h.debug("Removed rule", t.type), c[n].rules.splice(e, 1));
                    });
                },
                field: function(e) {
                  var t = O.isArray(e) ? e : [e];
                  O.each(t, function(e, t) {
                    h.remove.rule(t);
                  });
                },
                rules: function(e, n) {
                  O.isArray(e)
                    ? O.each(fields, function(e, t) {
                        h.remove.rule(t, n);
                      })
                    : h.remove.rule(e, n);
                },
                fields: function(e) {
                  h.remove.field(e);
                },
                prompt: function(e) {
                  var t = h.get.field(e).closest(l),
                    n = t.children(f.prompt);
                  t.removeClass(m.error),
                    d.inline &&
                      n.is(":visible") &&
                      (h.verbose("Removing prompt for field", e),
                      d.transition &&
                      O.fn.transition !== P &&
                      r.transition("is supported")
                        ? n.transition(d.transition + " out", d.duration, function() {
                            n.remove();
                          })
                        : n.fadeOut(d.duration, function() {
                            n.remove();
                          }));
                },
              },
              set: {
                success: function() {
                  r.removeClass(m.error).addClass(m.success);
                },
                defaults: function() {
                  n.each(function() {
                    var e = O(this),
                      t = 0 < e.filter(f.checkbox).length ? e.is(":checked") : e.val();
                    e.data(u.defaultValue, t);
                  });
                },
                error: function() {
                  r.removeClass(m.success).addClass(m.error);
                },
                value: function(e, t) {
                  var n = {};
                  return (n[e] = t), h.set.values.call(v, n);
                },
                values: function(e) {
                  O.isEmptyObject(e) ||
                    O.each(e, function(e, t) {
                      var n,
                        i = h.get.field(e),
                        o = i.parent(),
                        a = O.isArray(t),
                        r = o.is(f.uiCheckbox),
                        s = o.is(f.uiDropdown),
                        l = i.is(f.radio) && r;
                      0 < i.length &&
                        (a && r
                          ? (h.verbose("Selecting multiple", t, i),
                            o.checkbox("uncheck"),
                            O.each(t, function(e, t) {
                              (n = i.filter('[value="' + t + '"]')),
                                (o = n.parent()),
                                0 < n.length && o.checkbox("check");
                            }))
                          : l
                          ? (h.verbose("Selecting radio value", t, i),
                            i
                              .filter('[value="' + t + '"]')
                              .parent(f.uiCheckbox)
                              .checkbox("check"))
                          : r
                          ? (h.verbose("Setting checkbox value", t, o),
                            !0 === t ? o.checkbox("check") : o.checkbox("uncheck"))
                          : s
                          ? (h.verbose("Setting dropdown value", t, o),
                            o.dropdown("set selected", t))
                          : (h.verbose("Setting field value", t, i), i.val(t)));
                    });
                },
              },
              validate: {
                form: function(e, t) {
                  var n = h.get.values();
                  if (y) return !1;
                  if (((b = []), h.determine.isValid())) {
                    if (
                      (h.debug("Form has no validation errors, submitting"),
                      h.set.success(),
                      !0 !== t)
                    )
                      return d.onSuccess.call(v, e, n);
                  } else if (
                    (h.debug("Form has errors"),
                    h.set.error(),
                    d.inline || h.add.errors(b),
                    r.data("moduleApi") !== P && e.stopImmediatePropagation(),
                    !0 !== t)
                  )
                    return d.onFailure.call(v, b, n);
                },
                field: function(n, e, t) {
                  (t = t === P || t),
                    "string" == typeof n &&
                      (h.verbose("Validating field", n), (n = c[(e = n)]));
                  var i = n.identifier || e,
                    o = h.get.field(i),
                    a = !!n.depends && h.get.field(n.depends),
                    r = !0,
                    s = [];
                  return (
                    n.identifier ||
                      (h.debug("Using field name as identifier", i), (n.identifier = i)),
                    o.prop("disabled")
                      ? (h.debug("Field is disabled. Skipping", i), (r = !0))
                      : n.optional && h.is.blank(o)
                      ? (h.debug("Field is optional and blank. Skipping", i), (r = !0))
                      : n.depends && h.is.empty(a)
                      ? (h.debug(
                          "Field depends on another value that is not present or empty. Skipping",
                          a
                        ),
                        (r = !0))
                      : n.rules !== P &&
                        O.each(n.rules, function(e, t) {
                          h.has.field(i) &&
                            !h.validate.rule(n, t) &&
                            (h.debug("Field is invalid", i, t.type),
                            s.push(h.get.prompt(t, n)),
                            (r = !1));
                        }),
                    r
                      ? (t && (h.remove.prompt(i, s), d.onValid.call(o)), !0)
                      : (t &&
                          ((b = b.concat(s)), h.add.prompt(i, s), d.onInvalid.call(o, s)),
                        !1)
                  );
                },
                rule: function(e, t) {
                  var n = h.get.field(e.identifier),
                    i = (t.type, n.val()),
                    o = h.get.ancillaryValue(t),
                    a = h.get.ruleName(t),
                    r = d.rules[a];
                  if (O.isFunction(r))
                    return (
                      (i = i === P || "" === i || null === i ? "" : O.trim(i + "")),
                      r.call(n, i, o)
                    );
                  h.error(s.noRule, a);
                },
              },
              setting: function(e, t) {
                if (O.isPlainObject(e)) O.extend(!0, d, e);
                else {
                  if (t === P) return d[e];
                  d[e] = t;
                }
              },
              internal: function(e, t) {
                if (O.isPlainObject(e)) O.extend(!0, h, e);
                else {
                  if (t === P) return h[e];
                  h[e] = t;
                }
              },
              debug: function() {
                !d.silent &&
                  d.debug &&
                  (d.performance
                    ? h.performance.log(arguments)
                    : ((h.debug = Function.prototype.bind.call(
                        console.info,
                        console,
                        d.name + ":"
                      )),
                      h.debug.apply(console, arguments)));
              },
              verbose: function() {
                !d.silent &&
                  d.verbose &&
                  d.debug &&
                  (d.performance
                    ? h.performance.log(arguments)
                    : ((h.verbose = Function.prototype.bind.call(
                        console.info,
                        console,
                        d.name + ":"
                      )),
                      h.verbose.apply(console, arguments)));
              },
              error: function() {
                d.silent ||
                  ((h.error = Function.prototype.bind.call(
                    console.error,
                    console,
                    d.name + ":"
                  )),
                  h.error.apply(console, arguments));
              },
              performance: {
                log: function(e) {
                  var t, n;
                  d.performance &&
                    ((n = (t = new Date().getTime()) - (S || t)),
                    (S = t),
                    T.push({
                      Name: e[0],
                      Arguments: [].slice.call(e, 1) || "",
                      Element: v,
                      "Execution Time": n,
                    })),
                    clearTimeout(h.performance.timer),
                    (h.performance.timer = setTimeout(h.performance.display, 500));
                },
                display: function() {
                  var e = d.name + ":",
                    n = 0;
                  (S = !1),
                    clearTimeout(h.performance.timer),
                    O.each(T, function(e, t) {
                      n += t["Execution Time"];
                    }),
                    (e += " " + n + "ms"),
                    k && (e += " '" + k + "'"),
                    1 < x.length && (e += " (" + x.length + ")"),
                    (console.group !== P || console.table !== P) &&
                      0 < T.length &&
                      (console.groupCollapsed(e),
                      console.table
                        ? console.table(T)
                        : O.each(T, function(e, t) {
                            console.log(t.Name + ": " + t["Execution Time"] + "ms");
                          }),
                      console.groupEnd()),
                    (T = []);
                },
              },
              invoke: function(i, e, t) {
                var o,
                  a,
                  n,
                  r = p;
                return (
                  (e = e || F),
                  (t = v || t),
                  "string" == typeof i &&
                    r !== P &&
                    ((i = i.split(/[\. ]/)),
                    (o = i.length - 1),
                    O.each(i, function(e, t) {
                      var n =
                        e != o
                          ? t + i[e + 1].charAt(0).toUpperCase() + i[e + 1].slice(1)
                          : i;
                      if (O.isPlainObject(r[n]) && e != o) r = r[n];
                      else {
                        if (r[n] !== P) return (a = r[n]), !1;
                        if (!O.isPlainObject(r[t]) || e == o)
                          return r[t] !== P && (a = r[t]), !1;
                        r = r[t];
                      }
                    })),
                  O.isFunction(a) ? (n = a.apply(t, e)) : a !== P && (n = a),
                  O.isArray(C) ? C.push(n) : C !== P ? (C = [C, n]) : n !== P && (C = n),
                  a
                );
              },
            }).initialize();
          }),
          C !== P ? C : this
        );
      }),
      (O.fn.form.settings = {
        name: "Form",
        namespace: "form",
        debug: !1,
        verbose: !1,
        performance: !0,
        fields: !1,
        keyboardShortcuts: !0,
        on: "submit",
        inline: !1,
        delay: 200,
        revalidate: !0,
        transition: "scale",
        duration: 200,
        onValid: function() {},
        onInvalid: function() {},
        onSuccess: function() {
          return !0;
        },
        onFailure: function() {
          return !1;
        },
        metadata: { defaultValue: "default", validate: "validate" },
        regExp: {
          htmlID: /^[a-zA-Z][\w:.-]*$/g,
          bracket: /\[(.*)\]/i,
          decimal: /^\d+\.?\d*$/,
          email: /^[a-z0-9!#$%&'*+\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i,
          escape: /[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,
          flags: /^\/(.*)\/(.*)?/,
          integer: /^\-?\d+$/,
          number: /^\-?\d*(\.\d+)?$/,
          url: /(https?:\/\/(?:www\.|(?!www))[^\s\.]+\.[^\s]{2,}|www\.[^\s]+\.[^\s]{2,})/i,
        },
        text: {
          unspecifiedRule: "Please enter a valid value",
          unspecifiedField: "This field",
        },
        prompt: {
          empty: "{name} must have a value",
          checked: "{name} must be checked",
          email: "{name} must be a valid e-mail",
          url: "{name} must be a valid url",
          regExp: "{name} is not formatted correctly",
          integer: "{name} must be an integer",
          decimal: "{name} must be a decimal number",
          number: "{name} must be set to a number",
          is: '{name} must be "{ruleValue}"',
          isExactly: '{name} must be exactly "{ruleValue}"',
          not: '{name} cannot be set to "{ruleValue}"',
          notExactly: '{name} cannot be set to exactly "{ruleValue}"',
          contain: '{name} must contain "{ruleValue}"',
          containExactly: '{name} must contain exactly "{ruleValue}"',
          doesntContain: '{name} cannot contain  "{ruleValue}"',
          doesntContainExactly: '{name} cannot contain exactly "{ruleValue}"',
          minLength: "{name} must be at least {ruleValue} characters",
          length: "{name} must be at least {ruleValue} characters",
          exactLength: "{name} must be exactly {ruleValue} characters",
          maxLength: "{name} cannot be longer than {ruleValue} characters",
          match: "{name} must match {ruleValue} field",
          different: "{name} must have a different value than {ruleValue} field",
          creditCard: "{name} must be a valid credit card number",
          minCount: "{name} must have at least {ruleValue} choices",
          exactCount: "{name} must have exactly {ruleValue} choices",
          maxCount: "{name} must have {ruleValue} or less choices",
        },
        selector: {
          checkbox: 'input[type="checkbox"], input[type="radio"]',
          clear: ".clear",
          field: "input, textarea, select",
          group: ".field",
          input: "input",
          message: ".error.message",
          prompt: ".prompt.label",
          radio: 'input[type="radio"]',
          reset: '.reset:not([type="reset"])',
          submit: '.submit:not([type="submit"])',
          uiCheckbox: ".ui.checkbox",
          uiDropdown: ".ui.dropdown",
        },
        className: {
          error: "error",
          label: "ui prompt label",
          pressed: "down",
          success: "success",
        },
        error: {
          identifier: "You must specify a string identifier for each field",
          method: "The method you called is not defined.",
          noRule: "There is no rule matching the one you specified",
          oldSyntax:
            "Starting in 2.0 forms now only take a single settings object. Validation settings converted to new syntax automatically.",
        },
        templates: {
          error: function(e) {
            var n = '<ul class="list">';
            return (
              O.each(e, function(e, t) {
                n += "<li>" + t + "</li>";
              }),
              O((n += "</ul>"))
            );
          },
          prompt: function(e) {
            return O("<div/>")
              .addClass("ui basic red pointing prompt label")
              .html(e[0]);
          },
        },
        rules: {
          empty: function(e) {
            return !(e === P || "" === e || (O.isArray(e) && 0 === e.length));
          },
          checked: function() {
            return 0 < O(this).filter(":checked").length;
          },
          email: function(e) {
            return O.fn.form.settings.regExp.email.test(e);
          },
          url: function(e) {
            return O.fn.form.settings.regExp.url.test(e);
          },
          regExp: function(e, t) {
            if (t instanceof RegExp) return e.match(t);
            var n,
              i = t.match(O.fn.form.settings.regExp.flags);
            return (
              i && ((t = 2 <= i.length ? i[1] : t), (n = 3 <= i.length ? i[2] : "")),
              e.match(new RegExp(t, n))
            );
          },
          integer: function(e, t) {
            var n,
              i,
              o,
              a = O.fn.form.settings.regExp.integer;
            return (
              t &&
                -1 === ["", ".."].indexOf(t) &&
                (-1 == t.indexOf("..")
                  ? a.test(t) && (n = i = t - 0)
                  : ((o = t.split("..", 2)),
                    a.test(o[0]) && (n = o[0] - 0),
                    a.test(o[1]) && (i = o[1] - 0))),
              a.test(e) && (n === P || n <= e) && (i === P || e <= i)
            );
          },
          decimal: function(e) {
            return O.fn.form.settings.regExp.decimal.test(e);
          },
          number: function(e) {
            return O.fn.form.settings.regExp.number.test(e);
          },
          is: function(e, t) {
            return (
              (t = "string" == typeof t ? t.toLowerCase() : t),
              (e = "string" == typeof e ? e.toLowerCase() : e) == t
            );
          },
          isExactly: function(e, t) {
            return e == t;
          },
          not: function(e, t) {
            return (
              (e = "string" == typeof e ? e.toLowerCase() : e) !=
              (t = "string" == typeof t ? t.toLowerCase() : t)
            );
          },
          notExactly: function(e, t) {
            return e != t;
          },
          contains: function(e, t) {
            return (
              (t = t.replace(O.fn.form.settings.regExp.escape, "\\$&")),
              -1 !== e.search(new RegExp(t, "i"))
            );
          },
          containsExactly: function(e, t) {
            return (
              (t = t.replace(O.fn.form.settings.regExp.escape, "\\$&")),
              -1 !== e.search(new RegExp(t))
            );
          },
          doesntContain: function(e, t) {
            return (
              (t = t.replace(O.fn.form.settings.regExp.escape, "\\$&")),
              -1 === e.search(new RegExp(t, "i"))
            );
          },
          doesntContainExactly: function(e, t) {
            return (
              (t = t.replace(O.fn.form.settings.regExp.escape, "\\$&")),
              -1 === e.search(new RegExp(t))
            );
          },
          minLength: function(e, t) {
            return e !== P && e.length >= t;
          },
          length: function(e, t) {
            return e !== P && e.length >= t;
          },
          exactLength: function(e, t) {
            return e !== P && e.length == t;
          },
          maxLength: function(e, t) {
            return e !== P && e.length <= t;
          },
          match: function(e, t) {
            var n;
            O(this);
            return (
              0 < O('[data-validate="' + t + '"]').length
                ? (n = O('[data-validate="' + t + '"]').val())
                : 0 < O("#" + t).length
                ? (n = O("#" + t).val())
                : 0 < O('[name="' + t + '"]').length
                ? (n = O('[name="' + t + '"]').val())
                : 0 < O('[name="' + t + '[]"]').length && (n = O('[name="' + t + '[]"]')),
              n !== P && e.toString() == n.toString()
            );
          },
          different: function(e, t) {
            var n;
            O(this);
            return (
              0 < O('[data-validate="' + t + '"]').length
                ? (n = O('[data-validate="' + t + '"]').val())
                : 0 < O("#" + t).length
                ? (n = O("#" + t).val())
                : 0 < O('[name="' + t + '"]').length
                ? (n = O('[name="' + t + '"]').val())
                : 0 < O('[name="' + t + '[]"]').length && (n = O('[name="' + t + '[]"]')),
              n !== P && e.toString() !== n.toString()
            );
          },
          creditCard: function(n, e) {
            var t,
              i,
              o = {
                visa: { pattern: /^4/, length: [16] },
                amex: { pattern: /^3[47]/, length: [15] },
                mastercard: { pattern: /^5[1-5]/, length: [16] },
                discover: {
                  pattern: /^(6011|622(12[6-9]|1[3-9][0-9]|[2-8][0-9]{2}|9[0-1][0-9]|92[0-5]|64[4-9])|65)/,
                  length: [16],
                },
                unionPay: { pattern: /^(62|88)/, length: [16, 17, 18, 19] },
                jcb: { pattern: /^35(2[89]|[3-8][0-9])/, length: [16] },
                maestro: {
                  pattern: /^(5018|5020|5038|6304|6759|676[1-3])/,
                  length: [12, 13, 14, 15, 16, 17, 18, 19],
                },
                dinersClub: { pattern: /^(30[0-5]|^36)/, length: [14] },
                laser: { pattern: /^(6304|670[69]|6771)/, length: [16, 17, 18, 19] },
                visaElectron: {
                  pattern: /^(4026|417500|4508|4844|491(3|7))/,
                  length: [16],
                },
              },
              a = {},
              r = !1,
              s = "string" == typeof e && e.split(",");
            if ("string" == typeof n && 0 !== n.length) {
              if (
                ((n = n.replace(/[\-]/g, "")),
                s &&
                  (O.each(s, function(e, t) {
                    (i = o[t]) &&
                      (a = {
                        length: -1 !== O.inArray(n.length, i.length),
                        pattern: -1 !== n.search(i.pattern),
                      }).length &&
                      a.pattern &&
                      (r = !0);
                  }),
                  !r))
              )
                return !1;
              if (
                (t = {
                  number: -1 !== O.inArray(n.length, o.unionPay.length),
                  pattern: -1 !== n.search(o.unionPay.pattern),
                }).number &&
                t.pattern
              )
                return !0;
              for (
                var l = n.length,
                  c = 0,
                  u = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [0, 2, 4, 6, 8, 1, 3, 5, 7, 9]],
                  d = 0;
                l--;

              )
                (d += u[c][parseInt(n.charAt(l), 10)]), (c ^= 1);
              return d % 10 == 0 && 0 < d;
            }
          },
          minCount: function(e, t) {
            return 0 == t || (1 == t ? "" !== e : e.split(",").length >= t);
          },
          exactCount: function(e, t) {
            return 0 == t
              ? "" === e
              : 1 == t
              ? "" !== e && -1 === e.search(",")
              : e.split(",").length == t;
          },
          maxCount: function(e, t) {
            return 0 != t && (1 == t ? -1 === e.search(",") : e.split(",").length <= t);
          },
        },
      });
  })(jQuery, window, document),
  (function(k, S, e, T) {
    "use strict";
    (S =
      void 0 !== S && S.Math == Math
        ? S
        : "undefined" != typeof self && self.Math == Math
        ? self
        : Function("return this")()),
      (k.fn.accordion = function(a) {
        var v,
          r = k(this),
          b = new Date().getTime(),
          y = [],
          w = a,
          C = "string" == typeof w,
          x = [].slice.call(arguments, 1);
        S.requestAnimationFrame ||
          S.mozRequestAnimationFrame ||
          S.webkitRequestAnimationFrame ||
          S.msRequestAnimationFrame;
        return (
          r.each(function() {
            var e,
              c,
              u = k.isPlainObject(a)
                ? k.extend(!0, {}, k.fn.accordion.settings, a)
                : k.extend({}, k.fn.accordion.settings),
              d = u.className,
              t = u.namespace,
              f = u.selector,
              s = u.error,
              n = "." + t,
              i = "module-" + t,
              o = r.selector || "",
              m = k(this),
              g = m.find(f.title),
              p = m.find(f.content),
              l = this,
              h = m.data(i);
            (c = {
              initialize: function() {
                c.debug("Initializing", m),
                  c.bind.events(),
                  u.observeChanges && c.observeChanges(),
                  c.instantiate();
              },
              instantiate: function() {
                (h = c), m.data(i, c);
              },
              destroy: function() {
                c.debug("Destroying previous instance", m), m.off(n).removeData(i);
              },
              refresh: function() {
                (g = m.find(f.title)), (p = m.find(f.content));
              },
              observeChanges: function() {
                "MutationObserver" in S &&
                  ((e = new MutationObserver(function(e) {
                    c.debug("DOM tree modified, updating selector cache"), c.refresh();
                  })).observe(l, { childList: !0, subtree: !0 }),
                  c.debug("Setting up mutation observer", e));
              },
              bind: {
                events: function() {
                  c.debug("Binding delegated events"),
                    m.on(u.on + n, f.trigger, c.event.click);
                },
              },
              event: {
                click: function() {
                  c.toggle.call(this);
                },
              },
              toggle: function(e) {
                var t =
                    e !== T
                      ? "number" == typeof e
                        ? g.eq(e)
                        : k(e).closest(f.title)
                      : k(this).closest(f.title),
                  n = t.next(p),
                  i = n.hasClass(d.animating),
                  o = n.hasClass(d.active),
                  a = o && !i,
                  r = !o && i;
                c.debug("Toggling visibility of content", t),
                  a || r
                    ? u.collapsible
                      ? c.close.call(t)
                      : c.debug("Cannot close accordion content collapsing is disabled")
                    : c.open.call(t);
              },
              open: function(e) {
                var t =
                    e !== T
                      ? "number" == typeof e
                        ? g.eq(e)
                        : k(e).closest(f.title)
                      : k(this).closest(f.title),
                  n = t.next(p),
                  i = n.hasClass(d.animating);
                n.hasClass(d.active) || i
                  ? c.debug("Accordion already open, skipping", n)
                  : (c.debug("Opening accordion content", t),
                    u.onOpening.call(n),
                    u.onChanging.call(n),
                    u.exclusive && c.closeOthers.call(t),
                    t.addClass(d.active),
                    n.stop(!0, !0).addClass(d.animating),
                    u.animateChildren &&
                      (k.fn.transition !== T && m.transition("is supported")
                        ? n
                            .children()
                            .transition({
                              animation: "fade in",
                              queue: !1,
                              useFailSafe: !0,
                              debug: u.debug,
                              verbose: u.verbose,
                              duration: u.duration,
                            })
                        : n
                            .children()
                            .stop(!0, !0)
                            .animate({ opacity: 1 }, u.duration, c.resetOpacity)),
                    n.slideDown(u.duration, u.easing, function() {
                      n.removeClass(d.animating).addClass(d.active),
                        c.reset.display.call(this),
                        u.onOpen.call(this),
                        u.onChange.call(this);
                    }));
              },
              close: function(e) {
                var t =
                    e !== T
                      ? "number" == typeof e
                        ? g.eq(e)
                        : k(e).closest(f.title)
                      : k(this).closest(f.title),
                  n = t.next(p),
                  i = n.hasClass(d.animating),
                  o = n.hasClass(d.active);
                (!o && !(!o && i)) ||
                  (o && i) ||
                  (c.debug("Closing accordion content", n),
                  u.onClosing.call(n),
                  u.onChanging.call(n),
                  t.removeClass(d.active),
                  n.stop(!0, !0).addClass(d.animating),
                  u.animateChildren &&
                    (k.fn.transition !== T && m.transition("is supported")
                      ? n
                          .children()
                          .transition({
                            animation: "fade out",
                            queue: !1,
                            useFailSafe: !0,
                            debug: u.debug,
                            verbose: u.verbose,
                            duration: u.duration,
                          })
                      : n
                          .children()
                          .stop(!0, !0)
                          .animate({ opacity: 0 }, u.duration, c.resetOpacity)),
                  n.slideUp(u.duration, u.easing, function() {
                    n.removeClass(d.animating).removeClass(d.active),
                      c.reset.display.call(this),
                      u.onClose.call(this),
                      u.onChange.call(this);
                  }));
              },
              closeOthers: function(e) {
                var t,
                  n,
                  i,
                  o = e !== T ? g.eq(e) : k(this).closest(f.title),
                  a = o.parents(f.content).prev(f.title),
                  r = o.closest(f.accordion),
                  s = f.title + "." + d.active + ":visible",
                  l = f.content + "." + d.active + ":visible";
                (i = u.closeNested
                  ? (t = r.find(s).not(a)).next(p)
                  : ((t = r.find(s).not(a)),
                    (n = r
                      .find(l)
                      .find(s)
                      .not(a)),
                    (t = t.not(n)).next(p))),
                  0 < t.length &&
                    (c.debug("Exclusive enabled, closing other content", t),
                    t.removeClass(d.active),
                    i.removeClass(d.animating).stop(!0, !0),
                    u.animateChildren &&
                      (k.fn.transition !== T && m.transition("is supported")
                        ? i
                            .children()
                            .transition({
                              animation: "fade out",
                              useFailSafe: !0,
                              debug: u.debug,
                              verbose: u.verbose,
                              duration: u.duration,
                            })
                        : i
                            .children()
                            .stop(!0, !0)
                            .animate({ opacity: 0 }, u.duration, c.resetOpacity)),
                    i.slideUp(u.duration, u.easing, function() {
                      k(this).removeClass(d.active), c.reset.display.call(this);
                    }));
              },
              reset: {
                display: function() {
                  c.verbose("Removing inline display from element", this),
                    k(this).css("display", ""),
                    "" === k(this).attr("style") &&
                      k(this)
                        .attr("style", "")
                        .removeAttr("style");
                },
                opacity: function() {
                  c.verbose("Removing inline opacity from element", this),
                    k(this).css("opacity", ""),
                    "" === k(this).attr("style") &&
                      k(this)
                        .attr("style", "")
                        .removeAttr("style");
                },
              },
              setting: function(e, t) {
                if ((c.debug("Changing setting", e, t), k.isPlainObject(e)))
                  k.extend(!0, u, e);
                else {
                  if (t === T) return u[e];
                  k.isPlainObject(u[e]) ? k.extend(!0, u[e], t) : (u[e] = t);
                }
              },
              internal: function(e, t) {
                if ((c.debug("Changing internal", e, t), t === T)) return c[e];
                k.isPlainObject(e) ? k.extend(!0, c, e) : (c[e] = t);
              },
              debug: function() {
                !u.silent &&
                  u.debug &&
                  (u.performance
                    ? c.performance.log(arguments)
                    : ((c.debug = Function.prototype.bind.call(
                        console.info,
                        console,
                        u.name + ":"
                      )),
                      c.debug.apply(console, arguments)));
              },
              verbose: function() {
                !u.silent &&
                  u.verbose &&
                  u.debug &&
                  (u.performance
                    ? c.performance.log(arguments)
                    : ((c.verbose = Function.prototype.bind.call(
                        console.info,
                        console,
                        u.name + ":"
                      )),
                      c.verbose.apply(console, arguments)));
              },
              error: function() {
                u.silent ||
                  ((c.error = Function.prototype.bind.call(
                    console.error,
                    console,
                    u.name + ":"
                  )),
                  c.error.apply(console, arguments));
              },
              performance: {
                log: function(e) {
                  var t, n;
                  u.performance &&
                    ((n = (t = new Date().getTime()) - (b || t)),
                    (b = t),
                    y.push({
                      Name: e[0],
                      Arguments: [].slice.call(e, 1) || "",
                      Element: l,
                      "Execution Time": n,
                    })),
                    clearTimeout(c.performance.timer),
                    (c.performance.timer = setTimeout(c.performance.display, 500));
                },
                display: function() {
                  var e = u.name + ":",
                    n = 0;
                  (b = !1),
                    clearTimeout(c.performance.timer),
                    k.each(y, function(e, t) {
                      n += t["Execution Time"];
                    }),
                    (e += " " + n + "ms"),
                    o && (e += " '" + o + "'"),
                    (console.group !== T || console.table !== T) &&
                      0 < y.length &&
                      (console.groupCollapsed(e),
                      console.table
                        ? console.table(y)
                        : k.each(y, function(e, t) {
                            console.log(t.Name + ": " + t["Execution Time"] + "ms");
                          }),
                      console.groupEnd()),
                    (y = []);
                },
              },
              invoke: function(i, e, t) {
                var o,
                  a,
                  n,
                  r = h;
                return (
                  (e = e || x),
                  (t = l || t),
                  "string" == typeof i &&
                    r !== T &&
                    ((i = i.split(/[\. ]/)),
                    (o = i.length - 1),
                    k.each(i, function(e, t) {
                      var n =
                        e != o
                          ? t + i[e + 1].charAt(0).toUpperCase() + i[e + 1].slice(1)
                          : i;
                      if (k.isPlainObject(r[n]) && e != o) r = r[n];
                      else {
                        if (r[n] !== T) return (a = r[n]), !1;
                        if (!k.isPlainObject(r[t]) || e == o)
                          return r[t] !== T ? (a = r[t]) : c.error(s.method, i), !1;
                        r = r[t];
                      }
                    })),
                  k.isFunction(a) ? (n = a.apply(t, e)) : a !== T && (n = a),
                  k.isArray(v) ? v.push(n) : v !== T ? (v = [v, n]) : n !== T && (v = n),
                  a
                );
              },
            }),
              C
                ? (h === T && c.initialize(), c.invoke(w))
                : (h !== T && h.invoke("destroy"), c.initialize());
          }),
          v !== T ? v : this
        );
      }),
      (k.fn.accordion.settings = {
        name: "Accordion",
        namespace: "accordion",
        silent: !1,
        debug: !1,
        verbose: !1,
        performance: !0,
        on: "click",
        observeChanges: !0,
        exclusive: !0,
        collapsible: !0,
        closeNested: !1,
        animateChildren: !0,
        duration: 350,
        easing: "easeOutQuad",
        onOpening: function() {},
        onClosing: function() {},
        onChanging: function() {},
        onOpen: function() {},
        onClose: function() {},
        onChange: function() {},
        error: { method: "The method you called is not defined" },
        className: { active: "active", animating: "animating" },
        selector: {
          accordion: ".accordion",
          title: ".title",
          trigger: ".title",
          content: ".content",
        },
      }),
      k.extend(k.easing, {
        easeOutQuad: function(e, t, n, i, o) {
          return -i * (t /= o) * (t - 2) + n;
        },
      });
  })(jQuery, window, document),
  (function(T, A, E, D) {
    "use strict";
    (A =
      void 0 !== A && A.Math == Math
        ? A
        : "undefined" != typeof self && self.Math == Math
        ? self
        : Function("return this")()),
      (T.fn.checkbox = function(v) {
        var b,
          e = T(this),
          y = e.selector || "",
          w = new Date().getTime(),
          C = [],
          x = v,
          k = "string" == typeof x,
          S = [].slice.call(arguments, 1);
        return (
          e.each(function() {
            var e,
              s,
              i = T.extend(!0, {}, T.fn.checkbox.settings, v),
              t = i.className,
              n = i.namespace,
              o = i.selector,
              l = i.error,
              a = "." + n,
              r = "module-" + n,
              c = T(this),
              u = T(this).children(o.label),
              d = T(this).children(o.input),
              f = d[0],
              m = !1,
              g = !1,
              p = c.data(r),
              h = this;
            (s = {
              initialize: function() {
                s.verbose("Initializing checkbox", i),
                  s.create.label(),
                  s.bind.events(),
                  s.set.tabbable(),
                  s.hide.input(),
                  s.observeChanges(),
                  s.instantiate(),
                  s.setup();
              },
              instantiate: function() {
                s.verbose("Storing instance of module", s), (p = s), c.data(r, s);
              },
              destroy: function() {
                s.verbose("Destroying module"),
                  s.unbind.events(),
                  s.show.input(),
                  c.removeData(r);
              },
              fix: {
                reference: function() {
                  c.is(o.input) &&
                    (s.debug("Behavior called on <input> adjusting invoked element"),
                    (c = c.closest(o.checkbox)),
                    s.refresh());
                },
              },
              setup: function() {
                s.set.initialLoad(),
                  s.is.indeterminate()
                    ? (s.debug("Initial value is indeterminate"), s.indeterminate())
                    : s.is.checked()
                    ? (s.debug("Initial value is checked"), s.check())
                    : (s.debug("Initial value is unchecked"), s.uncheck()),
                  s.remove.initialLoad();
              },
              refresh: function() {
                (u = c.children(o.label)), (d = c.children(o.input)), (f = d[0]);
              },
              hide: {
                input: function() {
                  s.verbose("Modifying <input> z-index to be unselectable"),
                    d.addClass(t.hidden);
                },
              },
              show: {
                input: function() {
                  s.verbose("Modifying <input> z-index to be selectable"),
                    d.removeClass(t.hidden);
                },
              },
              observeChanges: function() {
                "MutationObserver" in A &&
                  ((e = new MutationObserver(function(e) {
                    s.debug("DOM tree modified, updating selector cache"), s.refresh();
                  })).observe(h, { childList: !0, subtree: !0 }),
                  s.debug("Setting up mutation observer", e));
              },
              attachEvents: function(e, t) {
                var n = T(e);
                (t = T.isFunction(s[t]) ? s[t] : s.toggle),
                  0 < n.length
                    ? (s.debug("Attaching checkbox events to element", e, t),
                      n.on("click" + a, t))
                    : s.error(l.notFound);
              },
              event: {
                click: function(e) {
                  var t = T(e.target);
                  t.is(o.input)
                    ? s.verbose("Using default check action on initialized checkbox")
                    : t.is(o.link)
                    ? s.debug("Clicking link inside checkbox, skipping toggle")
                    : (s.toggle(), d.focus(), e.preventDefault());
                },
                keydown: function(e) {
                  var t = e.which,
                    n = 13,
                    i = 32;
                  g =
                    t == 27
                      ? (s.verbose("Escape key pressed blurring field"), d.blur(), !0)
                      : !(e.ctrlKey || (t != i && t != n)) &&
                        (s.verbose("Enter/space key pressed, toggling checkbox"),
                        s.toggle(),
                        !0);
                },
                keyup: function(e) {
                  g && e.preventDefault();
                },
              },
              check: function() {
                s.should.allowCheck() &&
                  (s.debug("Checking checkbox", d),
                  s.set.checked(),
                  s.should.ignoreCallbacks() ||
                    (i.onChecked.call(f), i.onChange.call(f)));
              },
              uncheck: function() {
                s.should.allowUncheck() &&
                  (s.debug("Unchecking checkbox"),
                  s.set.unchecked(),
                  s.should.ignoreCallbacks() ||
                    (i.onUnchecked.call(f), i.onChange.call(f)));
              },
              indeterminate: function() {
                s.should.allowIndeterminate()
                  ? s.debug("Checkbox is already indeterminate")
                  : (s.debug("Making checkbox indeterminate"),
                    s.set.indeterminate(),
                    s.should.ignoreCallbacks() ||
                      (i.onIndeterminate.call(f), i.onChange.call(f)));
              },
              determinate: function() {
                s.should.allowDeterminate()
                  ? s.debug("Checkbox is already determinate")
                  : (s.debug("Making checkbox determinate"),
                    s.set.determinate(),
                    s.should.ignoreCallbacks() ||
                      (i.onDeterminate.call(f), i.onChange.call(f)));
              },
              enable: function() {
                s.is.enabled()
                  ? s.debug("Checkbox is already enabled")
                  : (s.debug("Enabling checkbox"),
                    s.set.enabled(),
                    i.onEnable.call(f),
                    i.onEnabled.call(f));
              },
              disable: function() {
                s.is.disabled()
                  ? s.debug("Checkbox is already disabled")
                  : (s.debug("Disabling checkbox"),
                    s.set.disabled(),
                    i.onDisable.call(f),
                    i.onDisabled.call(f));
              },
              get: {
                radios: function() {
                  var e = s.get.name();
                  return T('input[name="' + e + '"]').closest(o.checkbox);
                },
                otherRadios: function() {
                  return s.get.radios().not(c);
                },
                name: function() {
                  return d.attr("name");
                },
              },
              is: {
                initialLoad: function() {
                  return m;
                },
                radio: function() {
                  return d.hasClass(t.radio) || "radio" == d.attr("type");
                },
                indeterminate: function() {
                  return d.prop("indeterminate") !== D && d.prop("indeterminate");
                },
                checked: function() {
                  return d.prop("checked") !== D && d.prop("checked");
                },
                disabled: function() {
                  return d.prop("disabled") !== D && d.prop("disabled");
                },
                enabled: function() {
                  return !s.is.disabled();
                },
                determinate: function() {
                  return !s.is.indeterminate();
                },
                unchecked: function() {
                  return !s.is.checked();
                },
              },
              should: {
                allowCheck: function() {
                  return s.is.determinate() &&
                    s.is.checked() &&
                    !s.should.forceCallbacks()
                    ? (s.debug("Should not allow check, checkbox is already checked"), !1)
                    : !1 !== i.beforeChecked.apply(f) ||
                        (s.debug("Should not allow check, beforeChecked cancelled"), !1);
                },
                allowUncheck: function() {
                  return s.is.determinate() &&
                    s.is.unchecked() &&
                    !s.should.forceCallbacks()
                    ? (s.debug("Should not allow uncheck, checkbox is already unchecked"),
                      !1)
                    : !1 !== i.beforeUnchecked.apply(f) ||
                        (s.debug("Should not allow uncheck, beforeUnchecked cancelled"),
                        !1);
                },
                allowIndeterminate: function() {
                  return s.is.indeterminate() && !s.should.forceCallbacks()
                    ? (s.debug(
                        "Should not allow indeterminate, checkbox is already indeterminate"
                      ),
                      !1)
                    : !1 !== i.beforeIndeterminate.apply(f) ||
                        (s.debug(
                          "Should not allow indeterminate, beforeIndeterminate cancelled"
                        ),
                        !1);
                },
                allowDeterminate: function() {
                  return s.is.determinate() && !s.should.forceCallbacks()
                    ? (s.debug(
                        "Should not allow determinate, checkbox is already determinate"
                      ),
                      !1)
                    : !1 !== i.beforeDeterminate.apply(f) ||
                        (s.debug(
                          "Should not allow determinate, beforeDeterminate cancelled"
                        ),
                        !1);
                },
                forceCallbacks: function() {
                  return s.is.initialLoad() && i.fireOnInit;
                },
                ignoreCallbacks: function() {
                  return m && !i.fireOnInit;
                },
              },
              can: {
                change: function() {
                  return !(
                    c.hasClass(t.disabled) ||
                    c.hasClass(t.readOnly) ||
                    d.prop("disabled") ||
                    d.prop("readonly")
                  );
                },
                uncheck: function() {
                  return "boolean" == typeof i.uncheckable
                    ? i.uncheckable
                    : !s.is.radio();
                },
              },
              set: {
                initialLoad: function() {
                  m = !0;
                },
                checked: function() {
                  s.verbose("Setting class to checked"),
                    c.removeClass(t.indeterminate).addClass(t.checked),
                    s.is.radio() && s.uncheckOthers(),
                    s.is.indeterminate() || !s.is.checked()
                      ? (s.verbose("Setting state to checked", f),
                        d.prop("indeterminate", !1).prop("checked", !0),
                        s.trigger.change())
                      : s.debug(
                          "Input is already checked, skipping input property change"
                        );
                },
                unchecked: function() {
                  s.verbose("Removing checked class"),
                    c.removeClass(t.indeterminate).removeClass(t.checked),
                    s.is.indeterminate() || !s.is.unchecked()
                      ? (s.debug("Setting state to unchecked"),
                        d.prop("indeterminate", !1).prop("checked", !1),
                        s.trigger.change())
                      : s.debug("Input is already unchecked");
                },
                indeterminate: function() {
                  s.verbose("Setting class to indeterminate"),
                    c.addClass(t.indeterminate),
                    s.is.indeterminate()
                      ? s.debug(
                          "Input is already indeterminate, skipping input property change"
                        )
                      : (s.debug("Setting state to indeterminate"),
                        d.prop("indeterminate", !0),
                        s.trigger.change());
                },
                determinate: function() {
                  s.verbose("Removing indeterminate class"),
                    c.removeClass(t.indeterminate),
                    s.is.determinate()
                      ? s.debug(
                          "Input is already determinate, skipping input property change"
                        )
                      : (s.debug("Setting state to determinate"),
                        d.prop("indeterminate", !1));
                },
                disabled: function() {
                  s.verbose("Setting class to disabled"),
                    c.addClass(t.disabled),
                    s.is.disabled()
                      ? s.debug(
                          "Input is already disabled, skipping input property change"
                        )
                      : (s.debug("Setting state to disabled"),
                        d.prop("disabled", "disabled"),
                        s.trigger.change());
                },
                enabled: function() {
                  s.verbose("Removing disabled class"),
                    c.removeClass(t.disabled),
                    s.is.enabled()
                      ? s.debug(
                          "Input is already enabled, skipping input property change"
                        )
                      : (s.debug("Setting state to enabled"),
                        d.prop("disabled", !1),
                        s.trigger.change());
                },
                tabbable: function() {
                  s.verbose("Adding tabindex to checkbox"),
                    d.attr("tabindex") === D && d.attr("tabindex", 0);
                },
              },
              remove: {
                initialLoad: function() {
                  m = !1;
                },
              },
              trigger: {
                change: function() {
                  var e = E.createEvent("HTMLEvents"),
                    t = d[0];
                  t &&
                    (s.verbose("Triggering native change event"),
                    e.initEvent("change", !0, !1),
                    t.dispatchEvent(e));
                },
              },
              create: {
                label: function() {
                  0 < d.prevAll(o.label).length
                    ? (d
                        .prev(o.label)
                        .detach()
                        .insertAfter(d),
                      s.debug("Moving existing label", u))
                    : s.has.label() ||
                      ((u = T("<label>").insertAfter(d)), s.debug("Creating label", u));
                },
              },
              has: {
                label: function() {
                  return 0 < u.length;
                },
              },
              bind: {
                events: function() {
                  s.verbose("Attaching checkbox events"),
                    c
                      .on("click" + a, s.event.click)
                      .on("keydown" + a, o.input, s.event.keydown)
                      .on("keyup" + a, o.input, s.event.keyup);
                },
              },
              unbind: {
                events: function() {
                  s.debug("Removing events"), c.off(a);
                },
              },
              uncheckOthers: function() {
                var e = s.get.otherRadios();
                s.debug("Unchecking other radios", e), e.removeClass(t.checked);
              },
              toggle: function() {
                s.can.change()
                  ? s.is.indeterminate() || s.is.unchecked()
                    ? (s.debug("Currently unchecked"), s.check())
                    : s.is.checked() &&
                      s.can.uncheck() &&
                      (s.debug("Currently checked"), s.uncheck())
                  : s.is.radio() ||
                    s.debug("Checkbox is read-only or disabled, ignoring toggle");
              },
              setting: function(e, t) {
                if ((s.debug("Changing setting", e, t), T.isPlainObject(e)))
                  T.extend(!0, i, e);
                else {
                  if (t === D) return i[e];
                  T.isPlainObject(i[e]) ? T.extend(!0, i[e], t) : (i[e] = t);
                }
              },
              internal: function(e, t) {
                if (T.isPlainObject(e)) T.extend(!0, s, e);
                else {
                  if (t === D) return s[e];
                  s[e] = t;
                }
              },
              debug: function() {
                !i.silent &&
                  i.debug &&
                  (i.performance
                    ? s.performance.log(arguments)
                    : ((s.debug = Function.prototype.bind.call(
                        console.info,
                        console,
                        i.name + ":"
                      )),
                      s.debug.apply(console, arguments)));
              },
              verbose: function() {
                !i.silent &&
                  i.verbose &&
                  i.debug &&
                  (i.performance
                    ? s.performance.log(arguments)
                    : ((s.verbose = Function.prototype.bind.call(
                        console.info,
                        console,
                        i.name + ":"
                      )),
                      s.verbose.apply(console, arguments)));
              },
              error: function() {
                i.silent ||
                  ((s.error = Function.prototype.bind.call(
                    console.error,
                    console,
                    i.name + ":"
                  )),
                  s.error.apply(console, arguments));
              },
              performance: {
                log: function(e) {
                  var t, n;
                  i.performance &&
                    ((n = (t = new Date().getTime()) - (w || t)),
                    (w = t),
                    C.push({
                      Name: e[0],
                      Arguments: [].slice.call(e, 1) || "",
                      Element: h,
                      "Execution Time": n,
                    })),
                    clearTimeout(s.performance.timer),
                    (s.performance.timer = setTimeout(s.performance.display, 500));
                },
                display: function() {
                  var e = i.name + ":",
                    n = 0;
                  (w = !1),
                    clearTimeout(s.performance.timer),
                    T.each(C, function(e, t) {
                      n += t["Execution Time"];
                    }),
                    (e += " " + n + "ms"),
                    y && (e += " '" + y + "'"),
                    (console.group !== D || console.table !== D) &&
                      0 < C.length &&
                      (console.groupCollapsed(e),
                      console.table
                        ? console.table(C)
                        : T.each(C, function(e, t) {
                            console.log(t.Name + ": " + t["Execution Time"] + "ms");
                          }),
                      console.groupEnd()),
                    (C = []);
                },
              },
              invoke: function(i, e, t) {
                var o,
                  a,
                  n,
                  r = p;
                return (
                  (e = e || S),
                  (t = h || t),
                  "string" == typeof i &&
                    r !== D &&
                    ((i = i.split(/[\. ]/)),
                    (o = i.length - 1),
                    T.each(i, function(e, t) {
                      var n =
                        e != o
                          ? t + i[e + 1].charAt(0).toUpperCase() + i[e + 1].slice(1)
                          : i;
                      if (T.isPlainObject(r[n]) && e != o) r = r[n];
                      else {
                        if (r[n] !== D) return (a = r[n]), !1;
                        if (!T.isPlainObject(r[t]) || e == o)
                          return r[t] !== D ? (a = r[t]) : s.error(l.method, i), !1;
                        r = r[t];
                      }
                    })),
                  T.isFunction(a) ? (n = a.apply(t, e)) : a !== D && (n = a),
                  T.isArray(b) ? b.push(n) : b !== D ? (b = [b, n]) : n !== D && (b = n),
                  a
                );
              },
            }),
              k
                ? (p === D && s.initialize(), s.invoke(x))
                : (p !== D && p.invoke("destroy"), s.initialize());
          }),
          b !== D ? b : this
        );
      }),
      (T.fn.checkbox.settings = {
        name: "Checkbox",
        namespace: "checkbox",
        silent: !1,
        debug: !1,
        verbose: !0,
        performance: !0,
        uncheckable: "auto",
        fireOnInit: !1,
        onChange: function() {},
        beforeChecked: function() {},
        beforeUnchecked: function() {},
        beforeDeterminate: function() {},
        beforeIndeterminate: function() {},
        onChecked: function() {},
        onUnchecked: function() {},
        onDeterminate: function() {},
        onIndeterminate: function() {},
        onEnable: function() {},
        onDisable: function() {},
        onEnabled: function() {},
        onDisabled: function() {},
        className: {
          checked: "checked",
          indeterminate: "indeterminate",
          disabled: "disabled",
          hidden: "hidden",
          radio: "radio",
          readOnly: "read-only",
        },
        error: { method: "The method you called is not defined" },
        selector: {
          checkbox: ".ui.checkbox",
          label: "label, .box",
          input: 'input[type="checkbox"], input[type="radio"]',
          link: "a[href]",
        },
      });
  })(jQuery, window, document),
  (function(k, e, S, T) {
    "use strict";
    (e =
      void 0 !== e && e.Math == Math
        ? e
        : "undefined" != typeof self && self.Math == Math
        ? self
        : Function("return this")()),
      (k.fn.dimmer = function(p) {
        var h,
          v = k(this),
          b = new Date().getTime(),
          y = [],
          w = p,
          C = "string" == typeof w,
          x = [].slice.call(arguments, 1);
        return (
          v.each(function() {
            var a,
              t,
              s,
              r = k.isPlainObject(p)
                ? k.extend(!0, {}, k.fn.dimmer.settings, p)
                : k.extend({}, k.fn.dimmer.settings),
              n = r.selector,
              e = r.namespace,
              i = r.className,
              l = r.error,
              o = "." + e,
              c = "module-" + e,
              u = v.selector || "",
              d = "ontouchstart" in S.documentElement ? "touchstart" : "click",
              f = k(this),
              m = this,
              g = f.data(c);
            (s = {
              preinitialize: function() {
                a = s.is.dimmer()
                  ? ((t = f.parent()), f)
                  : ((t = f),
                    s.has.dimmer()
                      ? r.dimmerName
                        ? t.find(n.dimmer).filter("." + r.dimmerName)
                        : t.find(n.dimmer)
                      : s.create());
              },
              initialize: function() {
                s.debug("Initializing dimmer", r),
                  s.bind.events(),
                  s.set.dimmable(),
                  s.instantiate();
              },
              instantiate: function() {
                s.verbose("Storing instance of module", s), (g = s), f.data(c, g);
              },
              destroy: function() {
                s.verbose("Destroying previous module", a),
                  s.unbind.events(),
                  s.remove.variation(),
                  t.off(o);
              },
              bind: {
                events: function() {
                  "hover" == r.on
                    ? t.on("mouseenter" + o, s.show).on("mouseleave" + o, s.hide)
                    : "click" == r.on && t.on(d + o, s.toggle),
                    s.is.page() &&
                      (s.debug("Setting as a page dimmer", t), s.set.pageDimmer()),
                    s.is.closable() &&
                      (s.verbose("Adding dimmer close event", a),
                      t.on(d + o, n.dimmer, s.event.click));
                },
              },
              unbind: {
                events: function() {
                  f.removeData(c), t.off(o);
                },
              },
              event: {
                click: function(e) {
                  s.verbose("Determining if event occured on dimmer", e),
                    (0 === a.find(e.target).length || k(e.target).is(n.content)) &&
                      (s.hide(), e.stopImmediatePropagation());
                },
              },
              addContent: function(e) {
                var t = k(e);
                s.debug("Add content to dimmer", t),
                  t.parent()[0] !== a[0] && t.detach().appendTo(a);
              },
              create: function() {
                var e = k(r.template.dimmer());
                return (
                  r.dimmerName &&
                    (s.debug("Creating named dimmer", r.dimmerName),
                    e.addClass(r.dimmerName)),
                  e.appendTo(t),
                  e
                );
              },
              show: function(e) {
                (e = k.isFunction(e) ? e : function() {}),
                  s.debug("Showing dimmer", a, r),
                  s.set.variation(),
                  (s.is.dimmed() && !s.is.animating()) || !s.is.enabled()
                    ? s.debug("Dimmer is already shown or disabled")
                    : (s.animate.show(e), r.onShow.call(m), r.onChange.call(m));
              },
              hide: function(e) {
                (e = k.isFunction(e) ? e : function() {}),
                  s.is.dimmed() || s.is.animating()
                    ? (s.debug("Hiding dimmer", a),
                      s.animate.hide(e),
                      r.onHide.call(m),
                      r.onChange.call(m))
                    : s.debug("Dimmer is not visible");
              },
              toggle: function() {
                s.verbose("Toggling dimmer visibility", a),
                  s.is.dimmed() ? s.hide() : s.show();
              },
              animate: {
                show: function(e) {
                  (e = k.isFunction(e) ? e : function() {}),
                    r.useCSS && k.fn.transition !== T && a.transition("is supported")
                      ? (r.useFlex
                          ? (s.debug("Using flex dimmer"), s.remove.legacy())
                          : (s.debug("Using legacy non-flex dimmer"), s.set.legacy()),
                        "auto" !== r.opacity && s.set.opacity(),
                        a.transition({
                          displayType: r.useFlex ? "flex" : "block",
                          animation: r.transition + " in",
                          queue: !1,
                          duration: s.get.duration(),
                          useFailSafe: !0,
                          onStart: function() {
                            s.set.dimmed();
                          },
                          onComplete: function() {
                            s.set.active(), e();
                          },
                        }))
                      : (s.verbose("Showing dimmer animation with javascript"),
                        s.set.dimmed(),
                        "auto" == r.opacity && (r.opacity = 0.8),
                        a
                          .stop()
                          .css({ opacity: 0, width: "100%", height: "100%" })
                          .fadeTo(s.get.duration(), r.opacity, function() {
                            a.removeAttr("style"), s.set.active(), e();
                          }));
                },
                hide: function(e) {
                  (e = k.isFunction(e) ? e : function() {}),
                    r.useCSS && k.fn.transition !== T && a.transition("is supported")
                      ? (s.verbose("Hiding dimmer with css"),
                        a.transition({
                          displayType: r.useFlex ? "flex" : "block",
                          animation: r.transition + " out",
                          queue: !1,
                          duration: s.get.duration(),
                          useFailSafe: !0,
                          onStart: function() {
                            s.remove.dimmed();
                          },
                          onComplete: function() {
                            s.remove.variation(), s.remove.active(), e();
                          },
                        }))
                      : (s.verbose("Hiding dimmer with javascript"),
                        s.remove.dimmed(),
                        a.stop().fadeOut(s.get.duration(), function() {
                          s.remove.active(), a.removeAttr("style"), e();
                        }));
                },
              },
              get: {
                dimmer: function() {
                  return a;
                },
                duration: function() {
                  return "object" == typeof r.duration
                    ? s.is.active()
                      ? r.duration.hide
                      : r.duration.show
                    : r.duration;
                },
              },
              has: {
                dimmer: function() {
                  return r.dimmerName
                    ? 0 < f.find(n.dimmer).filter("." + r.dimmerName).length
                    : 0 < f.find(n.dimmer).length;
                },
              },
              is: {
                active: function() {
                  return a.hasClass(i.active);
                },
                animating: function() {
                  return a.is(":animated") || a.hasClass(i.animating);
                },
                closable: function() {
                  return "auto" == r.closable ? "hover" != r.on : r.closable;
                },
                dimmer: function() {
                  return f.hasClass(i.dimmer);
                },
                dimmable: function() {
                  return f.hasClass(i.dimmable);
                },
                dimmed: function() {
                  return t.hasClass(i.dimmed);
                },
                disabled: function() {
                  return t.hasClass(i.disabled);
                },
                enabled: function() {
                  return !s.is.disabled();
                },
                page: function() {
                  return t.is("body");
                },
                pageDimmer: function() {
                  return a.hasClass(i.pageDimmer);
                },
              },
              can: {
                show: function() {
                  return !a.hasClass(i.disabled);
                },
              },
              set: {
                opacity: function(e) {
                  var t = a.css("background-color"),
                    n = t.split(","),
                    i = n && 3 == n.length,
                    o = n && 4 == n.length;
                  (e = 0 === r.opacity ? 0 : r.opacity || e),
                    (t =
                      i || o
                        ? ((n[3] = e + ")"), n.join(","))
                        : "rgba(0, 0, 0, " + e + ")"),
                    s.debug("Setting opacity to", e),
                    a.css("background-color", t);
                },
                legacy: function() {
                  a.addClass(i.legacy);
                },
                active: function() {
                  a.addClass(i.active);
                },
                dimmable: function() {
                  t.addClass(i.dimmable);
                },
                dimmed: function() {
                  t.addClass(i.dimmed);
                },
                pageDimmer: function() {
                  a.addClass(i.pageDimmer);
                },
                disabled: function() {
                  a.addClass(i.disabled);
                },
                variation: function(e) {
                  (e = e || r.variation) && a.addClass(e);
                },
              },
              remove: {
                active: function() {
                  a.removeClass(i.active);
                },
                legacy: function() {
                  a.removeClass(i.legacy);
                },
                dimmed: function() {
                  t.removeClass(i.dimmed);
                },
                disabled: function() {
                  a.removeClass(i.disabled);
                },
                variation: function(e) {
                  (e = e || r.variation) && a.removeClass(e);
                },
              },
              setting: function(e, t) {
                if ((s.debug("Changing setting", e, t), k.isPlainObject(e)))
                  k.extend(!0, r, e);
                else {
                  if (t === T) return r[e];
                  k.isPlainObject(r[e]) ? k.extend(!0, r[e], t) : (r[e] = t);
                }
              },
              internal: function(e, t) {
                if (k.isPlainObject(e)) k.extend(!0, s, e);
                else {
                  if (t === T) return s[e];
                  s[e] = t;
                }
              },
              debug: function() {
                !r.silent &&
                  r.debug &&
                  (r.performance
                    ? s.performance.log(arguments)
                    : ((s.debug = Function.prototype.bind.call(
                        console.info,
                        console,
                        r.name + ":"
                      )),
                      s.debug.apply(console, arguments)));
              },
              verbose: function() {
                !r.silent &&
                  r.verbose &&
                  r.debug &&
                  (r.performance
                    ? s.performance.log(arguments)
                    : ((s.verbose = Function.prototype.bind.call(
                        console.info,
                        console,
                        r.name + ":"
                      )),
                      s.verbose.apply(console, arguments)));
              },
              error: function() {
                r.silent ||
                  ((s.error = Function.prototype.bind.call(
                    console.error,
                    console,
                    r.name + ":"
                  )),
                  s.error.apply(console, arguments));
              },
              performance: {
                log: function(e) {
                  var t, n;
                  r.performance &&
                    ((n = (t = new Date().getTime()) - (b || t)),
                    (b = t),
                    y.push({
                      Name: e[0],
                      Arguments: [].slice.call(e, 1) || "",
                      Element: m,
                      "Execution Time": n,
                    })),
                    clearTimeout(s.performance.timer),
                    (s.performance.timer = setTimeout(s.performance.display, 500));
                },
                display: function() {
                  var e = r.name + ":",
                    n = 0;
                  (b = !1),
                    clearTimeout(s.performance.timer),
                    k.each(y, function(e, t) {
                      n += t["Execution Time"];
                    }),
                    (e += " " + n + "ms"),
                    u && (e += " '" + u + "'"),
                    1 < v.length && (e += " (" + v.length + ")"),
                    (console.group !== T || console.table !== T) &&
                      0 < y.length &&
                      (console.groupCollapsed(e),
                      console.table
                        ? console.table(y)
                        : k.each(y, function(e, t) {
                            console.log(t.Name + ": " + t["Execution Time"] + "ms");
                          }),
                      console.groupEnd()),
                    (y = []);
                },
              },
              invoke: function(i, e, t) {
                var o,
                  a,
                  n,
                  r = g;
                return (
                  (e = e || x),
                  (t = m || t),
                  "string" == typeof i &&
                    r !== T &&
                    ((i = i.split(/[\. ]/)),
                    (o = i.length - 1),
                    k.each(i, function(e, t) {
                      var n =
                        e != o
                          ? t + i[e + 1].charAt(0).toUpperCase() + i[e + 1].slice(1)
                          : i;
                      if (k.isPlainObject(r[n]) && e != o) r = r[n];
                      else {
                        if (r[n] !== T) return (a = r[n]), !1;
                        if (!k.isPlainObject(r[t]) || e == o)
                          return r[t] !== T ? (a = r[t]) : s.error(l.method, i), !1;
                        r = r[t];
                      }
                    })),
                  k.isFunction(a) ? (n = a.apply(t, e)) : a !== T && (n = a),
                  k.isArray(h) ? h.push(n) : h !== T ? (h = [h, n]) : n !== T && (h = n),
                  a
                );
              },
            }).preinitialize(),
              C
                ? (g === T && s.initialize(), s.invoke(w))
                : (g !== T && g.invoke("destroy"), s.initialize());
          }),
          h !== T ? h : this
        );
      }),
      (k.fn.dimmer.settings = {
        name: "Dimmer",
        namespace: "dimmer",
        silent: !1,
        debug: !1,
        verbose: !1,
        performance: !0,
        useFlex: !0,
        dimmerName: !1,
        variation: !1,
        closable: "auto",
        useCSS: !0,
        transition: "fade",
        on: !1,
        opacity: "auto",
        duration: { show: 500, hide: 500 },
        onChange: function() {},
        onShow: function() {},
        onHide: function() {},
        error: { method: "The method you called is not defined." },
        className: {
          active: "active",
          animating: "animating",
          dimmable: "dimmable",
          dimmed: "dimmed",
          dimmer: "dimmer",
          disabled: "disabled",
          hide: "hide",
          legacy: "legacy",
          pageDimmer: "page",
          show: "show",
        },
        selector: {
          dimmer: "> .ui.dimmer",
          content: ".ui.dimmer > .content, .ui.dimmer > .content > .center",
        },
        template: {
          dimmer: function() {
            return k("<div />").attr("class", "ui dimmer");
          },
        },
      });
  })(jQuery, window, document),
  (function(X, G, Y, Z) {
    "use strict";
    (G =
      void 0 !== G && G.Math == Math
        ? G
        : "undefined" != typeof self && self.Math == Math
        ? self
        : Function("return this")()),
      (X.fn.dropdown = function(j) {
        var z,
          V = X(this),
          N = X(Y),
          H = V.selector || "",
          U = "ontouchstart" in Y.documentElement,
          W = new Date().getTime(),
          B = [],
          K = j,
          $ = "string" == typeof K,
          Q = [].slice.call(arguments, 1);
        return (
          V.each(function(n) {
            var e,
              t,
              i,
              o,
              a,
              r,
              s,
              g,
              p = X.isPlainObject(j)
                ? X.extend(!0, {}, X.fn.dropdown.settings, j)
                : X.extend({}, X.fn.dropdown.settings),
              h = p.className,
              c = p.message,
              l = p.fields,
              v = p.keys,
              b = p.metadata,
              u = p.namespace,
              d = p.regExp,
              y = p.selector,
              f = p.error,
              m = p.templates,
              w = "." + u,
              C = "module-" + u,
              x = X(this),
              k = X(p.context),
              S = x.find(y.text),
              T = x.find(y.search),
              A = x.find(y.sizer),
              E = x.find(y.input),
              D = x.find(y.icon),
              F = 0 < x.prev().find(y.text).length ? x.prev().find(y.text) : x.prev(),
              O = x.children(y.menu),
              R = O.find(y.item),
              P = !1,
              q = !1,
              M = !1,
              L = this,
              I = x.data(C);
            (g = {
              initialize: function() {
                g.debug("Initializing dropdown", p),
                  g.is.alreadySetup()
                    ? g.setup.reference()
                    : (g.setup.layout(),
                      p.values && g.change.values(p.values),
                      g.refreshData(),
                      g.save.defaults(),
                      g.restore.selected(),
                      g.create.id(),
                      g.bind.events(),
                      g.observeChanges(),
                      g.instantiate());
              },
              instantiate: function() {
                g.verbose("Storing instance of dropdown", g), (I = g), x.data(C, g);
              },
              destroy: function() {
                g.verbose("Destroying previous dropdown", x),
                  g.remove.tabbable(),
                  x.off(w).removeData(C),
                  O.off(w),
                  N.off(o),
                  g.disconnect.menuObserver(),
                  g.disconnect.selectObserver();
              },
              observeChanges: function() {
                "MutationObserver" in G &&
                  ((r = new MutationObserver(g.event.select.mutation)),
                  (s = new MutationObserver(g.event.menu.mutation)),
                  g.debug("Setting up mutation observer", r, s),
                  g.observe.select(),
                  g.observe.menu());
              },
              disconnect: {
                menuObserver: function() {
                  s && s.disconnect();
                },
                selectObserver: function() {
                  r && r.disconnect();
                },
              },
              observe: {
                select: function() {
                  g.has.input() && r.observe(x[0], { childList: !0, subtree: !0 });
                },
                menu: function() {
                  g.has.menu() && s.observe(O[0], { childList: !0, subtree: !0 });
                },
              },
              create: {
                id: function() {
                  (a = (Math.random().toString(16) + "000000000").substr(2, 8)),
                    (o = "." + a),
                    g.verbose("Creating unique id for element", a);
                },
                userChoice: function(e) {
                  var n, i, o;
                  return (
                    !!(e = e || g.get.userValues()) &&
                    ((e = X.isArray(e) ? e : [e]),
                    X.each(e, function(e, t) {
                      !1 === g.get.item(t) &&
                        ((o = p.templates.addition(g.add.variables(c.addResult, t))),
                        (i = X("<div />")
                          .html(o)
                          .attr("data-" + b.value, t)
                          .attr("data-" + b.text, t)
                          .addClass(h.addition)
                          .addClass(h.item)),
                        p.hideAdditions && i.addClass(h.hidden),
                        (n = n === Z ? i : n.add(i)),
                        g.verbose("Creating user choices for value", t, i));
                    }),
                    n)
                  );
                },
                userLabels: function(e) {
                  var t = g.get.userValues();
                  t &&
                    (g.debug("Adding user labels", t),
                    X.each(t, function(e, t) {
                      g.verbose("Adding custom user value"), g.add.label(t, t);
                    }));
                },
                menu: function() {
                  O = X("<div />")
                    .addClass(h.menu)
                    .appendTo(x);
                },
                sizer: function() {
                  A = X("<span />")
                    .addClass(h.sizer)
                    .insertAfter(T);
                },
              },
              search: function(e) {
                (e = e !== Z ? e : g.get.query()),
                  g.verbose("Searching for query", e),
                  g.has.minCharacters(e) ? g.filter(e) : g.hide();
              },
              select: {
                firstUnfiltered: function() {
                  g.verbose("Selecting first non-filtered element"),
                    g.remove.selectedItem(),
                    R.not(y.unselectable)
                      .not(y.addition + y.hidden)
                      .eq(0)
                      .addClass(h.selected);
                },
                nextAvailable: function(e) {
                  var t = (e = e.eq(0))
                      .nextAll(y.item)
                      .not(y.unselectable)
                      .eq(0),
                    n = e
                      .prevAll(y.item)
                      .not(y.unselectable)
                      .eq(0);
                  0 < t.length
                    ? (g.verbose("Moving selection to", t), t.addClass(h.selected))
                    : (g.verbose("Moving selection to", n), n.addClass(h.selected));
                },
              },
              setup: {
                api: function() {
                  var e = {
                    debug: p.debug,
                    urlData: { value: g.get.value(), query: g.get.query() },
                    on: !1,
                  };
                  g.verbose("First request, initializing API"), x.api(e);
                },
                layout: function() {
                  x.is("select") && (g.setup.select(), g.setup.returnedObject()),
                    g.has.menu() || g.create.menu(),
                    g.is.search() &&
                      !g.has.search() &&
                      (g.verbose("Adding search input"),
                      (T = X("<input />")
                        .addClass(h.search)
                        .prop("autocomplete", "off")
                        .insertBefore(S))),
                    g.is.multiple() &&
                      g.is.searchSelection() &&
                      !g.has.sizer() &&
                      g.create.sizer(),
                    p.allowTab && g.set.tabbable();
                },
                select: function() {
                  var e = g.get.selectValues();
                  g.debug("Dropdown initialized on a select", e),
                    x.is("select") && (E = x),
                    0 < E.parent(y.dropdown).length
                      ? (g.debug(
                          "UI dropdown already exists. Creating dropdown menu only"
                        ),
                        (x = E.closest(y.dropdown)),
                        g.has.menu() || g.create.menu(),
                        (O = x.children(y.menu)),
                        g.setup.menu(e))
                      : (g.debug("Creating entire dropdown from select"),
                        (x = X("<div />")
                          .attr("class", E.attr("class"))
                          .addClass(h.selection)
                          .addClass(h.dropdown)
                          .html(m.dropdown(e))
                          .insertBefore(E)),
                        E.hasClass(h.multiple) &&
                          !1 === E.prop("multiple") &&
                          (g.error(f.missingMultiple), E.prop("multiple", !0)),
                        E.is("[multiple]") && g.set.multiple(),
                        E.prop("disabled") &&
                          (g.debug("Disabling dropdown"), x.addClass(h.disabled)),
                        E.removeAttr("class")
                          .detach()
                          .prependTo(x)),
                    g.refresh();
                },
                menu: function(e) {
                  O.html(m.menu(e, l)), (R = O.find(y.item));
                },
                reference: function() {
                  g.debug(
                    "Dropdown behavior was called on select, replacing with closest dropdown"
                  ),
                    (x = x.parent(y.dropdown)),
                    (I = x.data(C)),
                    (L = x.get(0)),
                    g.refresh(),
                    g.setup.returnedObject();
                },
                returnedObject: function() {
                  var e = V.slice(0, n),
                    t = V.slice(n + 1);
                  V = e.add(x).add(t);
                },
              },
              refresh: function() {
                g.refreshSelectors(), g.refreshData();
              },
              refreshItems: function() {
                R = O.find(y.item);
              },
              refreshSelectors: function() {
                g.verbose("Refreshing selector cache"),
                  (S = x.find(y.text)),
                  (T = x.find(y.search)),
                  (E = x.find(y.input)),
                  (D = x.find(y.icon)),
                  (F =
                    0 < x.prev().find(y.text).length ? x.prev().find(y.text) : x.prev()),
                  (O = x.children(y.menu)),
                  (R = O.find(y.item));
              },
              refreshData: function() {
                g.verbose("Refreshing cached metadata"),
                  R.removeData(b.text).removeData(b.value);
              },
              clearData: function() {
                g.verbose("Clearing metadata"),
                  R.removeData(b.text).removeData(b.value),
                  x
                    .removeData(b.defaultText)
                    .removeData(b.defaultValue)
                    .removeData(b.placeholderText);
              },
              toggle: function() {
                g.verbose("Toggling menu visibility"),
                  g.is.active() ? g.hide() : g.show();
              },
              show: function(e) {
                if (
                  ((e = X.isFunction(e) ? e : function() {}),
                  !g.can.show() &&
                    g.is.remote() &&
                    (g.debug("No API results retrieved, searching before show"),
                    g.queryRemote(g.get.query(), g.show)),
                  g.can.show() && !g.is.active())
                ) {
                  if (
                    (g.debug("Showing dropdown"),
                    !g.has.message() ||
                      g.has.maxSelections() ||
                      g.has.allResultsFiltered() ||
                      g.remove.message(),
                    g.is.allFiltered())
                  )
                    return !0;
                  !1 !== p.onShow.call(L) &&
                    g.animate.show(function() {
                      g.can.click() && g.bind.intent(),
                        g.has.menuSearch() && g.focusSearch(),
                        g.set.visible(),
                        e.call(L);
                    });
                }
              },
              hide: function(e) {
                (e = X.isFunction(e) ? e : function() {}),
                  g.is.active() &&
                    !g.is.animatingOutward() &&
                    (g.debug("Hiding dropdown"),
                    !1 !== p.onHide.call(L) &&
                      g.animate.hide(function() {
                        g.remove.visible(), e.call(L);
                      }));
              },
              hideOthers: function() {
                g.verbose("Finding other dropdowns to hide"),
                  V.not(x)
                    .has(y.menu + "." + h.visible)
                    .dropdown("hide");
              },
              hideMenu: function() {
                g.verbose("Hiding menu  instantaneously"),
                  g.remove.active(),
                  g.remove.visible(),
                  O.transition("hide");
              },
              hideSubMenus: function() {
                var e = O.children(y.item).find(y.menu);
                g.verbose("Hiding sub menus", e), e.transition("hide");
              },
              bind: {
                events: function() {
                  U && g.bind.touchEvents(),
                    g.bind.keyboardEvents(),
                    g.bind.inputEvents(),
                    g.bind.mouseEvents();
                },
                touchEvents: function() {
                  g.debug("Touch device detected binding additional touch events"),
                    g.is.searchSelection() ||
                      (g.is.single() && x.on("touchstart" + w, g.event.test.toggle)),
                    O.on("touchstart" + w, y.item, g.event.item.mouseenter);
                },
                keyboardEvents: function() {
                  g.verbose("Binding keyboard events"),
                    x.on("keydown" + w, g.event.keydown),
                    g.has.search() &&
                      x.on(g.get.inputEvent() + w, y.search, g.event.input),
                    g.is.multiple() && N.on("keydown" + o, g.event.document.keydown);
                },
                inputEvents: function() {
                  g.verbose("Binding input change events"),
                    x.on("change" + w, y.input, g.event.change);
                },
                mouseEvents: function() {
                  g.verbose("Binding mouse events"),
                    g.is.multiple() &&
                      x
                        .on("click" + w, y.label, g.event.label.click)
                        .on("click" + w, y.remove, g.event.remove.click),
                    g.is.searchSelection()
                      ? (x
                          .on("mousedown" + w, g.event.mousedown)
                          .on("mouseup" + w, g.event.mouseup)
                          .on("mousedown" + w, y.menu, g.event.menu.mousedown)
                          .on("mouseup" + w, y.menu, g.event.menu.mouseup)
                          .on("click" + w, y.icon, g.event.icon.click)
                          .on("focus" + w, y.search, g.event.search.focus)
                          .on("click" + w, y.search, g.event.search.focus)
                          .on("blur" + w, y.search, g.event.search.blur)
                          .on("click" + w, y.text, g.event.text.focus),
                        g.is.multiple() && x.on("click" + w, g.event.click))
                      : ("click" == p.on
                          ? x.on("click" + w, g.event.test.toggle)
                          : "hover" == p.on
                          ? x
                              .on("mouseenter" + w, g.delay.show)
                              .on("mouseleave" + w, g.delay.hide)
                          : x.on(p.on + w, g.toggle),
                        x
                          .on("click" + w, y.icon, g.event.icon.click)
                          .on("mousedown" + w, g.event.mousedown)
                          .on("mouseup" + w, g.event.mouseup)
                          .on("focus" + w, g.event.focus),
                        g.has.menuSearch()
                          ? x.on("blur" + w, y.search, g.event.search.blur)
                          : x.on("blur" + w, g.event.blur)),
                    O.on("mouseenter" + w, y.item, g.event.item.mouseenter)
                      .on("mouseleave" + w, y.item, g.event.item.mouseleave)
                      .on("click" + w, y.item, g.event.item.click);
                },
                intent: function() {
                  g.verbose("Binding hide intent event to document"),
                    U &&
                      N.on("touchstart" + o, g.event.test.touch).on(
                        "touchmove" + o,
                        g.event.test.touch
                      ),
                    N.on("click" + o, g.event.test.hide);
                },
              },
              unbind: {
                intent: function() {
                  g.verbose("Removing hide intent event from document"),
                    U && N.off("touchstart" + o).off("touchmove" + o),
                    N.off("click" + o);
                },
              },
              filter: function(e) {
                var t = e !== Z ? e : g.get.query(),
                  n = function() {
                    g.is.multiple() && g.filterActive(),
                      (e || (!e && 0 == g.get.activeItem().length)) &&
                        g.select.firstUnfiltered(),
                      g.has.allResultsFiltered()
                        ? p.onNoResults.call(L, t)
                          ? p.allowAdditions
                            ? p.hideAdditions &&
                              (g.verbose(
                                "User addition with no menu, setting empty style"
                              ),
                              g.set.empty(),
                              g.hideMenu())
                            : (g.verbose("All items filtered, showing message", t),
                              g.add.message(c.noResults))
                          : (g.verbose("All items filtered, hiding dropdown", t),
                            g.hideMenu())
                        : (g.remove.empty(), g.remove.message()),
                      p.allowAdditions && g.add.userSuggestion(e),
                      g.is.searchSelection() &&
                        g.can.show() &&
                        g.is.focusedOnSearch() &&
                        g.show();
                  };
                (p.useLabels && g.has.maxSelections()) ||
                  (p.apiSettings
                    ? g.can.useAPI()
                      ? g.queryRemote(t, function() {
                          p.filterRemoteData && g.filterItems(t), n();
                        })
                      : g.error(f.noAPI)
                    : (g.filterItems(t), n()));
              },
              queryRemote: function(e, n) {
                var t = {
                  errorDuration: !1,
                  cache: "local",
                  throttle: p.throttle,
                  urlData: { query: e },
                  onError: function() {
                    g.add.message(c.serverError), n();
                  },
                  onFailure: function() {
                    g.add.message(c.serverError), n();
                  },
                  onSuccess: function(e) {
                    var t = e[l.remoteValues];
                    X.isArray(t) && 0 < t.length
                      ? (g.remove.message(), g.setup.menu({ values: e[l.remoteValues] }))
                      : g.add.message(c.noResults),
                      n();
                  },
                };
                x.api("get request") || g.setup.api(),
                  (t = X.extend(!0, {}, t, p.apiSettings)),
                  x.api("setting", t).api("query");
              },
              filterItems: function(e) {
                var i = e !== Z ? e : g.get.query(),
                  o = null,
                  t = g.escape.string(i),
                  a = new RegExp("^" + t, "igm");
                g.has.query() &&
                  ((o = []),
                  g.verbose("Searching for matching values", i),
                  R.each(function() {
                    var e,
                      t,
                      n = X(this);
                    if ("both" == p.match || "text" == p.match) {
                      if (-1 !== (e = String(g.get.choiceText(n, !1))).search(a))
                        return o.push(this), !0;
                      if ("exact" === p.fullTextSearch && g.exactSearch(i, e))
                        return o.push(this), !0;
                      if (!0 === p.fullTextSearch && g.fuzzySearch(i, e))
                        return o.push(this), !0;
                    }
                    if ("both" == p.match || "value" == p.match) {
                      if (-1 !== (t = String(g.get.choiceValue(n, e))).search(a))
                        return o.push(this), !0;
                      if ("exact" === p.fullTextSearch && g.exactSearch(i, t))
                        return o.push(this), !0;
                      if (!0 === p.fullTextSearch && g.fuzzySearch(i, t))
                        return o.push(this), !0;
                    }
                  })),
                  g.debug("Showing only matched items", i),
                  g.remove.filteredItem(),
                  o && R.not(o).addClass(h.filtered);
              },
              fuzzySearch: function(e, t) {
                var n = t.length,
                  i = e.length;
                if (((e = e.toLowerCase()), (t = t.toLowerCase()), n < i)) return !1;
                if (i === n) return e === t;
                e: for (var o = 0, a = 0; o < i; o++) {
                  for (var r = e.charCodeAt(o); a < n; )
                    if (t.charCodeAt(a++) === r) continue e;
                  return !1;
                }
                return !0;
              },
              exactSearch: function(e, t) {
                return (e = e.toLowerCase()), -1 < (t = t.toLowerCase()).indexOf(e);
              },
              filterActive: function() {
                p.useLabels && R.filter("." + h.active).addClass(h.filtered);
              },
              focusSearch: function(e) {
                g.has.search() &&
                  !g.is.focusedOnSearch() &&
                  (e
                    ? (x.off("focus" + w, y.search),
                      T.focus(),
                      x.on("focus" + w, y.search, g.event.search.focus))
                    : T.focus());
              },
              forceSelection: function() {
                var e = R.not(h.filtered)
                    .filter("." + h.selected)
                    .eq(0),
                  t = R.not(h.filtered)
                    .filter("." + h.active)
                    .eq(0),
                  n = 0 < e.length ? e : t;
                if (0 < n.length && !g.is.multiple())
                  return (
                    g.debug("Forcing partial selection to selected item", n),
                    void g.event.item.click.call(n, {}, !0)
                  );
                p.allowAdditions && g.set.selected(g.get.query()), g.remove.searchTerm();
              },
              change: {
                values: function(e) {
                  p.allowAdditions || g.clear(),
                    g.debug("Creating dropdown with specified values", e),
                    g.setup.menu({ values: e }),
                    X.each(e, function(e, t) {
                      if (1 == t.selected)
                        return (
                          g.debug("Setting initial selection to", t.value),
                          g.set.selected(t.value),
                          !0
                        );
                    });
                },
              },
              event: {
                change: function() {
                  M || (g.debug("Input changed, updating selection"), g.set.selected());
                },
                focus: function() {
                  p.showOnFocus && !P && g.is.hidden() && !t && g.show();
                },
                blur: function(e) {
                  (t = Y.activeElement === this),
                    P || t || (g.remove.activeLabel(), g.hide());
                },
                mousedown: function() {
                  g.is.searchSelection() ? (i = !0) : (P = !0);
                },
                mouseup: function() {
                  g.is.searchSelection() ? (i = !1) : (P = !1);
                },
                click: function(e) {
                  X(e.target).is(x) &&
                    (g.is.focusedOnSearch() ? g.show() : g.focusSearch());
                },
                search: {
                  focus: function() {
                    (P = !0),
                      g.is.multiple() && g.remove.activeLabel(),
                      p.showOnFocus && g.search();
                  },
                  blur: function(e) {
                    (t = Y.activeElement === this),
                      g.is.searchSelection() &&
                        !i &&
                        (q || t || (p.forceSelection && g.forceSelection(), g.hide())),
                      (i = !1);
                  },
                },
                icon: {
                  click: function(e) {
                    D.hasClass(h.clear) ? g.clear() : g.can.click() && g.toggle();
                  },
                },
                text: {
                  focus: function(e) {
                    (P = !0), g.focusSearch();
                  },
                },
                input: function(e) {
                  (g.is.multiple() || g.is.searchSelection()) && g.set.filtered(),
                    clearTimeout(g.timer),
                    (g.timer = setTimeout(g.search, p.delay.search));
                },
                label: {
                  click: function(e) {
                    var t = X(this),
                      n = x.find(y.label),
                      i = n.filter("." + h.active),
                      o = t.nextAll("." + h.active),
                      a = t.prevAll("." + h.active),
                      r =
                        0 < o.length
                          ? t
                              .nextUntil(o)
                              .add(i)
                              .add(t)
                          : t
                              .prevUntil(a)
                              .add(i)
                              .add(t);
                    e.shiftKey
                      ? (i.removeClass(h.active), r.addClass(h.active))
                      : e.ctrlKey
                      ? t.toggleClass(h.active)
                      : (i.removeClass(h.active), t.addClass(h.active)),
                      p.onLabelSelect.apply(this, n.filter("." + h.active));
                  },
                },
                remove: {
                  click: function() {
                    var e = X(this).parent();
                    e.hasClass(h.active)
                      ? g.remove.activeLabels()
                      : g.remove.activeLabels(e);
                  },
                },
                test: {
                  toggle: function(e) {
                    var t = g.is.multiple() ? g.show : g.toggle;
                    g.is.bubbledLabelClick(e) ||
                      g.is.bubbledIconClick(e) ||
                      (g.determine.eventOnElement(e, t) && e.preventDefault());
                  },
                  touch: function(e) {
                    g.determine.eventOnElement(e, function() {
                      "touchstart" == e.type
                        ? (g.timer = setTimeout(function() {
                            g.hide();
                          }, p.delay.touch))
                        : "touchmove" == e.type && clearTimeout(g.timer);
                    }),
                      e.stopPropagation();
                  },
                  hide: function(e) {
                    g.determine.eventInModule(e, g.hide);
                  },
                },
                select: {
                  mutation: function(e) {
                    g.debug("<select> modified, recreating menu");
                    var n = !1;
                    X.each(e, function(e, t) {
                      if (X(t.target).is("select") || X(t.addedNodes).is("select"))
                        return (n = !0);
                    }),
                      n &&
                        (g.disconnect.selectObserver(),
                        g.refresh(),
                        g.setup.select(),
                        g.set.selected(),
                        g.observe.select());
                  },
                },
                menu: {
                  mutation: function(e) {
                    var t = e[0],
                      n = t.addedNodes ? X(t.addedNodes[0]) : X(!1),
                      i = t.removedNodes ? X(t.removedNodes[0]) : X(!1),
                      o = n.add(i),
                      a = o.is(y.addition) || 0 < o.closest(y.addition).length,
                      r = o.is(y.message) || 0 < o.closest(y.message).length;
                    a || r
                      ? (g.debug("Updating item selector cache"), g.refreshItems())
                      : (g.debug("Menu modified, updating selector cache"), g.refresh());
                  },
                  mousedown: function() {
                    q = !0;
                  },
                  mouseup: function() {
                    q = !1;
                  },
                },
                item: {
                  mouseenter: function(e) {
                    var t = X(e.target),
                      n = X(this),
                      i = n.children(y.menu),
                      o = n.siblings(y.item).children(y.menu),
                      a = 0 < i.length;
                    !(0 < i.find(t).length) &&
                      a &&
                      (clearTimeout(g.itemTimer),
                      (g.itemTimer = setTimeout(function() {
                        g.verbose("Showing sub-menu", i),
                          X.each(o, function() {
                            g.animate.hide(!1, X(this));
                          }),
                          g.animate.show(!1, i);
                      }, p.delay.show)),
                      e.preventDefault());
                  },
                  mouseleave: function(e) {
                    var t = X(this).children(y.menu);
                    0 < t.length &&
                      (clearTimeout(g.itemTimer),
                      (g.itemTimer = setTimeout(function() {
                        g.verbose("Hiding sub-menu", t), g.animate.hide(!1, t);
                      }, p.delay.hide)));
                  },
                  click: function(e, t) {
                    var n = X(this),
                      i = X(e ? e.target : ""),
                      o = n.find(y.menu),
                      a = g.get.choiceText(n),
                      r = g.get.choiceValue(n, a),
                      s = 0 < o.length,
                      l = 0 < o.find(i).length;
                    g.has.menuSearch() && X(Y.activeElement).blur(),
                      l ||
                        (s && !p.allowCategorySelection) ||
                        (g.is.searchSelection() &&
                          (p.allowAdditions && g.remove.userAddition(),
                          g.remove.searchTerm(),
                          g.is.focusedOnSearch() || 1 == t || g.focusSearch(!0)),
                        p.useLabels || (g.remove.filteredItem(), g.set.scrollPosition(n)),
                        g.determine.selectAction.call(this, a, r));
                  },
                },
                document: {
                  keydown: function(e) {
                    var t = e.which;
                    if (g.is.inObject(t, v)) {
                      var n = x.find(y.label),
                        i = n.filter("." + h.active),
                        o = (i.data(b.value), n.index(i)),
                        a = n.length,
                        r = 0 < i.length,
                        s = 1 < i.length,
                        l = 0 === o,
                        c = o + 1 == a,
                        u = g.is.searchSelection(),
                        d = g.is.focusedOnSearch(),
                        f = g.is.focused(),
                        m = d && 0 === g.get.caretPosition();
                      if (u && !r && !d) return;
                      t == v.leftArrow
                        ? (!f && !m) || r
                          ? r &&
                            (e.shiftKey
                              ? g.verbose("Adding previous label to selection")
                              : (g.verbose("Selecting previous label"),
                                n.removeClass(h.active)),
                            l && !s
                              ? i.addClass(h.active)
                              : i
                                  .prev(y.siblingLabel)
                                  .addClass(h.active)
                                  .end(),
                            e.preventDefault())
                          : (g.verbose("Selecting previous label"),
                            n.last().addClass(h.active))
                        : t == v.rightArrow
                        ? (f && !r && n.first().addClass(h.active),
                          r &&
                            (e.shiftKey
                              ? g.verbose("Adding next label to selection")
                              : (g.verbose("Selecting next label"),
                                n.removeClass(h.active)),
                            c
                              ? u
                                ? d
                                  ? n.removeClass(h.active)
                                  : g.focusSearch()
                                : s
                                ? i.next(y.siblingLabel).addClass(h.active)
                                : i.addClass(h.active)
                              : i.next(y.siblingLabel).addClass(h.active),
                            e.preventDefault()))
                        : t == v.deleteKey || t == v.backspace
                        ? r
                          ? (g.verbose("Removing active labels"),
                            c && u && !d && g.focusSearch(),
                            i
                              .last()
                              .next(y.siblingLabel)
                              .addClass(h.active),
                            g.remove.activeLabels(i),
                            e.preventDefault())
                          : m &&
                            !r &&
                            t == v.backspace &&
                            (g.verbose("Removing last label on input backspace"),
                            (i = n.last().addClass(h.active)),
                            g.remove.activeLabels(i))
                        : i.removeClass(h.active);
                    }
                  },
                },
                keydown: function(e) {
                  var t = e.which;
                  if (g.is.inObject(t, v)) {
                    var n,
                      i = R.not(y.unselectable)
                        .filter("." + h.selected)
                        .eq(0),
                      o = O.children("." + h.active).eq(0),
                      a = 0 < i.length ? i : o,
                      r =
                        0 < a.length
                          ? a.siblings(":not(." + h.filtered + ")").addBack()
                          : O.children(":not(." + h.filtered + ")"),
                      s = a.children(y.menu),
                      l = a.closest(y.menu),
                      c =
                        l.hasClass(h.visible) ||
                        l.hasClass(h.animating) ||
                        0 < l.parent(y.menu).length,
                      u = 0 < s.length,
                      d = 0 < a.length,
                      f = 0 < a.not(y.unselectable).length,
                      m = t == v.delimiter && p.allowAdditions && g.is.multiple();
                    if (
                      (p.allowAdditions &&
                        p.hideAdditions &&
                        (t == v.enter || m) &&
                        f &&
                        (g.verbose("Selecting item from keyboard shortcut", a),
                        g.event.item.click.call(a, e),
                        g.is.searchSelection() && g.remove.searchTerm()),
                      g.is.visible())
                    ) {
                      if (
                        ((t == v.enter || m) &&
                          (t == v.enter && d && u && !p.allowCategorySelection
                            ? (g.verbose(
                                "Pressed enter on unselectable category, opening sub menu"
                              ),
                              (t = v.rightArrow))
                            : f &&
                              (g.verbose("Selecting item from keyboard shortcut", a),
                              g.event.item.click.call(a, e),
                              g.is.searchSelection() && g.remove.searchTerm()),
                          e.preventDefault()),
                        d &&
                          (t == v.leftArrow &&
                            l[0] !== O[0] &&
                            (g.verbose("Left key pressed, closing sub-menu"),
                            g.animate.hide(!1, l),
                            a.removeClass(h.selected),
                            l.closest(y.item).addClass(h.selected),
                            e.preventDefault()),
                          t == v.rightArrow &&
                            u &&
                            (g.verbose("Right key pressed, opening sub-menu"),
                            g.animate.show(!1, s),
                            a.removeClass(h.selected),
                            s
                              .find(y.item)
                              .eq(0)
                              .addClass(h.selected),
                            e.preventDefault())),
                        t == v.upArrow)
                      ) {
                        if (
                          ((n =
                            d && c
                              ? a.prevAll(y.item + ":not(" + y.unselectable + ")").eq(0)
                              : R.eq(0)),
                          r.index(n) < 0)
                        )
                          return (
                            g.verbose("Up key pressed but reached top of current menu"),
                            void e.preventDefault()
                          );
                        g.verbose("Up key pressed, changing active item"),
                          a.removeClass(h.selected),
                          n.addClass(h.selected),
                          g.set.scrollPosition(n),
                          p.selectOnKeydown && g.is.single() && g.set.selectedItem(n),
                          e.preventDefault();
                      }
                      if (t == v.downArrow) {
                        if (
                          0 ===
                          (n =
                            d && c
                              ? (n = a
                                  .nextAll(y.item + ":not(" + y.unselectable + ")")
                                  .eq(0))
                              : R.eq(0)).length
                        )
                          return (
                            g.verbose(
                              "Down key pressed but reached bottom of current menu"
                            ),
                            void e.preventDefault()
                          );
                        g.verbose("Down key pressed, changing active item"),
                          R.removeClass(h.selected),
                          n.addClass(h.selected),
                          g.set.scrollPosition(n),
                          p.selectOnKeydown && g.is.single() && g.set.selectedItem(n),
                          e.preventDefault();
                      }
                      t == v.pageUp && (g.scrollPage("up"), e.preventDefault()),
                        t == v.pageDown && (g.scrollPage("down"), e.preventDefault()),
                        t == v.escape &&
                          (g.verbose("Escape key pressed, closing dropdown"), g.hide());
                    } else
                      m && e.preventDefault(),
                        t != v.downArrow ||
                          g.is.visible() ||
                          (g.verbose("Down key pressed, showing dropdown"),
                          g.show(),
                          e.preventDefault());
                  } else g.has.search() || g.set.selectedLetter(String.fromCharCode(t));
                },
              },
              trigger: {
                change: function() {
                  var e = Y.createEvent("HTMLEvents"),
                    t = E[0];
                  t &&
                    (g.verbose("Triggering native change event"),
                    e.initEvent("change", !0, !1),
                    t.dispatchEvent(e));
                },
              },
              determine: {
                selectAction: function(e, t) {
                  g.verbose("Determining action", p.action),
                    X.isFunction(g.action[p.action])
                      ? (g.verbose("Triggering preset action", p.action, e, t),
                        g.action[p.action].call(L, e, t, this))
                      : X.isFunction(p.action)
                      ? (g.verbose("Triggering user action", p.action, e, t),
                        p.action.call(L, e, t, this))
                      : g.error(f.action, p.action);
                },
                eventInModule: function(e, t) {
                  var n = X(e.target),
                    i = 0 < n.closest(Y.documentElement).length,
                    o = 0 < n.closest(x).length;
                  return (
                    (t = X.isFunction(t) ? t : function() {}),
                    i && !o
                      ? (g.verbose("Triggering event", t), t(), !0)
                      : (g.verbose("Event occurred in dropdown, canceling callback"), !1)
                  );
                },
                eventOnElement: function(e, t) {
                  var n = X(e.target),
                    i = n.closest(y.siblingLabel),
                    o = Y.body.contains(e.target),
                    a = 0 === x.find(i).length,
                    r = 0 === n.closest(O).length;
                  return (
                    (t = X.isFunction(t) ? t : function() {}),
                    o && a && r
                      ? (g.verbose("Triggering event", t), t(), !0)
                      : (g.verbose("Event occurred in dropdown menu, canceling callback"),
                        !1)
                  );
                },
              },
              action: {
                nothing: function() {},
                activate: function(e, t, n) {
                  if (((t = t !== Z ? t : e), g.can.activate(X(n)))) {
                    if ((g.set.selected(t, X(n)), g.is.multiple() && !g.is.allFiltered()))
                      return;
                    g.hideAndClear();
                  }
                },
                select: function(e, t, n) {
                  if (((t = t !== Z ? t : e), g.can.activate(X(n)))) {
                    if ((g.set.value(t, e, X(n)), g.is.multiple() && !g.is.allFiltered()))
                      return;
                    g.hideAndClear();
                  }
                },
                combo: function(e, t, n) {
                  (t = t !== Z ? t : e), g.set.selected(t, X(n)), g.hideAndClear();
                },
                hide: function(e, t, n) {
                  g.set.value(t, e, X(n)), g.hideAndClear();
                },
              },
              get: {
                id: function() {
                  return a;
                },
                defaultText: function() {
                  return x.data(b.defaultText);
                },
                defaultValue: function() {
                  return x.data(b.defaultValue);
                },
                placeholderText: function() {
                  return "auto" != p.placeholder && "string" == typeof p.placeholder
                    ? p.placeholder
                    : x.data(b.placeholderText) || "";
                },
                text: function() {
                  return S.text();
                },
                query: function() {
                  return X.trim(T.val());
                },
                searchWidth: function(e) {
                  return (e = e !== Z ? e : T.val()), A.text(e), Math.ceil(A.width() + 1);
                },
                selectionCount: function() {
                  var e = g.get.values();
                  return g.is.multiple()
                    ? X.isArray(e)
                      ? e.length
                      : 0
                    : "" !== g.get.value()
                    ? 1
                    : 0;
                },
                transition: function(e) {
                  return "auto" == p.transition
                    ? g.is.upward(e)
                      ? "slide up"
                      : "slide down"
                    : p.transition;
                },
                userValues: function() {
                  var e = g.get.values();
                  return (
                    !!e &&
                    ((e = X.isArray(e) ? e : [e]),
                    X.grep(e, function(e) {
                      return !1 === g.get.item(e);
                    }))
                  );
                },
                uniqueArray: function(n) {
                  return X.grep(n, function(e, t) {
                    return X.inArray(e, n) === t;
                  });
                },
                caretPosition: function() {
                  var e,
                    t,
                    n = T.get(0);
                  return "selectionStart" in n
                    ? n.selectionStart
                    : Y.selection
                    ? (n.focus(),
                      (t = (e = Y.selection.createRange()).text.length),
                      e.moveStart("character", -n.value.length),
                      e.text.length - t)
                    : void 0;
                },
                value: function() {
                  var e = 0 < E.length ? E.val() : x.data(b.value),
                    t = X.isArray(e) && 1 === e.length && "" === e[0];
                  return e === Z || t ? "" : e;
                },
                values: function() {
                  var e = g.get.value();
                  return "" === e
                    ? ""
                    : !g.has.selectInput() && g.is.multiple()
                    ? "string" == typeof e
                      ? e.split(p.delimiter)
                      : ""
                    : e;
                },
                remoteValues: function() {
                  var e = g.get.values(),
                    i = !1;
                  return (
                    e &&
                      ("string" == typeof e && (e = [e]),
                      X.each(e, function(e, t) {
                        var n = g.read.remoteData(t);
                        g.verbose("Restoring value from session data", n, t),
                          n && (i || (i = {}), (i[t] = n));
                      })),
                    i
                  );
                },
                choiceText: function(e, t) {
                  if (((t = t !== Z ? t : p.preserveHTML), e))
                    return (
                      0 < e.find(y.menu).length &&
                        (g.verbose("Retrieving text of element with sub-menu"),
                        (e = e.clone()).find(y.menu).remove(),
                        e.find(y.menuIcon).remove()),
                      e.data(b.text) !== Z
                        ? e.data(b.text)
                        : t
                        ? X.trim(e.html())
                        : X.trim(e.text())
                    );
                },
                choiceValue: function(e, t) {
                  return (
                    (t = t || g.get.choiceText(e)),
                    !!e &&
                      (e.data(b.value) !== Z
                        ? String(e.data(b.value))
                        : "string" == typeof t
                        ? X.trim(t.toLowerCase())
                        : String(t))
                  );
                },
                inputEvent: function() {
                  var e = T[0];
                  return (
                    !!e &&
                    (e.oninput !== Z
                      ? "input"
                      : e.onpropertychange !== Z
                      ? "propertychange"
                      : "keyup")
                  );
                },
                selectValues: function() {
                  var o = { values: [] };
                  return (
                    x.find("option").each(function() {
                      var e = X(this),
                        t = e.html(),
                        n = e.attr("disabled"),
                        i = e.attr("value") !== Z ? e.attr("value") : t;
                      "auto" === p.placeholder && "" === i
                        ? (o.placeholder = t)
                        : o.values.push({ name: t, value: i, disabled: n });
                    }),
                    p.placeholder &&
                      "auto" !== p.placeholder &&
                      (g.debug("Setting placeholder value to", p.placeholder),
                      (o.placeholder = p.placeholder)),
                    p.sortSelect
                      ? (o.values.sort(function(e, t) {
                          return e.name > t.name ? 1 : -1;
                        }),
                        g.debug("Retrieved and sorted values from select", o))
                      : g.debug("Retrieved values from select", o),
                    o
                  );
                },
                activeItem: function() {
                  return R.filter("." + h.active);
                },
                selectedItem: function() {
                  var e = R.not(y.unselectable).filter("." + h.selected);
                  return 0 < e.length ? e : R.eq(0);
                },
                itemWithAdditions: function(e) {
                  var t = g.get.item(e),
                    n = g.create.userChoice(e);
                  return n && 0 < n.length && (t = 0 < t.length ? t.add(n) : n), t;
                },
                item: function(i, o) {
                  var e,
                    a,
                    r = !1;
                  return (
                    (i =
                      i !== Z ? i : g.get.values() !== Z ? g.get.values() : g.get.text()),
                    (e = a ? 0 < i.length : i !== Z && null !== i),
                    (a = g.is.multiple() && X.isArray(i)),
                    (o = "" === i || 0 === i || (o || !1)),
                    e &&
                      R.each(function() {
                        var e = X(this),
                          t = g.get.choiceText(e),
                          n = g.get.choiceValue(e, t);
                        if (null !== n && n !== Z)
                          if (a)
                            (-1 === X.inArray(String(n), i) && -1 === X.inArray(t, i)) ||
                              (r = r ? r.add(e) : e);
                          else if (o) {
                            if (
                              (g.verbose(
                                "Ambiguous dropdown value using strict type check",
                                e,
                                i
                              ),
                              n === i || t === i)
                            )
                              return (r = e), !0;
                          } else if (String(n) == String(i) || t == i)
                            return (
                              g.verbose("Found select item by value", n, i), (r = e), !0
                            );
                      }),
                    r
                  );
                },
              },
              check: {
                maxSelections: function(e) {
                  return (
                    !p.maxSelections ||
                    ((e = e !== Z ? e : g.get.selectionCount()) >= p.maxSelections
                      ? (g.debug("Maximum selection count reached"),
                        p.useLabels &&
                          (R.addClass(h.filtered), g.add.message(c.maxSelections)),
                        !0)
                      : (g.verbose("No longer at maximum selection count"),
                        g.remove.message(),
                        g.remove.filteredItem(),
                        g.is.searchSelection() && g.filterItems(),
                        !1))
                  );
                },
              },
              restore: {
                defaults: function() {
                  g.clear(), g.restore.defaultText(), g.restore.defaultValue();
                },
                defaultText: function() {
                  var e = g.get.defaultText();
                  e === g.get.placeholderText
                    ? (g.debug("Restoring default placeholder text", e),
                      g.set.placeholderText(e))
                    : (g.debug("Restoring default text", e), g.set.text(e));
                },
                placeholderText: function() {
                  g.set.placeholderText();
                },
                defaultValue: function() {
                  var e = g.get.defaultValue();
                  e !== Z &&
                    (g.debug("Restoring default value", e),
                    "" !== e
                      ? (g.set.value(e), g.set.selected())
                      : (g.remove.activeItem(), g.remove.selectedItem()));
                },
                labels: function() {
                  p.allowAdditions &&
                    (p.useLabels || (g.error(f.labels), (p.useLabels = !0)),
                    g.debug("Restoring selected values"),
                    g.create.userLabels()),
                    g.check.maxSelections();
                },
                selected: function() {
                  g.restore.values(),
                    g.is.multiple()
                      ? (g.debug("Restoring previously selected values and labels"),
                        g.restore.labels())
                      : g.debug("Restoring previously selected values");
                },
                values: function() {
                  g.set.initialLoad(),
                    p.apiSettings && p.saveRemoteData && g.get.remoteValues()
                      ? g.restore.remoteValues()
                      : g.set.selected(),
                    g.remove.initialLoad();
                },
                remoteValues: function() {
                  var e = g.get.remoteValues();
                  g.debug("Recreating selected from session data", e),
                    e &&
                      (g.is.single()
                        ? X.each(e, function(e, t) {
                            g.set.text(t);
                          })
                        : X.each(e, function(e, t) {
                            g.add.label(e, t);
                          }));
                },
              },
              read: {
                remoteData: function(e) {
                  var t;
                  if (G.Storage !== Z) return (t = sessionStorage.getItem(e)) !== Z && t;
                  g.error(f.noStorage);
                },
              },
              save: {
                defaults: function() {
                  g.save.defaultText(), g.save.placeholderText(), g.save.defaultValue();
                },
                defaultValue: function() {
                  var e = g.get.value();
                  g.verbose("Saving default value as", e), x.data(b.defaultValue, e);
                },
                defaultText: function() {
                  var e = g.get.text();
                  g.verbose("Saving default text as", e), x.data(b.defaultText, e);
                },
                placeholderText: function() {
                  var e;
                  !1 !== p.placeholder &&
                    S.hasClass(h.placeholder) &&
                    ((e = g.get.text()),
                    g.verbose("Saving placeholder text as", e),
                    x.data(b.placeholderText, e));
                },
                remoteData: function(e, t) {
                  G.Storage !== Z
                    ? (g.verbose("Saving remote data to session storage", t, e),
                      sessionStorage.setItem(t, e))
                    : g.error(f.noStorage);
                },
              },
              clear: function() {
                g.is.multiple() && p.useLabels
                  ? g.remove.labels()
                  : (g.remove.activeItem(), g.remove.selectedItem()),
                  g.set.placeholderText(),
                  g.clearValue();
              },
              clearValue: function() {
                g.set.value("");
              },
              scrollPage: function(e, t) {
                var n,
                  i,
                  o = t || g.get.selectedItem(),
                  a = o.closest(y.menu),
                  r = a.outerHeight(),
                  s = a.scrollTop(),
                  l = R.eq(0).outerHeight(),
                  c = Math.floor(r / l),
                  u = (a.prop("scrollHeight"), "up" == e ? s - l * c : s + l * c),
                  d = R.not(y.unselectable);
                (i = "up" == e ? d.index(o) - c : d.index(o) + c),
                  0 <
                    (n = ("up" == e
                    ? 0 <= i
                    : i < d.length)
                      ? d.eq(i)
                      : "up" == e
                      ? d.first()
                      : d.last()).length &&
                    (g.debug("Scrolling page", e, n),
                    o.removeClass(h.selected),
                    n.addClass(h.selected),
                    p.selectOnKeydown && g.is.single() && g.set.selectedItem(n),
                    a.scrollTop(u));
              },
              set: {
                filtered: function() {
                  var e = g.is.multiple(),
                    t = g.is.searchSelection(),
                    n = e && t,
                    i = t ? g.get.query() : "",
                    o = "string" == typeof i && 0 < i.length,
                    a = g.get.searchWidth(),
                    r = "" !== i;
                  e &&
                    o &&
                    (g.verbose("Adjusting input width", a, p.glyphWidth),
                    T.css("width", a)),
                    o || (n && r)
                      ? (g.verbose("Hiding placeholder text"), S.addClass(h.filtered))
                      : (!e || (n && !r)) &&
                        (g.verbose("Showing placeholder text"),
                        S.removeClass(h.filtered));
                },
                empty: function() {
                  x.addClass(h.empty);
                },
                loading: function() {
                  x.addClass(h.loading);
                },
                placeholderText: function(e) {
                  (e = e || g.get.placeholderText()),
                    g.debug("Setting placeholder text", e),
                    g.set.text(e),
                    S.addClass(h.placeholder);
                },
                tabbable: function() {
                  g.is.searchSelection()
                    ? (g.debug("Added tabindex to searchable dropdown"),
                      T.val("").attr("tabindex", 0),
                      O.attr("tabindex", -1))
                    : (g.debug("Added tabindex to dropdown"),
                      x.attr("tabindex") === Z &&
                        (x.attr("tabindex", 0), O.attr("tabindex", -1)));
                },
                initialLoad: function() {
                  g.verbose("Setting initial load"), (e = !0);
                },
                activeItem: function(e) {
                  p.allowAdditions && 0 < e.filter(y.addition).length
                    ? e.addClass(h.filtered)
                    : e.addClass(h.active);
                },
                partialSearch: function(e) {
                  var t = g.get.query().length;
                  T.val(e.substr(0, t));
                },
                scrollPosition: function(e, t) {
                  var n, i, o, a, r, s;
                  (n = (e = e || g.get.selectedItem()).closest(y.menu)),
                    (i = e && 0 < e.length),
                    (t = t !== Z && t),
                    e &&
                      0 < n.length &&
                      i &&
                      (e.position().top,
                      n.addClass(h.loading),
                      (o = (a = n.scrollTop()) - n.offset().top + e.offset().top),
                      t || ((s = a + n.height() < o + 5), (r = o - 5 < a)),
                      g.debug("Scrolling to active item", o),
                      (t || r || s) && n.scrollTop(o),
                      n.removeClass(h.loading));
                },
                text: function(e) {
                  "select" !== p.action &&
                    ("combo" == p.action
                      ? (g.debug("Changing combo button text", e, F),
                        p.preserveHTML ? F.html(e) : F.text(e))
                      : (e !== g.get.placeholderText() && S.removeClass(h.placeholder),
                        g.debug("Changing text", e, S),
                        S.removeClass(h.filtered),
                        p.preserveHTML ? S.html(e) : S.text(e)));
                },
                selectedItem: function(e) {
                  var t = g.get.choiceValue(e),
                    n = g.get.choiceText(e, !1),
                    i = g.get.choiceText(e, !0);
                  g.debug("Setting user selection to item", e),
                    g.remove.activeItem(),
                    g.set.partialSearch(n),
                    g.set.activeItem(e),
                    g.set.selected(t, e),
                    g.set.text(i);
                },
                selectedLetter: function(e) {
                  var t,
                    n = R.filter("." + h.selected),
                    i = 0 < n.length && g.has.firstLetter(n, e),
                    o = !1;
                  i && ((t = n.nextAll(R).eq(0)), g.has.firstLetter(t, e) && (o = t)),
                    o ||
                      R.each(function() {
                        if (g.has.firstLetter(X(this), e)) return (o = X(this)), !1;
                      }),
                    o &&
                      (g.verbose("Scrolling to next value with letter", e),
                      g.set.scrollPosition(o),
                      n.removeClass(h.selected),
                      o.addClass(h.selected),
                      p.selectOnKeydown && g.is.single() && g.set.selectedItem(o));
                },
                direction: function(e) {
                  "auto" == p.direction
                    ? (g.remove.upward(),
                      g.can.openDownward(e) ? g.remove.upward(e) : g.set.upward(e),
                      g.is.leftward(e) || g.can.openRightward(e) || g.set.leftward(e))
                    : "upward" == p.direction && g.set.upward(e);
                },
                upward: function(e) {
                  (e || x).addClass(h.upward);
                },
                leftward: function(e) {
                  (e || O).addClass(h.leftward);
                },
                value: function(e, t, n) {
                  var i = g.escape.value(e),
                    o = 0 < E.length,
                    a = g.get.values(),
                    r = e !== Z ? String(e) : e;
                  if (o) {
                    if (
                      !p.allowReselection &&
                      r == a &&
                      (g.verbose("Skipping value update already same value", e, a),
                      !g.is.initialLoad())
                    )
                      return;
                    g.is.single() &&
                      g.has.selectInput() &&
                      g.can.extendSelect() &&
                      (g.debug("Adding user option", e), g.add.optionValue(e)),
                      g.debug("Updating input value", i, a),
                      (M = !0),
                      E.val(i),
                      !1 === p.fireOnInit && g.is.initialLoad()
                        ? g.debug("Input native change event ignored on initial load")
                        : g.trigger.change(),
                      (M = !1);
                  } else
                    g.verbose("Storing value in metadata", i, E),
                      i !== a && x.data(b.value, r);
                  g.is.single() &&
                    p.clearable &&
                    (i ? g.set.clearable() : g.remove.clearable()),
                    !1 === p.fireOnInit && g.is.initialLoad()
                      ? g.verbose("No callback on initial load", p.onChange)
                      : p.onChange.call(L, e, t, n);
                },
                active: function() {
                  x.addClass(h.active);
                },
                multiple: function() {
                  x.addClass(h.multiple);
                },
                visible: function() {
                  x.addClass(h.visible);
                },
                exactly: function(e, t) {
                  g.debug("Setting selected to exact values"),
                    g.clear(),
                    g.set.selected(e, t);
                },
                selected: function(e, s) {
                  var l = g.is.multiple();
                  (s = p.allowAdditions
                    ? s || g.get.itemWithAdditions(e)
                    : s || g.get.item(e)) &&
                    (g.debug("Setting selected menu item to", s),
                    g.is.multiple() && g.remove.searchWidth(),
                    g.is.single()
                      ? (g.remove.activeItem(), g.remove.selectedItem())
                      : p.useLabels && g.remove.selectedItem(),
                    s.each(function() {
                      var e = X(this),
                        t = g.get.choiceText(e),
                        n = g.get.choiceValue(e, t),
                        i = e.hasClass(h.filtered),
                        o = e.hasClass(h.active),
                        a = e.hasClass(h.addition),
                        r = l && 1 == s.length;
                      l
                        ? !o || a
                          ? (p.apiSettings && p.saveRemoteData && g.save.remoteData(t, n),
                            p.useLabels
                              ? (g.add.label(n, t, r),
                                g.add.value(n, t, e),
                                g.set.activeItem(e),
                                g.filterActive(),
                                g.select.nextAvailable(s))
                              : (g.add.value(n, t, e),
                                g.set.text(g.add.variables(c.count)),
                                g.set.activeItem(e)))
                          : i ||
                            (g.debug("Selected active value, removing label"),
                            g.remove.selected(n))
                        : (p.apiSettings && p.saveRemoteData && g.save.remoteData(t, n),
                          g.set.text(t),
                          g.set.value(n, t, e),
                          e.addClass(h.active).addClass(h.selected));
                    }));
                },
                clearable: function() {
                  D.addClass(h.clear);
                },
              },
              add: {
                label: function(e, t, n) {
                  var i,
                    o = g.is.searchSelection() ? T : S,
                    a = g.escape.value(e);
                  p.ignoreCase && (a = a.toLowerCase()),
                    (i = X("<a />")
                      .addClass(h.label)
                      .attr("data-" + b.value, a)
                      .html(m.label(a, t))),
                    (i = p.onLabelCreate.call(i, a, t)),
                    g.has.label(e)
                      ? g.debug("User selection already exists, skipping", a)
                      : (p.label.variation && i.addClass(p.label.variation),
                        !0 === n
                          ? (g.debug("Animating in label", i),
                            i
                              .addClass(h.hidden)
                              .insertBefore(o)
                              .transition(p.label.transition, p.label.duration))
                          : (g.debug("Adding selection label", i), i.insertBefore(o)));
                },
                message: function(e) {
                  var t = O.children(y.message),
                    n = p.templates.message(g.add.variables(e));
                  0 < t.length
                    ? t.html(n)
                    : (t = X("<div/>")
                        .html(n)
                        .addClass(h.message)
                        .appendTo(O));
                },
                optionValue: function(e) {
                  var t = g.escape.value(e);
                  0 < E.find('option[value="' + g.escape.string(t) + '"]').length ||
                    (g.disconnect.selectObserver(),
                    g.is.single() &&
                      (g.verbose("Removing previous user addition"),
                      E.find("option." + h.addition).remove()),
                    X("<option/>")
                      .prop("value", t)
                      .addClass(h.addition)
                      .html(e)
                      .appendTo(E),
                    g.verbose("Adding user addition as an <option>", e),
                    g.observe.select());
                },
                userSuggestion: function(e) {
                  var t,
                    n = O.children(y.addition),
                    i = g.get.item(e),
                    o = i && i.not(y.addition).length,
                    a = 0 < n.length;
                  (p.useLabels && g.has.maxSelections()) ||
                    ("" === e || o
                      ? n.remove()
                      : (a
                          ? (n
                              .data(b.value, e)
                              .data(b.text, e)
                              .attr("data-" + b.value, e)
                              .attr("data-" + b.text, e)
                              .removeClass(h.filtered),
                            p.hideAdditions ||
                              ((t = p.templates.addition(
                                g.add.variables(c.addResult, e)
                              )),
                              n.html(t)),
                            g.verbose("Replacing user suggestion with new value", n))
                          : ((n = g.create.userChoice(e)).prependTo(O),
                            g.verbose(
                              "Adding item choice to menu corresponding with user choice addition",
                              n
                            )),
                        (p.hideAdditions && !g.is.allFiltered()) ||
                          n
                            .addClass(h.selected)
                            .siblings()
                            .removeClass(h.selected),
                        g.refreshItems()));
                },
                variables: function(e, t) {
                  var n,
                    i,
                    o = -1 !== e.search("{count}"),
                    a = -1 !== e.search("{maxCount}"),
                    r = -1 !== e.search("{term}");
                  return (
                    g.verbose("Adding templated variables to message", e),
                    o && ((n = g.get.selectionCount()), (e = e.replace("{count}", n))),
                    a &&
                      ((n = g.get.selectionCount()),
                      (e = e.replace("{maxCount}", p.maxSelections))),
                    r && ((i = t || g.get.query()), (e = e.replace("{term}", i))),
                    e
                  );
                },
                value: function(e, t, n) {
                  var i,
                    o = g.get.values();
                  g.has.value(e)
                    ? g.debug("Value already selected")
                    : "" !== e
                    ? ((i = X.isArray(o)
                        ? ((i = o.concat([e])), g.get.uniqueArray(i))
                        : [e]),
                      g.has.selectInput()
                        ? g.can.extendSelect() &&
                          (g.debug("Adding value to select", e, i, E),
                          g.add.optionValue(e))
                        : ((i = i.join(p.delimiter)),
                          g.debug("Setting hidden input to delimited value", i, E)),
                      !1 === p.fireOnInit && g.is.initialLoad()
                        ? g.verbose("Skipping onadd callback on initial load", p.onAdd)
                        : p.onAdd.call(L, e, t, n),
                      g.set.value(i, e, t, n),
                      g.check.maxSelections())
                    : g.debug("Cannot select blank values from multiselect");
                },
              },
              remove: {
                active: function() {
                  x.removeClass(h.active);
                },
                activeLabel: function() {
                  x.find(y.label).removeClass(h.active);
                },
                empty: function() {
                  x.removeClass(h.empty);
                },
                loading: function() {
                  x.removeClass(h.loading);
                },
                initialLoad: function() {
                  e = !1;
                },
                upward: function(e) {
                  (e || x).removeClass(h.upward);
                },
                leftward: function(e) {
                  (e || O).removeClass(h.leftward);
                },
                visible: function() {
                  x.removeClass(h.visible);
                },
                activeItem: function() {
                  R.removeClass(h.active);
                },
                filteredItem: function() {
                  (p.useLabels && g.has.maxSelections()) ||
                    (p.useLabels && g.is.multiple()
                      ? R.not("." + h.active).removeClass(h.filtered)
                      : R.removeClass(h.filtered),
                    g.remove.empty());
                },
                optionValue: function(e) {
                  var t = g.escape.value(e),
                    n = E.find('option[value="' + g.escape.string(t) + '"]');
                  0 < n.length &&
                    n.hasClass(h.addition) &&
                    (r &&
                      (r.disconnect(),
                      g.verbose("Temporarily disconnecting mutation observer")),
                    n.remove(),
                    g.verbose("Removing user addition as an <option>", t),
                    r && r.observe(E[0], { childList: !0, subtree: !0 }));
                },
                message: function() {
                  O.children(y.message).remove();
                },
                searchWidth: function() {
                  T.css("width", "");
                },
                searchTerm: function() {
                  g.verbose("Cleared search term"), T.val(""), g.set.filtered();
                },
                userAddition: function() {
                  R.filter(y.addition).remove();
                },
                selected: function(e, t) {
                  if (
                    !(t = p.allowAdditions
                      ? t || g.get.itemWithAdditions(e)
                      : t || g.get.item(e))
                  )
                    return !1;
                  t.each(function() {
                    var e = X(this),
                      t = g.get.choiceText(e),
                      n = g.get.choiceValue(e, t);
                    g.is.multiple()
                      ? p.useLabels
                        ? (g.remove.value(n, t, e), g.remove.label(n))
                        : (g.remove.value(n, t, e),
                          0 === g.get.selectionCount()
                            ? g.set.placeholderText()
                            : g.set.text(g.add.variables(c.count)))
                      : g.remove.value(n, t, e),
                      e.removeClass(h.filtered).removeClass(h.active),
                      p.useLabels && e.removeClass(h.selected);
                  });
                },
                selectedItem: function() {
                  R.removeClass(h.selected);
                },
                value: function(e, t, n) {
                  var i,
                    o = g.get.values();
                  g.has.selectInput()
                    ? (g.verbose("Input is <select> removing selected option", e),
                      (i = g.remove.arrayValue(e, o)),
                      g.remove.optionValue(e))
                    : (g.verbose("Removing from delimited values", e),
                      (i = (i = g.remove.arrayValue(e, o)).join(p.delimiter))),
                    !1 === p.fireOnInit && g.is.initialLoad()
                      ? g.verbose("No callback on initial load", p.onRemove)
                      : p.onRemove.call(L, e, t, n),
                    g.set.value(i, t, n),
                    g.check.maxSelections();
                },
                arrayValue: function(t, e) {
                  return (
                    X.isArray(e) || (e = [e]),
                    (e = X.grep(e, function(e) {
                      return t != e;
                    })),
                    g.verbose("Removed value from delimited string", t, e),
                    e
                  );
                },
                label: function(e, t) {
                  var n = x
                    .find(y.label)
                    .filter("[data-" + b.value + '="' + g.escape.string(e) + '"]');
                  g.verbose("Removing label", n), n.remove();
                },
                activeLabels: function(e) {
                  (e = e || x.find(y.label).filter("." + h.active)),
                    g.verbose("Removing active label selections", e),
                    g.remove.labels(e);
                },
                labels: function(e) {
                  (e = e || x.find(y.label)),
                    g.verbose("Removing labels", e),
                    e.each(function() {
                      var e = X(this),
                        t = e.data(b.value),
                        n = t !== Z ? String(t) : t,
                        i = g.is.userValue(n);
                      !1 !== p.onLabelRemove.call(e, t)
                        ? (g.remove.message(),
                          i
                            ? (g.remove.value(n), g.remove.label(n))
                            : g.remove.selected(n))
                        : g.debug("Label remove callback cancelled removal");
                    });
                },
                tabbable: function() {
                  g.is.searchSelection()
                    ? (g.debug("Searchable dropdown initialized"),
                      T.removeAttr("tabindex"))
                    : (g.debug("Simple selection dropdown initialized"),
                      x.removeAttr("tabindex")),
                    O.removeAttr("tabindex");
                },
                clearable: function() {
                  D.removeClass(h.clear);
                },
              },
              has: {
                menuSearch: function() {
                  return g.has.search() && 0 < T.closest(O).length;
                },
                search: function() {
                  return 0 < T.length;
                },
                sizer: function() {
                  return 0 < A.length;
                },
                selectInput: function() {
                  return E.is("select");
                },
                minCharacters: function(e) {
                  return (
                    !p.minCharacters ||
                    (e = e !== Z ? String(e) : String(g.get.query())).length >=
                      p.minCharacters
                  );
                },
                firstLetter: function(e, t) {
                  var n;
                  return (
                    !(!e || 0 === e.length || "string" != typeof t) &&
                    ((n = g.get.choiceText(e, !1)),
                    (t = t.toLowerCase()) ==
                      String(n)
                        .charAt(0)
                        .toLowerCase())
                  );
                },
                input: function() {
                  return 0 < E.length;
                },
                items: function() {
                  return 0 < R.length;
                },
                menu: function() {
                  return 0 < O.length;
                },
                message: function() {
                  return 0 !== O.children(y.message).length;
                },
                label: function(e) {
                  var t = g.escape.value(e),
                    n = x.find(y.label);
                  return (
                    p.ignoreCase && (t = t.toLowerCase()),
                    0 <
                      n.filter("[data-" + b.value + '="' + g.escape.string(t) + '"]')
                        .length
                  );
                },
                maxSelections: function() {
                  return p.maxSelections && g.get.selectionCount() >= p.maxSelections;
                },
                allResultsFiltered: function() {
                  var e = R.not(y.addition);
                  return e.filter(y.unselectable).length === e.length;
                },
                userSuggestion: function() {
                  return 0 < O.children(y.addition).length;
                },
                query: function() {
                  return "" !== g.get.query();
                },
                value: function(e) {
                  return p.ignoreCase
                    ? g.has.valueIgnoringCase(e)
                    : g.has.valueMatchingCase(e);
                },
                valueMatchingCase: function(e) {
                  var t = g.get.values();
                  return !!(X.isArray(t) ? t && -1 !== X.inArray(e, t) : t == e);
                },
                valueIgnoringCase: function(n) {
                  var e = g.get.values(),
                    i = !1;
                  return (
                    X.isArray(e) || (e = [e]),
                    X.each(e, function(e, t) {
                      if (String(n).toLowerCase() == String(t).toLowerCase())
                        return !(i = !0);
                    }),
                    i
                  );
                },
              },
              is: {
                active: function() {
                  return x.hasClass(h.active);
                },
                animatingInward: function() {
                  return O.transition("is inward");
                },
                animatingOutward: function() {
                  return O.transition("is outward");
                },
                bubbledLabelClick: function(e) {
                  return X(e.target).is("select, input") && 0 < x.closest("label").length;
                },
                bubbledIconClick: function(e) {
                  return 0 < X(e.target).closest(D).length;
                },
                alreadySetup: function() {
                  return (
                    x.is("select") &&
                    x.parent(y.dropdown).data(C) !== Z &&
                    0 === x.prev().length
                  );
                },
                animating: function(e) {
                  return e
                    ? e.transition && e.transition("is animating")
                    : O.transition && O.transition("is animating");
                },
                leftward: function(e) {
                  return (e || O).hasClass(h.leftward);
                },
                disabled: function() {
                  return x.hasClass(h.disabled);
                },
                focused: function() {
                  return Y.activeElement === x[0];
                },
                focusedOnSearch: function() {
                  return Y.activeElement === T[0];
                },
                allFiltered: function() {
                  return (
                    (g.is.multiple() || g.has.search()) &&
                    !(0 == p.hideAdditions && g.has.userSuggestion()) &&
                    !g.has.message() &&
                    g.has.allResultsFiltered()
                  );
                },
                hidden: function(e) {
                  return !g.is.visible(e);
                },
                initialLoad: function() {
                  return e;
                },
                inObject: function(n, e) {
                  var i = !1;
                  return (
                    X.each(e, function(e, t) {
                      if (t == n) return (i = !0);
                    }),
                    i
                  );
                },
                multiple: function() {
                  return x.hasClass(h.multiple);
                },
                remote: function() {
                  return p.apiSettings && g.can.useAPI();
                },
                single: function() {
                  return !g.is.multiple();
                },
                selectMutation: function(e) {
                  var n = !1;
                  return (
                    X.each(e, function(e, t) {
                      if (t.target && X(t.target).is("select")) return (n = !0);
                    }),
                    n
                  );
                },
                search: function() {
                  return x.hasClass(h.search);
                },
                searchSelection: function() {
                  return g.has.search() && 1 === T.parent(y.dropdown).length;
                },
                selection: function() {
                  return x.hasClass(h.selection);
                },
                userValue: function(e) {
                  return -1 !== X.inArray(e, g.get.userValues());
                },
                upward: function(e) {
                  return (e || x).hasClass(h.upward);
                },
                visible: function(e) {
                  return e ? e.hasClass(h.visible) : O.hasClass(h.visible);
                },
                verticallyScrollableContext: function() {
                  var e = k.get(0) !== G && k.css("overflow-y");
                  return "auto" == e || "scroll" == e;
                },
                horizontallyScrollableContext: function() {
                  var e = k.get(0) !== G && k.css("overflow-X");
                  return "auto" == e || "scroll" == e;
                },
              },
              can: {
                activate: function(e) {
                  return (
                    !!p.useLabels ||
                    (!g.has.maxSelections() ||
                      !(!g.has.maxSelections() || !e.hasClass(h.active)))
                  );
                },
                openDownward: function(e) {
                  var t,
                    n,
                    i = e || O,
                    o = !0;
                  return (
                    i.addClass(h.loading),
                    (n = {
                      context: {
                        offset: k.get(0) === G ? { top: 0, left: 0 } : k.offset(),
                        scrollTop: k.scrollTop(),
                        height: k.outerHeight(),
                      },
                      menu: { offset: i.offset(), height: i.outerHeight() },
                    }),
                    g.is.verticallyScrollableContext() &&
                      (n.menu.offset.top += n.context.scrollTop),
                    (o = (t = {
                      above:
                        n.context.scrollTop <=
                        n.menu.offset.top - n.context.offset.top - n.menu.height,
                      below:
                        n.context.scrollTop + n.context.height >=
                        n.menu.offset.top - n.context.offset.top + n.menu.height,
                    }).below
                      ? (g.verbose("Dropdown can fit in context downward", t), !0)
                      : t.below || t.above
                      ? (g.verbose("Dropdown cannot fit below, opening upward", t), !1)
                      : (g.verbose(
                          "Dropdown cannot fit in either direction, favoring downward",
                          t
                        ),
                        !0)),
                    i.removeClass(h.loading),
                    o
                  );
                },
                openRightward: function(e) {
                  var t,
                    n,
                    i = e || O,
                    o = !0;
                  return (
                    i.addClass(h.loading),
                    (n = {
                      context: {
                        offset: k.get(0) === G ? { top: 0, left: 0 } : k.offset(),
                        scrollLeft: k.scrollLeft(),
                        width: k.outerWidth(),
                      },
                      menu: { offset: i.offset(), width: i.outerWidth() },
                    }),
                    g.is.horizontallyScrollableContext() &&
                      (n.menu.offset.left += n.context.scrollLeft),
                    (t =
                      n.menu.offset.left - n.context.offset.left + n.menu.width >=
                      n.context.scrollLeft + n.context.width) &&
                      (g.verbose("Dropdown cannot fit in context rightward", t),
                      (o = !1)),
                    i.removeClass(h.loading),
                    o
                  );
                },
                click: function() {
                  return U || "click" == p.on;
                },
                extendSelect: function() {
                  return p.allowAdditions || p.apiSettings;
                },
                show: function() {
                  return !g.is.disabled() && (g.has.items() || g.has.message());
                },
                useAPI: function() {
                  return X.fn.api !== Z;
                },
              },
              animate: {
                show: function(e, t) {
                  var n,
                    i = t || O,
                    o = t
                      ? function() {}
                      : function() {
                          g.hideSubMenus(), g.hideOthers(), g.set.active();
                        };
                  (e = X.isFunction(e) ? e : function() {}),
                    g.verbose("Doing menu show animation", i),
                    g.set.direction(t),
                    (n = g.get.transition(t)),
                    g.is.selection() && g.set.scrollPosition(g.get.selectedItem(), !0),
                    (g.is.hidden(i) || g.is.animating(i)) &&
                      ("none" == n
                        ? (o(), i.transition("show"), e.call(L))
                        : X.fn.transition !== Z && x.transition("is supported")
                        ? i.transition({
                            animation: n + " in",
                            debug: p.debug,
                            verbose: p.verbose,
                            duration: p.duration,
                            queue: !0,
                            onStart: o,
                            onComplete: function() {
                              e.call(L);
                            },
                          })
                        : g.error(f.noTransition, n));
                },
                hide: function(e, t) {
                  var n = t || O,
                    i = (t ? p.duration : p.duration,
                    t
                      ? function() {}
                      : function() {
                          g.can.click() && g.unbind.intent(), g.remove.active();
                        }),
                    o = g.get.transition(t);
                  (e = X.isFunction(e) ? e : function() {}),
                    (g.is.visible(n) || g.is.animating(n)) &&
                      (g.verbose("Doing menu hide animation", n),
                      "none" == o
                        ? (i(), n.transition("hide"), e.call(L))
                        : X.fn.transition !== Z && x.transition("is supported")
                        ? n.transition({
                            animation: o + " out",
                            duration: p.duration,
                            debug: p.debug,
                            verbose: p.verbose,
                            queue: !1,
                            onStart: i,
                            onComplete: function() {
                              e.call(L);
                            },
                          })
                        : g.error(f.transition));
                },
              },
              hideAndClear: function() {
                g.remove.searchTerm(),
                  g.has.maxSelections() ||
                    (g.has.search()
                      ? g.hide(function() {
                          g.remove.filteredItem();
                        })
                      : g.hide());
              },
              delay: {
                show: function() {
                  g.verbose("Delaying show event to ensure user intent"),
                    clearTimeout(g.timer),
                    (g.timer = setTimeout(g.show, p.delay.show));
                },
                hide: function() {
                  g.verbose("Delaying hide event to ensure user intent"),
                    clearTimeout(g.timer),
                    (g.timer = setTimeout(g.hide, p.delay.hide));
                },
              },
              escape: {
                value: function(e) {
                  var t = X.isArray(e),
                    n = "string" == typeof e,
                    i = !n && !t,
                    o = n && -1 !== e.search(d.quote),
                    a = [];
                  return i || !o
                    ? e
                    : (g.debug("Encoding quote values for use in select", e),
                      t
                        ? (X.each(e, function(e, t) {
                            a.push(t.replace(d.quote, "&quot;"));
                          }),
                          a)
                        : e.replace(d.quote, "&quot;"));
                },
                string: function(e) {
                  return (e = String(e)).replace(d.escape, "\\$&");
                },
              },
              setting: function(e, t) {
                if ((g.debug("Changing setting", e, t), X.isPlainObject(e)))
                  X.extend(!0, p, e);
                else {
                  if (t === Z) return p[e];
                  X.isPlainObject(p[e]) ? X.extend(!0, p[e], t) : (p[e] = t);
                }
              },
              internal: function(e, t) {
                if (X.isPlainObject(e)) X.extend(!0, g, e);
                else {
                  if (t === Z) return g[e];
                  g[e] = t;
                }
              },
              debug: function() {
                !p.silent &&
                  p.debug &&
                  (p.performance
                    ? g.performance.log(arguments)
                    : ((g.debug = Function.prototype.bind.call(
                        console.info,
                        console,
                        p.name + ":"
                      )),
                      g.debug.apply(console, arguments)));
              },
              verbose: function() {
                !p.silent &&
                  p.verbose &&
                  p.debug &&
                  (p.performance
                    ? g.performance.log(arguments)
                    : ((g.verbose = Function.prototype.bind.call(
                        console.info,
                        console,
                        p.name + ":"
                      )),
                      g.verbose.apply(console, arguments)));
              },
              error: function() {
                p.silent ||
                  ((g.error = Function.prototype.bind.call(
                    console.error,
                    console,
                    p.name + ":"
                  )),
                  g.error.apply(console, arguments));
              },
              performance: {
                log: function(e) {
                  var t, n;
                  p.performance &&
                    ((n = (t = new Date().getTime()) - (W || t)),
                    (W = t),
                    B.push({
                      Name: e[0],
                      Arguments: [].slice.call(e, 1) || "",
                      Element: L,
                      "Execution Time": n,
                    })),
                    clearTimeout(g.performance.timer),
                    (g.performance.timer = setTimeout(g.performance.display, 500));
                },
                display: function() {
                  var e = p.name + ":",
                    n = 0;
                  (W = !1),
                    clearTimeout(g.performance.timer),
                    X.each(B, function(e, t) {
                      n += t["Execution Time"];
                    }),
                    (e += " " + n + "ms"),
                    H && (e += " '" + H + "'"),
                    (console.group !== Z || console.table !== Z) &&
                      0 < B.length &&
                      (console.groupCollapsed(e),
                      console.table
                        ? console.table(B)
                        : X.each(B, function(e, t) {
                            console.log(t.Name + ": " + t["Execution Time"] + "ms");
                          }),
                      console.groupEnd()),
                    (B = []);
                },
              },
              invoke: function(i, e, t) {
                var o,
                  a,
                  n,
                  r = I;
                return (
                  (e = e || Q),
                  (t = L || t),
                  "string" == typeof i &&
                    r !== Z &&
                    ((i = i.split(/[\. ]/)),
                    (o = i.length - 1),
                    X.each(i, function(e, t) {
                      var n =
                        e != o
                          ? t + i[e + 1].charAt(0).toUpperCase() + i[e + 1].slice(1)
                          : i;
                      if (X.isPlainObject(r[n]) && e != o) r = r[n];
                      else {
                        if (r[n] !== Z) return (a = r[n]), !1;
                        if (!X.isPlainObject(r[t]) || e == o)
                          return r[t] !== Z ? (a = r[t]) : g.error(f.method, i), !1;
                        r = r[t];
                      }
                    })),
                  X.isFunction(a) ? (n = a.apply(t, e)) : a !== Z && (n = a),
                  X.isArray(z) ? z.push(n) : z !== Z ? (z = [z, n]) : n !== Z && (z = n),
                  a
                );
              },
            }),
              $
                ? (I === Z && g.initialize(), g.invoke(K))
                : (I !== Z && I.invoke("destroy"), g.initialize());
          }),
          z !== Z ? z : V
        );
      }),
      (X.fn.dropdown.settings = {
        silent: !1,
        debug: !1,
        verbose: !1,
        performance: !0,
        on: "click",
        action: "activate",
        values: !1,
        clearable: !1,
        apiSettings: !1,
        selectOnKeydown: !0,
        minCharacters: 0,
        filterRemoteData: !1,
        saveRemoteData: !0,
        throttle: 200,
        context: G,
        direction: "auto",
        keepOnScreen: !0,
        match: "both",
        fullTextSearch: !1,
        placeholder: "auto",
        preserveHTML: !0,
        sortSelect: !1,
        forceSelection: !0,
        allowAdditions: !1,
        ignoreCase: !1,
        hideAdditions: !0,
        maxSelections: !1,
        useLabels: !0,
        delimiter: ",",
        showOnFocus: !0,
        allowReselection: !1,
        allowTab: !0,
        allowCategorySelection: !1,
        fireOnInit: !1,
        transition: "auto",
        duration: 200,
        glyphWidth: 1.037,
        label: { transition: "scale", duration: 200, variation: !1 },
        delay: { hide: 300, show: 200, search: 20, touch: 50 },
        onChange: function(e, t, n) {},
        onAdd: function(e, t, n) {},
        onRemove: function(e, t, n) {},
        onLabelSelect: function(e) {},
        onLabelCreate: function(e, t) {
          return X(this);
        },
        onLabelRemove: function(e) {
          return !0;
        },
        onNoResults: function(e) {
          return !0;
        },
        onShow: function() {},
        onHide: function() {},
        name: "Dropdown",
        namespace: "dropdown",
        message: {
          addResult: "Add <b>{term}</b>",
          count: "{count} selected",
          maxSelections: "Max {maxCount} selections",
          noResults: "No results found.",
          serverError: "There was an error contacting the server",
        },
        error: {
          action: "You called a dropdown action that was not defined",
          alreadySetup:
            "Once a select has been initialized behaviors must be called on the created ui dropdown",
          labels: "Allowing user additions currently requires the use of labels.",
          missingMultiple:
            "<select> requires multiple property to be set to correctly preserve multiple values",
          method: "The method you called is not defined.",
          noAPI: "The API module is required to load resources remotely",
          noStorage: "Saving remote data requires session storage",
          noTransition:
            "This module requires ui transitions <https://github.com/Semantic-Org/UI-Transition>",
        },
        regExp: { escape: /[-[\]{}()*+?.,\\^$|#\s]/g, quote: /"/g },
        metadata: {
          defaultText: "defaultText",
          defaultValue: "defaultValue",
          placeholderText: "placeholder",
          text: "text",
          value: "value",
        },
        fields: {
          remoteValues: "results",
          values: "values",
          disabled: "disabled",
          name: "name",
          value: "value",
          text: "text",
        },
        keys: {
          backspace: 8,
          delimiter: 188,
          deleteKey: 46,
          enter: 13,
          escape: 27,
          pageUp: 33,
          pageDown: 34,
          leftArrow: 37,
          upArrow: 38,
          rightArrow: 39,
          downArrow: 40,
        },
        selector: {
          addition: ".addition",
          dropdown: ".ui.dropdown",
          hidden: ".hidden",
          icon: "> .dropdown.icon",
          input: '> input[type="hidden"], > select',
          item: ".item",
          label: "> .label",
          remove: "> .label > .delete.icon",
          siblingLabel: ".label",
          menu: ".menu",
          message: ".message",
          menuIcon: ".dropdown.icon",
          search: "input.search, .menu > .search > input, .menu input.search",
          sizer: "> input.sizer",
          text: "> .text:not(.icon)",
          unselectable: ".disabled, .filtered",
        },
        className: {
          active: "active",
          addition: "addition",
          animating: "animating",
          clear: "clear",
          disabled: "disabled",
          empty: "empty",
          dropdown: "ui dropdown",
          filtered: "filtered",
          hidden: "hidden transition",
          item: "item",
          label: "ui label",
          loading: "loading",
          menu: "menu",
          message: "message",
          multiple: "multiple",
          placeholder: "default",
          sizer: "sizer",
          search: "search",
          selected: "selected",
          selection: "selection",
          upward: "upward",
          leftward: "left",
          visible: "visible",
        },
      }),
      (X.fn.dropdown.settings.templates = {
        dropdown: function(e) {
          var t = e.placeholder || !1,
            n = (e.values, "");
          return (
            (n += '<i class="dropdown icon"></i>'),
            e.placeholder
              ? (n += '<div class="default text">' + t + "</div>")
              : (n += '<div class="text"></div>'),
            (n += '<div class="menu">'),
            X.each(e.values, function(e, t) {
              n += t.disabled
                ? '<div class="disabled item" data-value="' +
                  t.value +
                  '">' +
                  t.name +
                  "</div>"
                : '<div class="item" data-value="' + t.value + '">' + t.name + "</div>";
            }),
            (n += "</div>")
          );
        },
        menu: function(e, o) {
          var t = e[o.values] || {},
            a = "";
          return (
            X.each(t, function(e, t) {
              var n = t[o.text] ? 'data-text="' + t[o.text] + '"' : "",
                i = t[o.disabled] ? "disabled " : "";
              (a +=
                '<div class="' + i + 'item" data-value="' + t[o.value] + '"' + n + ">"),
                (a += t[o.name]),
                (a += "</div>");
            }),
            a
          );
        },
        label: function(e, t) {
          return t + '<i class="delete icon"></i>';
        },
        message: function(e) {
          return e;
        },
        addition: function(e) {
          return e;
        },
      });
  })(jQuery, window, document),
  (function(M, L, I, j) {
    "use strict";
    (L =
      void 0 !== L && L.Math == Math
        ? L
        : "undefined" != typeof self && self.Math == Math
        ? self
        : Function("return this")()),
      (M.fn.modal = function(x) {
        var k,
          e = M(this),
          S = M(L),
          T = M(I),
          A = M("body"),
          E = e.selector || "",
          D = new Date().getTime(),
          F = [],
          O = x,
          R = "string" == typeof O,
          P = [].slice.call(arguments, 1),
          q =
            L.requestAnimationFrame ||
            L.mozRequestAnimationFrame ||
            L.webkitRequestAnimationFrame ||
            L.msRequestAnimationFrame ||
            function(e) {
              setTimeout(e, 0);
            };
        return (
          e.each(function() {
            var n,
              i,
              e,
              o,
              a,
              t,
              r,
              s,
              l,
              c = M.isPlainObject(x)
                ? M.extend(!0, {}, M.fn.modal.settings, x)
                : M.extend({}, M.fn.modal.settings),
              u = c.selector,
              d = c.className,
              f = c.namespace,
              m = c.error,
              g = "." + f,
              p = "module-" + f,
              h = M(this),
              v = M(c.context),
              b = h.find(u.close),
              y = this,
              w = h.data(p),
              C = !1;
            (l = {
              initialize: function() {
                l.verbose("Initializing dimmer", v),
                  l.create.id(),
                  l.create.dimmer(),
                  l.refreshModals(),
                  l.bind.events(),
                  c.observeChanges && l.observeChanges(),
                  l.instantiate();
              },
              instantiate: function() {
                l.verbose("Storing instance of modal"), (w = l), h.data(p, w);
              },
              create: {
                dimmer: function() {
                  var e = {
                      debug: c.debug,
                      variation: !c.centered && "top aligned",
                      dimmerName: "modals",
                    },
                    t = M.extend(!0, e, c.dimmerSettings);
                  M.fn.dimmer !== j
                    ? (l.debug("Creating dimmer"),
                      (o = v.dimmer(t)),
                      c.detachable
                        ? (l.verbose("Modal is detachable, moving content into dimmer"),
                          o.dimmer("add content", h))
                        : l.set.undetached(),
                      (a = o.dimmer("get dimmer")))
                    : l.error(m.dimmer);
                },
                id: function() {
                  (r = (Math.random().toString(16) + "000000000").substr(2, 8)),
                    (t = "." + r),
                    l.verbose("Creating unique id for element", r);
                },
              },
              destroy: function() {
                l.verbose("Destroying previous modal"),
                  h.removeData(p).off(g),
                  S.off(t),
                  a.off(t),
                  b.off(g),
                  v.dimmer("destroy");
              },
              observeChanges: function() {
                "MutationObserver" in L &&
                  ((s = new MutationObserver(function(e) {
                    l.debug("DOM tree modified, refreshing"), l.refresh();
                  })).observe(y, { childList: !0, subtree: !0 }),
                  l.debug("Setting up mutation observer", s));
              },
              refresh: function() {
                l.remove.scrolling(),
                  l.cacheSizes(),
                  l.can.useFlex() || l.set.modalOffset(),
                  l.set.screenHeight(),
                  l.set.type();
              },
              refreshModals: function() {
                (i = h.siblings(u.modal)), (n = i.add(h));
              },
              attachEvents: function(e, t) {
                var n = M(e);
                (t = M.isFunction(l[t]) ? l[t] : l.toggle),
                  0 < n.length
                    ? (l.debug("Attaching modal events to element", e, t),
                      n.off(g).on("click" + g, t))
                    : l.error(m.notFound, e);
              },
              bind: {
                events: function() {
                  l.verbose("Attaching events"),
                    h
                      .on("click" + g, u.close, l.event.close)
                      .on("click" + g, u.approve, l.event.approve)
                      .on("click" + g, u.deny, l.event.deny),
                    S.on("resize" + t, l.event.resize);
                },
                scrollLock: function() {
                  o.get(0).addEventListener("touchmove", l.event.preventScroll, {
                    passive: !1,
                  });
                },
              },
              unbind: {
                scrollLock: function() {
                  o.get(0).removeEventListener("touchmove", l.event.preventScroll, {
                    passive: !1,
                  });
                },
              },
              get: {
                id: function() {
                  return (Math.random().toString(16) + "000000000").substr(2, 8);
                },
              },
              event: {
                approve: function() {
                  C || !1 === c.onApprove.call(y, M(this))
                    ? l.verbose("Approve callback returned false cancelling hide")
                    : ((C = !0),
                      l.hide(function() {
                        C = !1;
                      }));
                },
                preventScroll: function(e) {
                  e.preventDefault();
                },
                deny: function() {
                  C || !1 === c.onDeny.call(y, M(this))
                    ? l.verbose("Deny callback returned false cancelling hide")
                    : ((C = !0),
                      l.hide(function() {
                        C = !1;
                      }));
                },
                close: function() {
                  l.hide();
                },
                click: function(e) {
                  if (c.closable) {
                    var t = 0 < M(e.target).closest(u.modal).length,
                      n = M.contains(I.documentElement, e.target);
                    !t &&
                      n &&
                      l.is.active() &&
                      (l.debug("Dimmer clicked, hiding all modals"),
                      l.remove.clickaway(),
                      c.allowMultiple ? l.hide() : l.hideAll());
                  } else l.verbose("Dimmer clicked but closable setting is disabled");
                },
                debounce: function(e, t) {
                  clearTimeout(l.timer), (l.timer = setTimeout(e, t));
                },
                keyboard: function(e) {
                  27 == e.which &&
                    (c.closable
                      ? (l.debug("Escape key pressed hiding modal"), l.hide())
                      : l.debug("Escape key pressed, but closable is set to false"),
                    e.preventDefault());
                },
                resize: function() {
                  o.dimmer("is active") &&
                    (l.is.animating() || l.is.active()) &&
                    q(l.refresh);
                },
              },
              toggle: function() {
                l.is.active() || l.is.animating() ? l.hide() : l.show();
              },
              show: function(e) {
                (e = M.isFunction(e) ? e : function() {}),
                  l.refreshModals(),
                  l.set.dimmerSettings(),
                  l.set.dimmerStyles(),
                  l.showModal(e);
              },
              hide: function(e) {
                (e = M.isFunction(e) ? e : function() {}),
                  l.refreshModals(),
                  l.hideModal(e);
              },
              showModal: function(e) {
                (e = M.isFunction(e) ? e : function() {}),
                  l.is.animating() || !l.is.active()
                    ? (l.showDimmer(),
                      l.cacheSizes(),
                      l.can.useFlex()
                        ? l.remove.legacy()
                        : (l.set.legacy(),
                          l.set.modalOffset(),
                          l.debug("Using non-flex legacy modal positioning.")),
                      l.set.screenHeight(),
                      l.set.type(),
                      l.set.clickaway(),
                      !c.allowMultiple && l.others.active()
                        ? l.hideOthers(l.showModal)
                        : (c.allowMultiple && c.detachable && h.detach().appendTo(a),
                          c.onShow.call(y),
                          c.transition &&
                          M.fn.transition !== j &&
                          h.transition("is supported")
                            ? (l.debug("Showing modal with css animations"),
                              h.transition({
                                debug: c.debug,
                                animation: c.transition + " in",
                                queue: c.queue,
                                duration: c.duration,
                                useFailSafe: !0,
                                onComplete: function() {
                                  c.onVisible.apply(y),
                                    c.keyboardShortcuts && l.add.keyboardShortcuts(),
                                    l.save.focus(),
                                    l.set.active(),
                                    c.autofocus && l.set.autofocus(),
                                    e();
                                },
                              }))
                            : l.error(m.noTransition)))
                    : l.debug("Modal is already visible");
              },
              hideModal: function(e, t) {
                (e = M.isFunction(e) ? e : function() {}),
                  l.debug("Hiding modal"),
                  !1 !== c.onHide.call(y, M(this))
                    ? (l.is.animating() || l.is.active()) &&
                      (c.transition &&
                      M.fn.transition !== j &&
                      h.transition("is supported")
                        ? (l.remove.active(),
                          h.transition({
                            debug: c.debug,
                            animation: c.transition + " out",
                            queue: c.queue,
                            duration: c.duration,
                            useFailSafe: !0,
                            onStart: function() {
                              l.others.active() || t || l.hideDimmer(),
                                c.keyboardShortcuts && l.remove.keyboardShortcuts();
                            },
                            onComplete: function() {
                              c.onHidden.call(y),
                                l.remove.dimmerStyles(),
                                l.restore.focus(),
                                e();
                            },
                          }))
                        : l.error(m.noTransition))
                    : l.verbose("Hide callback returned false cancelling hide");
              },
              showDimmer: function() {
                o.dimmer("is animating") || !o.dimmer("is active")
                  ? (l.debug("Showing dimmer"), o.dimmer("show"))
                  : l.debug("Dimmer already visible");
              },
              hideDimmer: function() {
                o.dimmer("is animating") || o.dimmer("is active")
                  ? (l.unbind.scrollLock(),
                    o.dimmer("hide", function() {
                      l.remove.clickaway(), l.remove.screenHeight();
                    }))
                  : l.debug("Dimmer is not visible cannot hide");
              },
              hideAll: function(e) {
                var t = n.filter("." + d.active + ", ." + d.animating);
                (e = M.isFunction(e) ? e : function() {}),
                  0 < t.length &&
                    (l.debug("Hiding all visible modals"),
                    l.hideDimmer(),
                    t.modal("hide modal", e));
              },
              hideOthers: function(e) {
                var t = i.filter("." + d.active + ", ." + d.animating);
                (e = M.isFunction(e) ? e : function() {}),
                  0 < t.length &&
                    (l.debug("Hiding other modals", i), t.modal("hide modal", e, !0));
              },
              others: {
                active: function() {
                  return 0 < i.filter("." + d.active).length;
                },
                animating: function() {
                  return 0 < i.filter("." + d.animating).length;
                },
              },
              add: {
                keyboardShortcuts: function() {
                  l.verbose("Adding keyboard shortcuts"),
                    T.on("keyup" + g, l.event.keyboard);
                },
              },
              save: {
                focus: function() {
                  0 < M(I.activeElement).closest(h).length ||
                    (e = M(I.activeElement).blur());
                },
              },
              restore: {
                focus: function() {
                  e && 0 < e.length && e.focus();
                },
              },
              remove: {
                active: function() {
                  h.removeClass(d.active);
                },
                legacy: function() {
                  h.removeClass(d.legacy);
                },
                clickaway: function() {
                  a.off("click" + t);
                },
                dimmerStyles: function() {
                  a.removeClass(d.inverted), o.removeClass(d.blurring);
                },
                bodyStyle: function() {
                  "" === A.attr("style") &&
                    (l.verbose("Removing style attribute"), A.removeAttr("style"));
                },
                screenHeight: function() {
                  l.debug("Removing page height"), A.css("height", "");
                },
                keyboardShortcuts: function() {
                  l.verbose("Removing keyboard shortcuts"), T.off("keyup" + g);
                },
                scrolling: function() {
                  o.removeClass(d.scrolling), h.removeClass(d.scrolling);
                },
              },
              cacheSizes: function() {
                h.addClass(d.loading);
                var e = h.prop("scrollHeight"),
                  t = h.outerWidth(),
                  n = h.outerHeight();
                (l.cache !== j && 0 === n) ||
                  ((l.cache = {
                    pageHeight: M(I).outerHeight(),
                    width: t,
                    height: n + c.offset,
                    scrollHeight: e + c.offset,
                    contextHeight: "body" == c.context ? M(L).height() : o.height(),
                  }),
                  (l.cache.topOffset = -l.cache.height / 2)),
                  h.removeClass(d.loading),
                  l.debug("Caching modal and container sizes", l.cache);
              },
              can: {
                useFlex: function() {
                  return "auto" == c.useFlex ? c.detachable && !l.is.ie() : c.useFlex;
                },
                fit: function() {
                  var e = l.cache.contextHeight,
                    t = l.cache.contextHeight / 2,
                    n = l.cache.topOffset,
                    i = l.cache.scrollHeight,
                    o = l.cache.height,
                    a = c.padding;
                  return o < i ? t + n + i + a < e : o + 2 * a < e;
                },
              },
              is: {
                active: function() {
                  return h.hasClass(d.active);
                },
                ie: function() {
                  return (
                    (!L.ActiveXObject && "ActiveXObject" in L) || "ActiveXObject" in L
                  );
                },
                animating: function() {
                  return h.transition("is supported")
                    ? h.transition("is animating")
                    : h.is(":visible");
                },
                scrolling: function() {
                  return o.hasClass(d.scrolling);
                },
                modernBrowser: function() {
                  return !(L.ActiveXObject || "ActiveXObject" in L);
                },
              },
              set: {
                autofocus: function() {
                  var e = h.find("[tabindex], :input").filter(":visible"),
                    t = e.filter("[autofocus]"),
                    n = 0 < t.length ? t.first() : e.first();
                  0 < n.length && n.focus();
                },
                clickaway: function() {
                  a.on("click" + t, l.event.click);
                },
                dimmerSettings: function() {
                  if (M.fn.dimmer !== j) {
                    var e = {
                        debug: c.debug,
                        dimmerName: "modals",
                        closable: "auto",
                        useFlex: l.can.useFlex(),
                        variation: !c.centered && "top aligned",
                        duration: { show: c.duration, hide: c.duration },
                      },
                      t = M.extend(!0, e, c.dimmerSettings);
                    c.inverted &&
                      (t.variation =
                        t.variation !== j ? t.variation + " inverted" : "inverted"),
                      v.dimmer("setting", t);
                  } else l.error(m.dimmer);
                },
                dimmerStyles: function() {
                  c.inverted ? a.addClass(d.inverted) : a.removeClass(d.inverted),
                    c.blurring ? o.addClass(d.blurring) : o.removeClass(d.blurring);
                },
                modalOffset: function() {
                  var e = l.cache.width,
                    t = l.cache.height;
                  h.css({
                    marginTop: c.centered && l.can.fit() ? -t / 2 : 0,
                    marginLeft: -e / 2,
                  }),
                    l.verbose("Setting modal offset for legacy mode");
                },
                screenHeight: function() {
                  l.can.fit()
                    ? A.css("height", "")
                    : (l.debug("Modal is taller than page content, resizing page height"),
                      A.css("height", l.cache.height + 2 * c.padding));
                },
                active: function() {
                  h.addClass(d.active);
                },
                scrolling: function() {
                  o.addClass(d.scrolling), h.addClass(d.scrolling), l.unbind.scrollLock();
                },
                legacy: function() {
                  h.addClass(d.legacy);
                },
                type: function() {
                  l.can.fit()
                    ? (l.verbose("Modal fits on screen"),
                      l.others.active() ||
                        l.others.animating() ||
                        (l.remove.scrolling(), l.bind.scrollLock()))
                    : (l.verbose("Modal cannot fit on screen setting to scrolling"),
                      l.set.scrolling());
                },
                undetached: function() {
                  o.addClass(d.undetached);
                },
              },
              setting: function(e, t) {
                if ((l.debug("Changing setting", e, t), M.isPlainObject(e)))
                  M.extend(!0, c, e);
                else {
                  if (t === j) return c[e];
                  M.isPlainObject(c[e]) ? M.extend(!0, c[e], t) : (c[e] = t);
                }
              },
              internal: function(e, t) {
                if (M.isPlainObject(e)) M.extend(!0, l, e);
                else {
                  if (t === j) return l[e];
                  l[e] = t;
                }
              },
              debug: function() {
                !c.silent &&
                  c.debug &&
                  (c.performance
                    ? l.performance.log(arguments)
                    : ((l.debug = Function.prototype.bind.call(
                        console.info,
                        console,
                        c.name + ":"
                      )),
                      l.debug.apply(console, arguments)));
              },
              verbose: function() {
                !c.silent &&
                  c.verbose &&
                  c.debug &&
                  (c.performance
                    ? l.performance.log(arguments)
                    : ((l.verbose = Function.prototype.bind.call(
                        console.info,
                        console,
                        c.name + ":"
                      )),
                      l.verbose.apply(console, arguments)));
              },
              error: function() {
                c.silent ||
                  ((l.error = Function.prototype.bind.call(
                    console.error,
                    console,
                    c.name + ":"
                  )),
                  l.error.apply(console, arguments));
              },
              performance: {
                log: function(e) {
                  var t, n;
                  c.performance &&
                    ((n = (t = new Date().getTime()) - (D || t)),
                    (D = t),
                    F.push({
                      Name: e[0],
                      Arguments: [].slice.call(e, 1) || "",
                      Element: y,
                      "Execution Time": n,
                    })),
                    clearTimeout(l.performance.timer),
                    (l.performance.timer = setTimeout(l.performance.display, 500));
                },
                display: function() {
                  var e = c.name + ":",
                    n = 0;
                  (D = !1),
                    clearTimeout(l.performance.timer),
                    M.each(F, function(e, t) {
                      n += t["Execution Time"];
                    }),
                    (e += " " + n + "ms"),
                    E && (e += " '" + E + "'"),
                    (console.group !== j || console.table !== j) &&
                      0 < F.length &&
                      (console.groupCollapsed(e),
                      console.table
                        ? console.table(F)
                        : M.each(F, function(e, t) {
                            console.log(t.Name + ": " + t["Execution Time"] + "ms");
                          }),
                      console.groupEnd()),
                    (F = []);
                },
              },
              invoke: function(i, e, t) {
                var o,
                  a,
                  n,
                  r = w;
                return (
                  (e = e || P),
                  (t = y || t),
                  "string" == typeof i &&
                    r !== j &&
                    ((i = i.split(/[\. ]/)),
                    (o = i.length - 1),
                    M.each(i, function(e, t) {
                      var n =
                        e != o
                          ? t + i[e + 1].charAt(0).toUpperCase() + i[e + 1].slice(1)
                          : i;
                      if (M.isPlainObject(r[n]) && e != o) r = r[n];
                      else {
                        if (r[n] !== j) return (a = r[n]), !1;
                        if (!M.isPlainObject(r[t]) || e == o)
                          return r[t] !== j && (a = r[t]), !1;
                        r = r[t];
                      }
                    })),
                  M.isFunction(a) ? (n = a.apply(t, e)) : a !== j && (n = a),
                  M.isArray(k) ? k.push(n) : k !== j ? (k = [k, n]) : n !== j && (k = n),
                  a
                );
              },
            }),
              R
                ? (w === j && l.initialize(), l.invoke(O))
                : (w !== j && w.invoke("destroy"), l.initialize());
          }),
          k !== j ? k : this
        );
      }),
      (M.fn.modal.settings = {
        name: "Modal",
        namespace: "modal",
        useFlex: "auto",
        offset: 0,
        silent: !1,
        debug: !1,
        verbose: !1,
        performance: !0,
        observeChanges: !1,
        allowMultiple: !1,
        detachable: !0,
        closable: !0,
        autofocus: !0,
        inverted: !1,
        blurring: !1,
        centered: !0,
        dimmerSettings: { closable: !1, useCSS: !0 },
        keyboardShortcuts: !0,
        context: "body",
        queue: !1,
        duration: 500,
        transition: "scale",
        padding: 50,
        onShow: function() {},
        onVisible: function() {},
        onHide: function() {
          return !0;
        },
        onHidden: function() {},
        onApprove: function() {
          return !0;
        },
        onDeny: function() {
          return !0;
        },
        selector: {
          close: "> .close",
          approve: ".actions .positive, .actions .approve, .actions .ok",
          deny: ".actions .negative, .actions .deny, .actions .cancel",
          modal: ".ui.modal",
        },
        error: {
          dimmer: "UI Dimmer, a required component is not included in this page",
          method: "The method you called is not defined.",
          notFound: "The element you specified could not be found",
        },
        className: {
          active: "active",
          animating: "animating",
          blurring: "blurring",
          inverted: "inverted",
          legacy: "legacy",
          loading: "loading",
          scrolling: "scrolling",
          undetached: "undetached",
        },
      });
  })(jQuery, window, document),
  (function(L, I, j, z) {
    "use strict";
    (I =
      void 0 !== I && I.Math == Math
        ? I
        : "undefined" != typeof self && self.Math == Math
        ? self
        : Function("return this")()),
      (L.fn.popup = function(S) {
        var T,
          e = L(this),
          A = L(j),
          E = L(I),
          D = L("body"),
          F = e.selector || "",
          O = new Date().getTime(),
          R = [],
          P = S,
          q = "string" == typeof P,
          M = [].slice.call(arguments, 1);
        return (
          e.each(function() {
            var u,
              c,
              e,
              t,
              n,
              d,
              f = L.isPlainObject(S)
                ? L.extend(!0, {}, L.fn.popup.settings, S)
                : L.extend({}, L.fn.popup.settings),
              o = f.selector,
              m = f.className,
              g = f.error,
              p = f.metadata,
              i = f.namespace,
              a = "." + f.namespace,
              r = "module-" + i,
              h = L(this),
              s = L(f.context),
              l = L(f.scrollContext),
              v = L(f.boundary),
              b = f.target ? L(f.target) : h,
              y = 0,
              w = !1,
              C = !1,
              x = this,
              k = h.data(r);
            (d = {
              initialize: function() {
                d.debug("Initializing", h),
                  d.createID(),
                  d.bind.events(),
                  !d.exists() && f.preserve && d.create(),
                  f.observeChanges && d.observeChanges(),
                  d.instantiate();
              },
              instantiate: function() {
                d.verbose("Storing instance", d), (k = d), h.data(r, k);
              },
              observeChanges: function() {
                "MutationObserver" in I &&
                  ((e = new MutationObserver(d.event.documentChanged)).observe(j, {
                    childList: !0,
                    subtree: !0,
                  }),
                  d.debug("Setting up mutation observer", e));
              },
              refresh: function() {
                f.popup
                  ? (u = L(f.popup).eq(0))
                  : f.inline && ((u = b.nextAll(o.popup).eq(0)), (f.popup = u)),
                  f.popup
                    ? (u.addClass(m.loading),
                      (c = d.get.offsetParent()),
                      u.removeClass(m.loading),
                      f.movePopup &&
                        d.has.popup() &&
                        d.get.offsetParent(u)[0] !== c[0] &&
                        (d.debug("Moving popup to the same offset parent as target"),
                        u.detach().appendTo(c)))
                    : (c = f.inline
                        ? d.get.offsetParent(b)
                        : d.has.popup()
                        ? d.get.offsetParent(u)
                        : D),
                  c.is("html") &&
                    c[0] !== D[0] &&
                    (d.debug("Setting page as offset parent"), (c = D)),
                  d.get.variation() && d.set.variation();
              },
              reposition: function() {
                d.refresh(), d.set.position();
              },
              destroy: function() {
                d.debug("Destroying previous module"),
                  e && e.disconnect(),
                  u && !f.preserve && d.removePopup(),
                  clearTimeout(d.hideTimer),
                  clearTimeout(d.showTimer),
                  d.unbind.close(),
                  d.unbind.events(),
                  h.removeData(r);
              },
              event: {
                start: function(e) {
                  var t = L.isPlainObject(f.delay) ? f.delay.show : f.delay;
                  clearTimeout(d.hideTimer), C || (d.showTimer = setTimeout(d.show, t));
                },
                end: function() {
                  var e = L.isPlainObject(f.delay) ? f.delay.hide : f.delay;
                  clearTimeout(d.showTimer), (d.hideTimer = setTimeout(d.hide, e));
                },
                touchstart: function(e) {
                  (C = !0), d.show();
                },
                resize: function() {
                  d.is.visible() && d.set.position();
                },
                documentChanged: function(e) {
                  [].forEach.call(e, function(e) {
                    e.removedNodes &&
                      [].forEach.call(e.removedNodes, function(e) {
                        (e == x || 0 < L(e).find(x).length) &&
                          (d.debug("Element removed from DOM, tearing down events"),
                          d.destroy());
                      });
                  });
                },
                hideGracefully: function(e) {
                  var t = L(e.target),
                    n = L.contains(j.documentElement, e.target),
                    i = 0 < t.closest(o.popup).length;
                  e && !i && n
                    ? (d.debug("Click occurred outside popup hiding popup"), d.hide())
                    : d.debug("Click was inside popup, keeping popup open");
                },
              },
              create: function() {
                var e = d.get.html(),
                  t = d.get.title(),
                  n = d.get.content();
                e || n || t
                  ? (d.debug("Creating pop-up html"),
                    e || (e = f.templates.popup({ title: t, content: n })),
                    (u = L("<div/>")
                      .addClass(m.popup)
                      .data(p.activator, h)
                      .html(e)),
                    f.inline
                      ? (d.verbose("Inserting popup element inline", u), u.insertAfter(h))
                      : (d.verbose("Appending popup element to body", u), u.appendTo(s)),
                    d.refresh(),
                    d.set.variation(),
                    f.hoverable && d.bind.popup(),
                    f.onCreate.call(u, x))
                  : 0 !== b.next(o.popup).length
                  ? (d.verbose("Pre-existing popup found"),
                    (f.inline = !0),
                    (f.popup = b.next(o.popup).data(p.activator, h)),
                    d.refresh(),
                    f.hoverable && d.bind.popup())
                  : f.popup
                  ? (L(f.popup).data(p.activator, h),
                    d.verbose("Used popup specified in settings"),
                    d.refresh(),
                    f.hoverable && d.bind.popup())
                  : d.debug("No content specified skipping display", x);
              },
              createID: function() {
                (n = (Math.random().toString(16) + "000000000").substr(2, 8)),
                  (t = "." + n),
                  d.verbose("Creating unique id for element", n);
              },
              toggle: function() {
                d.debug("Toggling pop-up"),
                  d.is.hidden()
                    ? (d.debug("Popup is hidden, showing pop-up"),
                      d.unbind.close(),
                      d.show())
                    : (d.debug("Popup is visible, hiding pop-up"), d.hide());
              },
              show: function(e) {
                if (
                  ((e = e || function() {}),
                  d.debug("Showing pop-up", f.transition),
                  d.is.hidden() && (!d.is.active() || !d.is.dropdown()))
                ) {
                  if ((d.exists() || d.create(), !1 === f.onShow.call(u, x)))
                    return void d.debug(
                      "onShow callback returned false, cancelling popup animation"
                    );
                  f.preserve || f.popup || d.refresh(),
                    u &&
                      d.set.position() &&
                      (d.save.conditions(),
                      f.exclusive && d.hideAll(),
                      d.animate.show(e));
                }
              },
              hide: function(e) {
                if (((e = e || function() {}), d.is.visible() || d.is.animating())) {
                  if (!1 === f.onHide.call(u, x))
                    return void d.debug(
                      "onHide callback returned false, cancelling popup animation"
                    );
                  d.remove.visible(),
                    d.unbind.close(),
                    d.restore.conditions(),
                    d.animate.hide(e);
                }
              },
              hideAll: function() {
                L(o.popup)
                  .filter("." + m.popupVisible)
                  .each(function() {
                    L(this)
                      .data(p.activator)
                      .popup("hide");
                  });
              },
              exists: function() {
                return (
                  !!u && (f.inline || f.popup ? d.has.popup() : 1 <= u.closest(s).length)
                );
              },
              removePopup: function() {
                d.has.popup() &&
                  !f.popup &&
                  (d.debug("Removing popup", u),
                  u.remove(),
                  (u = z),
                  f.onRemove.call(u, x));
              },
              save: {
                conditions: function() {
                  (d.cache = { title: h.attr("title") }),
                    d.cache.title && h.removeAttr("title"),
                    d.verbose("Saving original attributes", d.cache.title);
                },
              },
              restore: {
                conditions: function() {
                  return (
                    d.cache &&
                      d.cache.title &&
                      (h.attr("title", d.cache.title),
                      d.verbose("Restoring original attributes", d.cache.title)),
                    !0
                  );
                },
              },
              supports: {
                svg: function() {
                  return "undefined" == typeof SVGGraphicsElement;
                },
              },
              animate: {
                show: function(e) {
                  (e = L.isFunction(e) ? e : function() {}),
                    f.transition && L.fn.transition !== z && h.transition("is supported")
                      ? (d.set.visible(),
                        u.transition({
                          animation: f.transition + " in",
                          queue: !1,
                          debug: f.debug,
                          verbose: f.verbose,
                          duration: f.duration,
                          onComplete: function() {
                            d.bind.close(), e.call(u, x), f.onVisible.call(u, x);
                          },
                        }))
                      : d.error(g.noTransition);
                },
                hide: function(e) {
                  (e = L.isFunction(e) ? e : function() {}),
                    d.debug("Hiding pop-up"),
                    !1 !== f.onHide.call(u, x)
                      ? f.transition &&
                        L.fn.transition !== z &&
                        h.transition("is supported")
                        ? u.transition({
                            animation: f.transition + " out",
                            queue: !1,
                            duration: f.duration,
                            debug: f.debug,
                            verbose: f.verbose,
                            onComplete: function() {
                              d.reset(), e.call(u, x), f.onHidden.call(u, x);
                            },
                          })
                        : d.error(g.noTransition)
                      : d.debug(
                          "onHide callback returned false, cancelling popup animation"
                        );
                },
              },
              change: {
                content: function(e) {
                  u.html(e);
                },
              },
              get: {
                html: function() {
                  return h.removeData(p.html), h.data(p.html) || f.html;
                },
                title: function() {
                  return h.removeData(p.title), h.data(p.title) || f.title;
                },
                content: function() {
                  return (
                    h.removeData(p.content),
                    h.data(p.content) || f.content || h.attr("title")
                  );
                },
                variation: function() {
                  return h.removeData(p.variation), h.data(p.variation) || f.variation;
                },
                popup: function() {
                  return u;
                },
                popupOffset: function() {
                  return u.offset();
                },
                calculations: function() {
                  var e,
                    t = d.get.offsetParent(u),
                    n = b[0],
                    i = v[0] == I,
                    o = f.inline || (f.popup && f.movePopup) ? b.position() : b.offset(),
                    a = i ? { top: 0, left: 0 } : v.offset(),
                    r = {},
                    s = i
                      ? { top: E.scrollTop(), left: E.scrollLeft() }
                      : { top: 0, left: 0 };
                  if (
                    ((r = {
                      target: {
                        element: b[0],
                        width: b.outerWidth(),
                        height: b.outerHeight(),
                        top: o.top,
                        left: o.left,
                        margin: {},
                      },
                      popup: { width: u.outerWidth(), height: u.outerHeight() },
                      parent: { width: c.outerWidth(), height: c.outerHeight() },
                      screen: {
                        top: a.top,
                        left: a.left,
                        scroll: { top: s.top, left: s.left },
                        width: v.width(),
                        height: v.height(),
                      },
                    }),
                    t.get(0) !== c.get(0))
                  ) {
                    var l = t.offset();
                    (r.target.top -= l.top),
                      (r.target.left -= l.left),
                      (r.parent.width = t.outerWidth()),
                      (r.parent.height = t.outerHeight());
                  }
                  return (
                    f.setFluidWidth &&
                      d.is.fluid() &&
                      ((r.container = { width: u.parent().outerWidth() }),
                      (r.popup.width = r.container.width)),
                    (r.target.margin.top = f.inline
                      ? parseInt(I.getComputedStyle(n).getPropertyValue("margin-top"), 10)
                      : 0),
                    (r.target.margin.left = f.inline
                      ? d.is.rtl()
                        ? parseInt(
                            I.getComputedStyle(n).getPropertyValue("margin-right"),
                            10
                          )
                        : parseInt(
                            I.getComputedStyle(n).getPropertyValue("margin-left"),
                            10
                          )
                      : 0),
                    (e = r.screen),
                    (r.boundary = {
                      top: e.top + e.scroll.top,
                      bottom: e.top + e.scroll.top + e.height,
                      left: e.left + e.scroll.left,
                      right: e.left + e.scroll.left + e.width,
                    }),
                    r
                  );
                },
                id: function() {
                  return n;
                },
                startEvent: function() {
                  return "hover" == f.on ? "mouseenter" : "focus" == f.on && "focus";
                },
                scrollEvent: function() {
                  return "scroll";
                },
                endEvent: function() {
                  return "hover" == f.on ? "mouseleave" : "focus" == f.on && "blur";
                },
                distanceFromBoundary: function(e, t) {
                  var n,
                    i,
                    o = {};
                  return (
                    (n = (t = t || d.get.calculations()).popup),
                    (i = t.boundary),
                    e &&
                      ((o = {
                        top: e.top - i.top,
                        left: e.left - i.left,
                        right: i.right - (e.left + n.width),
                        bottom: i.bottom - (e.top + n.height),
                      }),
                      d.verbose("Distance from boundaries determined", e, o)),
                    o
                  );
                },
                offsetParent: function(e) {
                  var t = (e !== z ? e[0] : b[0]).parentNode,
                    n = L(t);
                  if (t)
                    for (
                      var i = "none" === n.css("transform"),
                        o = "static" === n.css("position"),
                        a = n.is("body");
                      t && !a && o && i;

                    )
                      (t = t.parentNode),
                        (i = "none" === (n = L(t)).css("transform")),
                        (o = "static" === n.css("position")),
                        (a = n.is("body"));
                  return n && 0 < n.length ? n : L();
                },
                positions: function() {
                  return {
                    "top left": !1,
                    "top center": !1,
                    "top right": !1,
                    "bottom left": !1,
                    "bottom center": !1,
                    "bottom right": !1,
                    "left center": !1,
                    "right center": !1,
                  };
                },
                nextPosition: function(e) {
                  var t = e.split(" "),
                    n = t[0],
                    i = t[1],
                    o = "top" == n || "bottom" == n,
                    a = !1,
                    r = !1,
                    s = !1;
                  return (
                    w ||
                      (d.verbose("All available positions available"),
                      (w = d.get.positions())),
                    d.debug("Recording last position tried", e),
                    (w[e] = !0),
                    "opposite" === f.prefer &&
                      ((s = (s = [
                        { top: "bottom", bottom: "top", left: "right", right: "left" }[n],
                        i,
                      ]).join(" ")),
                      (a = !0 === w[s]),
                      d.debug("Trying opposite strategy", s)),
                    "adjacent" === f.prefer &&
                      o &&
                      ((s = (s = [
                        n,
                        { left: "center", center: "right", right: "left" }[i],
                      ]).join(" ")),
                      (r = !0 === w[s]),
                      d.debug("Trying adjacent strategy", s)),
                    (r || a) &&
                      (d.debug("Using backup position", s),
                      (s = {
                        "top left": "top center",
                        "top center": "top right",
                        "top right": "right center",
                        "right center": "bottom right",
                        "bottom right": "bottom center",
                        "bottom center": "bottom left",
                        "bottom left": "left center",
                        "left center": "top left",
                      }[e])),
                    s
                  );
                },
              },
              set: {
                position: function(e, t) {
                  if (0 !== b.length && 0 !== u.length) {
                    var n, i, o, a, r, s, l, c;
                    if (
                      ((t = t || d.get.calculations()),
                      (e = e || h.data(p.position) || f.position),
                      (n = h.data(p.offset) || f.offset),
                      (i = f.distanceAway),
                      (o = t.target),
                      (a = t.popup),
                      (r = t.parent),
                      d.should.centerArrow(t) &&
                        (d.verbose(
                          "Adjusting offset to center arrow on small target element"
                        ),
                        ("top left" != e && "bottom left" != e) ||
                          ((n += o.width / 2), (n -= f.arrowPixelsFromEdge)),
                        ("top right" != e && "bottom right" != e) ||
                          ((n -= o.width / 2), (n += f.arrowPixelsFromEdge))),
                      0 === o.width && 0 === o.height && !d.is.svg(o.element))
                    )
                      return d.debug("Popup target is hidden, no action taken"), !1;
                    switch (
                      (f.inline &&
                        (d.debug("Adding margin to calculation", o.margin),
                        "left center" == e || "right center" == e
                          ? ((n += o.margin.top), (i += -o.margin.left))
                          : "top left" == e || "top center" == e || "top right" == e
                          ? ((n += o.margin.left), (i -= o.margin.top))
                          : ((n += o.margin.left), (i += o.margin.top))),
                      d.debug("Determining popup position from calculations", e, t),
                      d.is.rtl() &&
                        ((e = e.replace(/left|right/g, function(e) {
                          return "left" == e ? "right" : "left";
                        })),
                        d.debug("RTL: Popup position updated", e)),
                      y == f.maxSearchDepth &&
                        "string" == typeof f.lastResort &&
                        (e = f.lastResort),
                      e)
                    ) {
                      case "top left":
                        s = {
                          top: "auto",
                          bottom: r.height - o.top + i,
                          left: o.left + n,
                          right: "auto",
                        };
                        break;
                      case "top center":
                        s = {
                          bottom: r.height - o.top + i,
                          left: o.left + o.width / 2 - a.width / 2 + n,
                          top: "auto",
                          right: "auto",
                        };
                        break;
                      case "top right":
                        s = {
                          bottom: r.height - o.top + i,
                          right: r.width - o.left - o.width - n,
                          top: "auto",
                          left: "auto",
                        };
                        break;
                      case "left center":
                        s = {
                          top: o.top + o.height / 2 - a.height / 2 + n,
                          right: r.width - o.left + i,
                          left: "auto",
                          bottom: "auto",
                        };
                        break;
                      case "right center":
                        s = {
                          top: o.top + o.height / 2 - a.height / 2 + n,
                          left: o.left + o.width + i,
                          bottom: "auto",
                          right: "auto",
                        };
                        break;
                      case "bottom left":
                        s = {
                          top: o.top + o.height + i,
                          left: o.left + n,
                          bottom: "auto",
                          right: "auto",
                        };
                        break;
                      case "bottom center":
                        s = {
                          top: o.top + o.height + i,
                          left: o.left + o.width / 2 - a.width / 2 + n,
                          bottom: "auto",
                          right: "auto",
                        };
                        break;
                      case "bottom right":
                        s = {
                          top: o.top + o.height + i,
                          right: r.width - o.left - o.width - n,
                          left: "auto",
                          bottom: "auto",
                        };
                    }
                    if (
                      (s === z && d.error(g.invalidPosition, e),
                      d.debug("Calculated popup positioning values", s),
                      u
                        .css(s)
                        .removeClass(m.position)
                        .addClass(e)
                        .addClass(m.loading),
                      (l = d.get.popupOffset()),
                      (c = d.get.distanceFromBoundary(l, t)),
                      d.is.offstage(c, e))
                    ) {
                      if (
                        (d.debug("Position is outside viewport", e), y < f.maxSearchDepth)
                      )
                        return (
                          y++,
                          (e = d.get.nextPosition(e)),
                          d.debug("Trying new position", e),
                          !!u && d.set.position(e, t)
                        );
                      if (!f.lastResort)
                        return (
                          d.debug("Popup could not find a position to display", u),
                          d.error(g.cannotPlace, x),
                          d.remove.attempts(),
                          d.remove.loading(),
                          d.reset(),
                          f.onUnplaceable.call(u, x),
                          !1
                        );
                      d.debug("No position found, showing with last position");
                    }
                    return (
                      d.debug("Position is on stage", e),
                      d.remove.attempts(),
                      d.remove.loading(),
                      f.setFluidWidth && d.is.fluid() && d.set.fluidWidth(t),
                      !0
                    );
                  }
                  d.error(g.notFound);
                },
                fluidWidth: function(e) {
                  (e = e || d.get.calculations()),
                    d.debug(
                      "Automatically setting element width to parent width",
                      e.parent.width
                    ),
                    u.css("width", e.container.width);
                },
                variation: function(e) {
                  (e = e || d.get.variation()) &&
                    d.has.popup() &&
                    (d.verbose("Adding variation to popup", e), u.addClass(e));
                },
                visible: function() {
                  h.addClass(m.visible);
                },
              },
              remove: {
                loading: function() {
                  u.removeClass(m.loading);
                },
                variation: function(e) {
                  (e = e || d.get.variation()) &&
                    (d.verbose("Removing variation", e), u.removeClass(e));
                },
                visible: function() {
                  h.removeClass(m.visible);
                },
                attempts: function() {
                  d.verbose("Resetting all searched positions"), (y = 0), (w = !1);
                },
              },
              bind: {
                events: function() {
                  d.debug("Binding popup events to module"),
                    "click" == f.on && h.on("click" + a, d.toggle),
                    "hover" == f.on && h.on("touchstart" + a, d.event.touchstart),
                    d.get.startEvent() &&
                      h
                        .on(d.get.startEvent() + a, d.event.start)
                        .on(d.get.endEvent() + a, d.event.end),
                    f.target && d.debug("Target set to element", b),
                    E.on("resize" + t, d.event.resize);
                },
                popup: function() {
                  d.verbose("Allowing hover events on popup to prevent closing"),
                    u &&
                      d.has.popup() &&
                      u
                        .on("mouseenter" + a, d.event.start)
                        .on("mouseleave" + a, d.event.end);
                },
                close: function() {
                  (!0 === f.hideOnScroll ||
                    ("auto" == f.hideOnScroll && "click" != f.on)) &&
                    d.bind.closeOnScroll(),
                    d.is.closable()
                      ? d.bind.clickaway()
                      : "hover" == f.on && C && d.bind.touchClose();
                },
                closeOnScroll: function() {
                  d.verbose("Binding scroll close event to document"),
                    l.one(d.get.scrollEvent() + t, d.event.hideGracefully);
                },
                touchClose: function() {
                  d.verbose("Binding popup touchclose event to document"),
                    A.on("touchstart" + t, function(e) {
                      d.verbose("Touched away from popup"),
                        d.event.hideGracefully.call(x, e);
                    });
                },
                clickaway: function() {
                  d.verbose("Binding popup close event to document"),
                    A.on("click" + t, function(e) {
                      d.verbose("Clicked away from popup"),
                        d.event.hideGracefully.call(x, e);
                    });
                },
              },
              unbind: {
                events: function() {
                  E.off(t), h.off(a);
                },
                close: function() {
                  A.off(t), l.off(t);
                },
              },
              has: {
                popup: function() {
                  return u && 0 < u.length;
                },
              },
              should: {
                centerArrow: function(e) {
                  return !d.is.basic() && e.target.width <= 2 * f.arrowPixelsFromEdge;
                },
              },
              is: {
                closable: function() {
                  return "auto" == f.closable ? "hover" != f.on : f.closable;
                },
                offstage: function(e, n) {
                  var i = [];
                  return (
                    L.each(e, function(e, t) {
                      t < -f.jitter &&
                        (d.debug(
                          "Position exceeds allowable distance from edge",
                          e,
                          t,
                          n
                        ),
                        i.push(e));
                    }),
                    0 < i.length
                  );
                },
                svg: function(e) {
                  return d.supports.svg() && e instanceof SVGGraphicsElement;
                },
                basic: function() {
                  return h.hasClass(m.basic);
                },
                active: function() {
                  return h.hasClass(m.active);
                },
                animating: function() {
                  return u !== z && u.hasClass(m.animating);
                },
                fluid: function() {
                  return u !== z && u.hasClass(m.fluid);
                },
                visible: function() {
                  return u !== z && u.hasClass(m.popupVisible);
                },
                dropdown: function() {
                  return h.hasClass(m.dropdown);
                },
                hidden: function() {
                  return !d.is.visible();
                },
                rtl: function() {
                  return "rtl" == h.css("direction");
                },
              },
              reset: function() {
                d.remove.visible(),
                  f.preserve
                    ? L.fn.transition !== z && u.transition("remove transition")
                    : d.removePopup();
              },
              setting: function(e, t) {
                if (L.isPlainObject(e)) L.extend(!0, f, e);
                else {
                  if (t === z) return f[e];
                  f[e] = t;
                }
              },
              internal: function(e, t) {
                if (L.isPlainObject(e)) L.extend(!0, d, e);
                else {
                  if (t === z) return d[e];
                  d[e] = t;
                }
              },
              debug: function() {
                !f.silent &&
                  f.debug &&
                  (f.performance
                    ? d.performance.log(arguments)
                    : ((d.debug = Function.prototype.bind.call(
                        console.info,
                        console,
                        f.name + ":"
                      )),
                      d.debug.apply(console, arguments)));
              },
              verbose: function() {
                !f.silent &&
                  f.verbose &&
                  f.debug &&
                  (f.performance
                    ? d.performance.log(arguments)
                    : ((d.verbose = Function.prototype.bind.call(
                        console.info,
                        console,
                        f.name + ":"
                      )),
                      d.verbose.apply(console, arguments)));
              },
              error: function() {
                f.silent ||
                  ((d.error = Function.prototype.bind.call(
                    console.error,
                    console,
                    f.name + ":"
                  )),
                  d.error.apply(console, arguments));
              },
              performance: {
                log: function(e) {
                  var t, n;
                  f.performance &&
                    ((n = (t = new Date().getTime()) - (O || t)),
                    (O = t),
                    R.push({
                      Name: e[0],
                      Arguments: [].slice.call(e, 1) || "",
                      Element: x,
                      "Execution Time": n,
                    })),
                    clearTimeout(d.performance.timer),
                    (d.performance.timer = setTimeout(d.performance.display, 500));
                },
                display: function() {
                  var e = f.name + ":",
                    n = 0;
                  (O = !1),
                    clearTimeout(d.performance.timer),
                    L.each(R, function(e, t) {
                      n += t["Execution Time"];
                    }),
                    (e += " " + n + "ms"),
                    F && (e += " '" + F + "'"),
                    (console.group !== z || console.table !== z) &&
                      0 < R.length &&
                      (console.groupCollapsed(e),
                      console.table
                        ? console.table(R)
                        : L.each(R, function(e, t) {
                            console.log(t.Name + ": " + t["Execution Time"] + "ms");
                          }),
                      console.groupEnd()),
                    (R = []);
                },
              },
              invoke: function(i, e, t) {
                var o,
                  a,
                  n,
                  r = k;
                return (
                  (e = e || M),
                  (t = x || t),
                  "string" == typeof i &&
                    r !== z &&
                    ((i = i.split(/[\. ]/)),
                    (o = i.length - 1),
                    L.each(i, function(e, t) {
                      var n =
                        e != o
                          ? t + i[e + 1].charAt(0).toUpperCase() + i[e + 1].slice(1)
                          : i;
                      if (L.isPlainObject(r[n]) && e != o) r = r[n];
                      else {
                        if (r[n] !== z) return (a = r[n]), !1;
                        if (!L.isPlainObject(r[t]) || e == o)
                          return r[t] !== z && (a = r[t]), !1;
                        r = r[t];
                      }
                    })),
                  L.isFunction(a) ? (n = a.apply(t, e)) : a !== z && (n = a),
                  L.isArray(T) ? T.push(n) : T !== z ? (T = [T, n]) : n !== z && (T = n),
                  a
                );
              },
            }),
              q
                ? (k === z && d.initialize(), d.invoke(P))
                : (k !== z && k.invoke("destroy"), d.initialize());
          }),
          T !== z ? T : this
        );
      }),
      (L.fn.popup.settings = {
        name: "Popup",
        silent: !1,
        debug: !1,
        verbose: !1,
        performance: !0,
        namespace: "popup",
        observeChanges: !0,
        onCreate: function() {},
        onRemove: function() {},
        onShow: function() {},
        onVisible: function() {},
        onHide: function() {},
        onUnplaceable: function() {},
        onHidden: function() {},
        on: "hover",
        boundary: I,
        addTouchEvents: !0,
        position: "top left",
        variation: "",
        movePopup: !0,
        target: !1,
        popup: !1,
        inline: !1,
        preserve: !1,
        hoverable: !1,
        content: !1,
        html: !1,
        title: !1,
        closable: !0,
        hideOnScroll: "auto",
        exclusive: !1,
        context: "body",
        scrollContext: I,
        prefer: "opposite",
        lastResort: !1,
        arrowPixelsFromEdge: 20,
        delay: { show: 50, hide: 70 },
        setFluidWidth: !0,
        duration: 200,
        transition: "scale",
        distanceAway: 0,
        jitter: 2,
        offset: 0,
        maxSearchDepth: 15,
        error: {
          invalidPosition: "The position you specified is not a valid position",
          cannotPlace: "Popup does not fit within the boundaries of the viewport",
          method: "The method you called is not defined.",
          noTransition:
            "This module requires ui transitions <https://github.com/Semantic-Org/UI-Transition>",
          notFound: "The target or popup you specified does not exist on the page",
        },
        metadata: {
          activator: "activator",
          content: "content",
          html: "html",
          offset: "offset",
          position: "position",
          title: "title",
          variation: "variation",
        },
        className: {
          active: "active",
          basic: "basic",
          animating: "animating",
          dropdown: "dropdown",
          fluid: "fluid",
          loading: "loading",
          popup: "ui popup",
          position: "top left center bottom right",
          visible: "visible",
          popupVisible: "visible",
        },
        selector: { popup: ".ui.popup" },
        templates: {
          escape: function(e) {
            var t = {
              "&": "&amp;",
              "<": "&lt;",
              ">": "&gt;",
              '"': "&quot;",
              "'": "&#x27;",
              "`": "&#x60;",
            };
            return /[&<>"'`]/.test(e)
              ? e.replace(/[&<>"'`]/g, function(e) {
                  return t[e];
                })
              : e;
          },
          popup: function(e) {
            var t = "",
              n = L.fn.popup.settings.templates.escape;
            return (
              typeof e !== z &&
                (typeof e.title !== z &&
                  e.title &&
                  ((e.title = n(e.title)),
                  (t += '<div class="header">' + e.title + "</div>")),
                typeof e.content !== z &&
                  e.content &&
                  ((e.content = n(e.content)),
                  (t += '<div class="content">' + e.content + "</div>"))),
              t
            );
          },
        },
      });
  })(jQuery, window, document),
  (function(q, M, L, I) {
    "use strict";
    (M =
      void 0 !== M && M.Math == Math
        ? M
        : "undefined" != typeof self && self.Math == Math
        ? self
        : Function("return this")()),
      (q.fn.sidebar = function(w) {
        var C,
          e = q(this),
          x = q(M),
          k = q(L),
          S = q("html"),
          T = q("head"),
          A = e.selector || "",
          E = new Date().getTime(),
          D = [],
          F = w,
          O = "string" == typeof F,
          R = [].slice.call(arguments, 1),
          P =
            M.requestAnimationFrame ||
            M.mozRequestAnimationFrame ||
            M.webkitRequestAnimationFrame ||
            M.msRequestAnimationFrame ||
            function(e) {
              setTimeout(e, 0);
            };
        return (
          e.each(function() {
            var r,
              s,
              e,
              t,
              l,
              c,
              u = q.isPlainObject(w)
                ? q.extend(!0, {}, q.fn.sidebar.settings, w)
                : q.extend({}, q.fn.sidebar.settings),
              n = u.selector,
              a = u.className,
              i = u.namespace,
              o = u.regExp,
              d = u.error,
              f = "." + i,
              m = "module-" + i,
              g = q(this),
              p = q(u.context),
              h = g.children(n.sidebar),
              v = (p.children(n.fixed), p.children(n.pusher)),
              b = this,
              y = g.data(m);
            (c = {
              initialize: function() {
                c.debug("Initializing sidebar", w),
                  c.create.id(),
                  (l = c.get.transitionEvent()),
                  u.delaySetup ? P(c.setup.layout) : c.setup.layout(),
                  P(function() {
                    c.setup.cache();
                  }),
                  c.instantiate();
              },
              instantiate: function() {
                c.verbose("Storing instance of module", c), (y = c), g.data(m, c);
              },
              create: {
                id: function() {
                  (e = (Math.random().toString(16) + "000000000").substr(2, 8)),
                    (s = "." + e),
                    c.verbose("Creating unique id for element", e);
                },
              },
              destroy: function() {
                c.verbose("Destroying previous module for", g),
                  g.off(f).removeData(m),
                  c.is.ios() && c.remove.ios(),
                  p.off(s),
                  x.off(s),
                  k.off(s);
              },
              event: {
                clickaway: function(e) {
                  var t = 0 < v.find(e.target).length || v.is(e.target),
                    n = p.is(e.target);
                  t && (c.verbose("User clicked on dimmed page"), c.hide()),
                    n &&
                      (c.verbose("User clicked on dimmable context (scaled out page)"),
                      c.hide());
                },
                touch: function(e) {},
                containScroll: function(e) {
                  b.scrollTop <= 0 && (b.scrollTop = 1),
                    b.scrollTop + b.offsetHeight >= b.scrollHeight &&
                      (b.scrollTop = b.scrollHeight - b.offsetHeight - 1);
                },
                scroll: function(e) {
                  0 === q(e.target).closest(n.sidebar).length && e.preventDefault();
                },
              },
              bind: {
                clickaway: function() {
                  c.verbose("Adding clickaway events to context", p),
                    u.closable &&
                      p
                        .on("click" + s, c.event.clickaway)
                        .on("touchend" + s, c.event.clickaway);
                },
                scrollLock: function() {
                  u.scrollLock &&
                    (c.debug("Disabling page scroll"),
                    x.on("DOMMouseScroll" + s, c.event.scroll)),
                    c.verbose("Adding events to contain sidebar scroll"),
                    k.on("touchmove" + s, c.event.touch),
                    g.on("scroll" + f, c.event.containScroll);
                },
              },
              unbind: {
                clickaway: function() {
                  c.verbose("Removing clickaway events from context", p), p.off(s);
                },
                scrollLock: function() {
                  c.verbose("Removing scroll lock from page"),
                    k.off(s),
                    x.off(s),
                    g.off("scroll" + f);
                },
              },
              add: {
                inlineCSS: function() {
                  var e,
                    t = c.cache.width || g.outerWidth(),
                    n = c.cache.height || g.outerHeight(),
                    i = c.is.rtl(),
                    o = c.get.direction(),
                    a = { left: t, right: -t, top: n, bottom: -n };
                  i &&
                    (c.verbose("RTL detected, flipping widths"),
                    (a.left = -t),
                    (a.right = t)),
                    (e = "<style>"),
                    "left" === o || "right" === o
                      ? (c.debug("Adding CSS rules for animation distance", t),
                        (e +=
                          " .ui.visible." +
                          o +
                          ".sidebar ~ .fixed, .ui.visible." +
                          o +
                          ".sidebar ~ .pusher {   -webkit-transform: translate3d(" +
                          a[o] +
                          "px, 0, 0);           transform: translate3d(" +
                          a[o] +
                          "px, 0, 0); }"))
                      : ("top" !== o && "bottom" != o) ||
                        (e +=
                          " .ui.visible." +
                          o +
                          ".sidebar ~ .fixed, .ui.visible." +
                          o +
                          ".sidebar ~ .pusher {   -webkit-transform: translate3d(0, " +
                          a[o] +
                          "px, 0);           transform: translate3d(0, " +
                          a[o] +
                          "px, 0); }"),
                    c.is.ie() &&
                      ("left" === o || "right" === o
                        ? (c.debug("Adding CSS rules for animation distance", t),
                          (e +=
                            " body.pushable > .ui.visible." +
                            o +
                            ".sidebar ~ .pusher:after {   -webkit-transform: translate3d(" +
                            a[o] +
                            "px, 0, 0);           transform: translate3d(" +
                            a[o] +
                            "px, 0, 0); }"))
                        : ("top" !== o && "bottom" != o) ||
                          (e +=
                            " body.pushable > .ui.visible." +
                            o +
                            ".sidebar ~ .pusher:after {   -webkit-transform: translate3d(0, " +
                            a[o] +
                            "px, 0);           transform: translate3d(0, " +
                            a[o] +
                            "px, 0); }"),
                      (e +=
                        " body.pushable > .ui.visible.left.sidebar ~ .ui.visible.right.sidebar ~ .pusher:after, body.pushable > .ui.visible.right.sidebar ~ .ui.visible.left.sidebar ~ .pusher:after {   -webkit-transform: translate3d(0px, 0, 0);           transform: translate3d(0px, 0, 0); }")),
                    (r = q((e += "</style>")).appendTo(T)),
                    c.debug("Adding sizing css to head", r);
                },
              },
              refresh: function() {
                c.verbose("Refreshing selector cache"),
                  (p = q(u.context)),
                  (h = p.children(n.sidebar)),
                  (v = p.children(n.pusher)),
                  p.children(n.fixed),
                  c.clear.cache();
              },
              refreshSidebars: function() {
                c.verbose("Refreshing other sidebars"), (h = p.children(n.sidebar));
              },
              repaint: function() {
                c.verbose("Forcing repaint event"), (b.style.display = "none");
                b.offsetHeight;
                (b.scrollTop = b.scrollTop), (b.style.display = "");
              },
              setup: {
                cache: function() {
                  c.cache = {
                    width: g.outerWidth(),
                    height: g.outerHeight(),
                    rtl: "rtl" == g.css("direction"),
                  };
                },
                layout: function() {
                  0 === p.children(n.pusher).length &&
                    (c.debug("Adding wrapper element for sidebar"),
                    c.error(d.pusher),
                    (v = q('<div class="pusher" />')),
                    p
                      .children()
                      .not(n.omitted)
                      .not(h)
                      .wrapAll(v),
                    c.refresh()),
                    (0 !== g.nextAll(n.pusher).length &&
                      g.nextAll(n.pusher)[0] === v[0]) ||
                      (c.debug("Moved sidebar to correct parent element"),
                      c.error(d.movedSidebar, b),
                      g.detach().prependTo(p),
                      c.refresh()),
                    c.clear.cache(),
                    c.set.pushable(),
                    c.set.direction();
                },
              },
              attachEvents: function(e, t) {
                var n = q(e);
                (t = q.isFunction(c[t]) ? c[t] : c.toggle),
                  0 < n.length
                    ? (c.debug("Attaching sidebar events to element", e, t),
                      n.on("click" + f, t))
                    : c.error(d.notFound, e);
              },
              show: function(e) {
                if (((e = q.isFunction(e) ? e : function() {}), c.is.hidden())) {
                  if (
                    (c.refreshSidebars(),
                    u.overlay && (c.error(d.overlay), (u.transition = "overlay")),
                    c.refresh(),
                    c.othersActive())
                  )
                    if ((c.debug("Other sidebars currently visible"), u.exclusive)) {
                      if ("overlay" != u.transition) return void c.hideOthers(c.show);
                      c.hideOthers();
                    } else u.transition = "overlay";
                  c.pushPage(function() {
                    e.call(b), u.onShow.call(b);
                  }),
                    u.onChange.call(b),
                    u.onVisible.call(b);
                } else c.debug("Sidebar is already visible");
              },
              hide: function(e) {
                (e = q.isFunction(e) ? e : function() {}),
                  (c.is.visible() || c.is.animating()) &&
                    (c.debug("Hiding sidebar", e),
                    c.refreshSidebars(),
                    c.pullPage(function() {
                      e.call(b), u.onHidden.call(b);
                    }),
                    u.onChange.call(b),
                    u.onHide.call(b));
              },
              othersAnimating: function() {
                return 0 < h.not(g).filter("." + a.animating).length;
              },
              othersVisible: function() {
                return 0 < h.not(g).filter("." + a.visible).length;
              },
              othersActive: function() {
                return c.othersVisible() || c.othersAnimating();
              },
              hideOthers: function(e) {
                var t = h.not(g).filter("." + a.visible),
                  n = t.length,
                  i = 0;
                (e = e || function() {}),
                  t.sidebar("hide", function() {
                    ++i == n && e();
                  });
              },
              toggle: function() {
                c.verbose("Determining toggled direction"),
                  c.is.hidden() ? c.show() : c.hide();
              },
              pushPage: function(t) {
                var e,
                  n,
                  i,
                  o = c.get.transition(),
                  a = "overlay" === o || c.othersActive() ? g : v;
                (t = q.isFunction(t) ? t : function() {}),
                  "scale down" == u.transition && c.scrollToTop(),
                  c.set.transition(o),
                  c.repaint(),
                  (e = function() {
                    c.bind.clickaway(),
                      c.add.inlineCSS(),
                      c.set.animating(),
                      c.set.visible();
                  }),
                  (n = function() {
                    c.set.dimmed();
                  }),
                  (i = function(e) {
                    e.target == a[0] &&
                      (a.off(l + s, i),
                      c.remove.animating(),
                      c.bind.scrollLock(),
                      t.call(b));
                  }),
                  a.off(l + s),
                  a.on(l + s, i),
                  P(e),
                  u.dimPage && !c.othersVisible() && P(n);
              },
              pullPage: function(t) {
                var e,
                  n,
                  i = c.get.transition(),
                  o = "overlay" == i || c.othersActive() ? g : v;
                (t = q.isFunction(t) ? t : function() {}),
                  c.verbose("Removing context push state", c.get.direction()),
                  c.unbind.clickaway(),
                  c.unbind.scrollLock(),
                  (e = function() {
                    c.set.transition(i),
                      c.set.animating(),
                      c.remove.visible(),
                      u.dimPage && !c.othersVisible() && v.removeClass(a.dimmed);
                  }),
                  (n = function(e) {
                    e.target == o[0] &&
                      (o.off(l + s, n),
                      c.remove.animating(),
                      c.remove.transition(),
                      c.remove.inlineCSS(),
                      ("scale down" == i || (u.returnScroll && c.is.mobile())) &&
                        c.scrollBack(),
                      t.call(b));
                  }),
                  o.off(l + s),
                  o.on(l + s, n),
                  P(e);
              },
              scrollToTop: function() {
                c.verbose("Scrolling to top of page to avoid animation issues"),
                  (t = q(M).scrollTop()),
                  g.scrollTop(0),
                  M.scrollTo(0, 0);
              },
              scrollBack: function() {
                c.verbose("Scrolling back to original page position"), M.scrollTo(0, t);
              },
              clear: {
                cache: function() {
                  c.verbose("Clearing cached dimensions"), (c.cache = {});
                },
              },
              set: {
                ios: function() {
                  S.addClass(a.ios);
                },
                pushed: function() {
                  p.addClass(a.pushed);
                },
                pushable: function() {
                  p.addClass(a.pushable);
                },
                dimmed: function() {
                  v.addClass(a.dimmed);
                },
                active: function() {
                  g.addClass(a.active);
                },
                animating: function() {
                  g.addClass(a.animating);
                },
                transition: function(e) {
                  (e = e || c.get.transition()), g.addClass(e);
                },
                direction: function(e) {
                  (e = e || c.get.direction()), g.addClass(a[e]);
                },
                visible: function() {
                  g.addClass(a.visible);
                },
                overlay: function() {
                  g.addClass(a.overlay);
                },
              },
              remove: {
                inlineCSS: function() {
                  c.debug("Removing inline css styles", r),
                    r && 0 < r.length && r.remove();
                },
                ios: function() {
                  S.removeClass(a.ios);
                },
                pushed: function() {
                  p.removeClass(a.pushed);
                },
                pushable: function() {
                  p.removeClass(a.pushable);
                },
                active: function() {
                  g.removeClass(a.active);
                },
                animating: function() {
                  g.removeClass(a.animating);
                },
                transition: function(e) {
                  (e = e || c.get.transition()), g.removeClass(e);
                },
                direction: function(e) {
                  (e = e || c.get.direction()), g.removeClass(a[e]);
                },
                visible: function() {
                  g.removeClass(a.visible);
                },
                overlay: function() {
                  g.removeClass(a.overlay);
                },
              },
              get: {
                direction: function() {
                  return g.hasClass(a.top)
                    ? a.top
                    : g.hasClass(a.right)
                    ? a.right
                    : g.hasClass(a.bottom)
                    ? a.bottom
                    : a.left;
                },
                transition: function() {
                  var e,
                    t = c.get.direction();
                  return (
                    (e = c.is.mobile()
                      ? "auto" == u.mobileTransition
                        ? u.defaultTransition.mobile[t]
                        : u.mobileTransition
                      : "auto" == u.transition
                      ? u.defaultTransition.computer[t]
                      : u.transition),
                    c.verbose("Determined transition", e),
                    e
                  );
                },
                transitionEvent: function() {
                  var e,
                    t = L.createElement("element"),
                    n = {
                      transition: "transitionend",
                      OTransition: "oTransitionEnd",
                      MozTransition: "transitionend",
                      WebkitTransition: "webkitTransitionEnd",
                    };
                  for (e in n) if (t.style[e] !== I) return n[e];
                },
              },
              is: {
                ie: function() {
                  return (
                    (!M.ActiveXObject && "ActiveXObject" in M) || "ActiveXObject" in M
                  );
                },
                ios: function() {
                  var e = navigator.userAgent,
                    t = e.match(o.ios),
                    n = e.match(o.mobileChrome);
                  return !(!t || n) && (c.verbose("Browser was found to be iOS", e), !0);
                },
                mobile: function() {
                  var e = navigator.userAgent;
                  return e.match(o.mobile)
                    ? (c.verbose("Browser was found to be mobile", e), !0)
                    : (c.verbose("Browser is not mobile, using regular transition", e),
                      !1);
                },
                hidden: function() {
                  return !c.is.visible();
                },
                visible: function() {
                  return g.hasClass(a.visible);
                },
                open: function() {
                  return c.is.visible();
                },
                closed: function() {
                  return c.is.hidden();
                },
                vertical: function() {
                  return g.hasClass(a.top);
                },
                animating: function() {
                  return p.hasClass(a.animating);
                },
                rtl: function() {
                  return (
                    c.cache.rtl === I && (c.cache.rtl = "rtl" == g.css("direction")),
                    c.cache.rtl
                  );
                },
              },
              setting: function(e, t) {
                if ((c.debug("Changing setting", e, t), q.isPlainObject(e)))
                  q.extend(!0, u, e);
                else {
                  if (t === I) return u[e];
                  q.isPlainObject(u[e]) ? q.extend(!0, u[e], t) : (u[e] = t);
                }
              },
              internal: function(e, t) {
                if (q.isPlainObject(e)) q.extend(!0, c, e);
                else {
                  if (t === I) return c[e];
                  c[e] = t;
                }
              },
              debug: function() {
                !u.silent &&
                  u.debug &&
                  (u.performance
                    ? c.performance.log(arguments)
                    : ((c.debug = Function.prototype.bind.call(
                        console.info,
                        console,
                        u.name + ":"
                      )),
                      c.debug.apply(console, arguments)));
              },
              verbose: function() {
                !u.silent &&
                  u.verbose &&
                  u.debug &&
                  (u.performance
                    ? c.performance.log(arguments)
                    : ((c.verbose = Function.prototype.bind.call(
                        console.info,
                        console,
                        u.name + ":"
                      )),
                      c.verbose.apply(console, arguments)));
              },
              error: function() {
                u.silent ||
                  ((c.error = Function.prototype.bind.call(
                    console.error,
                    console,
                    u.name + ":"
                  )),
                  c.error.apply(console, arguments));
              },
              performance: {
                log: function(e) {
                  var t, n;
                  u.performance &&
                    ((n = (t = new Date().getTime()) - (E || t)),
                    (E = t),
                    D.push({
                      Name: e[0],
                      Arguments: [].slice.call(e, 1) || "",
                      Element: b,
                      "Execution Time": n,
                    })),
                    clearTimeout(c.performance.timer),
                    (c.performance.timer = setTimeout(c.performance.display, 500));
                },
                display: function() {
                  var e = u.name + ":",
                    n = 0;
                  (E = !1),
                    clearTimeout(c.performance.timer),
                    q.each(D, function(e, t) {
                      n += t["Execution Time"];
                    }),
                    (e += " " + n + "ms"),
                    A && (e += " '" + A + "'"),
                    (console.group !== I || console.table !== I) &&
                      0 < D.length &&
                      (console.groupCollapsed(e),
                      console.table
                        ? console.table(D)
                        : q.each(D, function(e, t) {
                            console.log(t.Name + ": " + t["Execution Time"] + "ms");
                          }),
                      console.groupEnd()),
                    (D = []);
                },
              },
              invoke: function(i, e, t) {
                var o,
                  a,
                  n,
                  r = y;
                return (
                  (e = e || R),
                  (t = b || t),
                  "string" == typeof i &&
                    r !== I &&
                    ((i = i.split(/[\. ]/)),
                    (o = i.length - 1),
                    q.each(i, function(e, t) {
                      var n =
                        e != o
                          ? t + i[e + 1].charAt(0).toUpperCase() + i[e + 1].slice(1)
                          : i;
                      if (q.isPlainObject(r[n]) && e != o) r = r[n];
                      else {
                        if (r[n] !== I) return (a = r[n]), !1;
                        if (!q.isPlainObject(r[t]) || e == o)
                          return r[t] !== I ? (a = r[t]) : c.error(d.method, i), !1;
                        r = r[t];
                      }
                    })),
                  q.isFunction(a) ? (n = a.apply(t, e)) : a !== I && (n = a),
                  q.isArray(C) ? C.push(n) : C !== I ? (C = [C, n]) : n !== I && (C = n),
                  a
                );
              },
            }),
              O
                ? (y === I && c.initialize(), c.invoke(F))
                : (y !== I && c.invoke("destroy"), c.initialize());
          }),
          C !== I ? C : this
        );
      }),
      (q.fn.sidebar.settings = {
        name: "Sidebar",
        namespace: "sidebar",
        silent: !1,
        debug: !1,
        verbose: !1,
        performance: !0,
        transition: "auto",
        mobileTransition: "auto",
        defaultTransition: {
          computer: {
            left: "uncover",
            right: "uncover",
            top: "overlay",
            bottom: "overlay",
          },
          mobile: {
            left: "uncover",
            right: "uncover",
            top: "overlay",
            bottom: "overlay",
          },
        },
        context: "body",
        exclusive: !1,
        closable: !0,
        dimPage: !0,
        scrollLock: !1,
        returnScroll: !1,
        delaySetup: !1,
        duration: 500,
        onChange: function() {},
        onShow: function() {},
        onHide: function() {},
        onHidden: function() {},
        onVisible: function() {},
        className: {
          active: "active",
          animating: "animating",
          dimmed: "dimmed",
          ios: "ios",
          pushable: "pushable",
          pushed: "pushed",
          right: "right",
          top: "top",
          left: "left",
          bottom: "bottom",
          visible: "visible",
        },
        selector: {
          fixed: ".fixed",
          omitted: "script, link, style, .ui.modal, .ui.dimmer, .ui.nag, .ui.fixed",
          pusher: ".pusher",
          sidebar: ".ui.sidebar",
        },
        regExp: {
          ios: /(iPad|iPhone|iPod)/g,
          mobileChrome: /(CriOS)/g,
          mobile: /Mobile|iP(hone|od|ad)|Android|BlackBerry|IEMobile|Kindle|NetFront|Silk-Accelerated|(hpw|web)OS|Fennec|Minimo|Opera M(obi|ini)|Blazer|Dolfin|Dolphin|Skyfire|Zune/g,
        },
        error: {
          method: "The method you called is not defined.",
          pusher:
            "Had to add pusher element. For optimal performance make sure body content is inside a pusher element",
          movedSidebar:
            "Had to move sidebar. For optimal performance make sure sidebar and pusher are direct children of your body tag",
          overlay: "The overlay setting is no longer supported, use animation: overlay",
          notFound: "There were no elements that matched the specified selector",
        },
      });
  })(jQuery, window, document),
  (function(C, e, x, k) {
    "use strict";
    (e =
      void 0 !== e && e.Math == Math
        ? e
        : "undefined" != typeof self && self.Math == Math
        ? self
        : Function("return this")()),
      (C.fn.transition = function() {
        var c,
          r = C(this),
          g = r.selector || "",
          p = new Date().getTime(),
          h = [],
          v = arguments,
          b = v[0],
          y = [].slice.call(arguments, 1),
          w = "string" == typeof b;
        e.requestAnimationFrame ||
          e.mozRequestAnimationFrame ||
          e.webkitRequestAnimationFrame ||
          e.msRequestAnimationFrame;
        return (
          r.each(function(i) {
            var u,
              s,
              t,
              d,
              n,
              o,
              e,
              a,
              f,
              m = C(this),
              l = this;
            (f = {
              initialize: function() {
                (u = f.get.settings.apply(l, v)),
                  (d = u.className),
                  (t = u.error),
                  (n = u.metadata),
                  (a = "." + u.namespace),
                  (e = "module-" + u.namespace),
                  (s = m.data(e) || f),
                  (o = f.get.animationEndEvent()),
                  w && (w = f.invoke(b)),
                  !1 === w &&
                    (f.verbose("Converted arguments into settings object", u),
                    u.interval ? f.delay(u.animate) : f.animate(),
                    f.instantiate());
              },
              instantiate: function() {
                f.verbose("Storing instance of module", f), (s = f), m.data(e, s);
              },
              destroy: function() {
                f.verbose("Destroying previous module for", l), m.removeData(e);
              },
              refresh: function() {
                f.verbose("Refreshing display type on next animation"),
                  delete f.displayType;
              },
              forceRepaint: function() {
                f.verbose("Forcing element repaint");
                var e = m.parent(),
                  t = m.next();
                0 === t.length ? m.detach().appendTo(e) : m.detach().insertBefore(t);
              },
              repaint: function() {
                f.verbose("Repainting element");
                l.offsetWidth;
              },
              delay: function(e) {
                var t,
                  n = f.get.animationDirection();
                n || (n = f.can.transition() ? f.get.direction() : "static"),
                  (e = e !== k ? e : u.interval),
                  (t =
                    ("auto" == u.reverse && n == d.outward) || 1 == u.reverse
                      ? (r.length - i) * u.interval
                      : i * u.interval),
                  f.debug("Delaying animation by", t),
                  setTimeout(f.animate, t);
              },
              animate: function(e) {
                if (((u = e || u), !f.is.supported())) return f.error(t.support), !1;
                if ((f.debug("Preparing animation", u.animation), f.is.animating())) {
                  if (u.queue)
                    return (
                      !u.allowRepeats &&
                      f.has.direction() &&
                      f.is.occurring() &&
                      !0 !== f.queuing
                        ? f.debug(
                            "Animation is currently occurring, preventing queueing same animation",
                            u.animation
                          )
                        : f.queue(u.animation),
                      !1
                    );
                  if (!u.allowRepeats && f.is.occurring())
                    return (
                      f.debug(
                        "Animation is already occurring, will not execute repeated animation",
                        u.animation
                      ),
                      !1
                    );
                  f.debug(
                    "New animation started, completing previous early",
                    u.animation
                  ),
                    s.complete();
                }
                f.can.animate()
                  ? f.set.animating(u.animation)
                  : f.error(t.noAnimation, u.animation, l);
              },
              reset: function() {
                f.debug("Resetting animation to beginning conditions"),
                  f.remove.animationCallbacks(),
                  f.restore.conditions(),
                  f.remove.animating();
              },
              queue: function(e) {
                f.debug("Queueing animation of", e),
                  (f.queuing = !0),
                  m.one(o + ".queue" + a, function() {
                    (f.queuing = !1), f.repaint(), f.animate.apply(this, u);
                  });
              },
              complete: function(e) {
                f.debug("Animation complete", u.animation),
                  f.remove.completeCallback(),
                  f.remove.failSafe(),
                  f.is.looping() ||
                    (f.is.outward()
                      ? (f.verbose("Animation is outward, hiding element"),
                        f.restore.conditions(),
                        f.hide())
                      : f.is.inward()
                      ? (f.verbose("Animation is outward, showing element"),
                        f.restore.conditions(),
                        f.show())
                      : (f.verbose("Static animation completed"),
                        f.restore.conditions(),
                        u.onComplete.call(l)));
              },
              force: {
                visible: function() {
                  var e = m.attr("style"),
                    t = f.get.userStyle(),
                    n = f.get.displayType(),
                    i = t + "display: " + n + " !important;",
                    o = m.css("display"),
                    a = e === k || "" === e;
                  o !== n
                    ? (f.verbose("Overriding default display to show element", n),
                      m.attr("style", i))
                    : a && m.removeAttr("style");
                },
                hidden: function() {
                  var e = m.attr("style"),
                    t = m.css("display"),
                    n = e === k || "" === e;
                  "none" === t || f.is.hidden()
                    ? n && m.removeAttr("style")
                    : (f.verbose("Overriding default display to hide element"),
                      m.css("display", "none"));
                },
              },
              has: {
                direction: function(e) {
                  var n = !1;
                  return (
                    "string" == typeof (e = e || u.animation) &&
                      ((e = e.split(" ")),
                      C.each(e, function(e, t) {
                        (t !== d.inward && t !== d.outward) || (n = !0);
                      })),
                    n
                  );
                },
                inlineDisplay: function() {
                  var e = m.attr("style") || "";
                  return C.isArray(e.match(/display.*?;/, ""));
                },
              },
              set: {
                animating: function(e) {
                  var t;
                  f.remove.completeCallback(),
                    (e = e || u.animation),
                    (t = f.get.animationClass(e)),
                    f.save.animation(t),
                    f.force.visible(),
                    f.remove.hidden(),
                    f.remove.direction(),
                    f.start.animation(t);
                },
                duration: function(e, t) {
                  ((t = "number" == typeof (t = t || u.duration) ? t + "ms" : t) ||
                    0 === t) &&
                    (f.verbose("Setting animation duration", t),
                    m.css({ "animation-duration": t }));
                },
                direction: function(e) {
                  (e = e || f.get.direction()) == d.inward
                    ? f.set.inward()
                    : f.set.outward();
                },
                looping: function() {
                  f.debug("Transition set to loop"), m.addClass(d.looping);
                },
                hidden: function() {
                  m.addClass(d.transition).addClass(d.hidden);
                },
                inward: function() {
                  f.debug("Setting direction to inward"),
                    m.removeClass(d.outward).addClass(d.inward);
                },
                outward: function() {
                  f.debug("Setting direction to outward"),
                    m.removeClass(d.inward).addClass(d.outward);
                },
                visible: function() {
                  m.addClass(d.transition).addClass(d.visible);
                },
              },
              start: {
                animation: function(e) {
                  (e = e || f.get.animationClass()),
                    f.debug("Starting tween", e),
                    m.addClass(e).one(o + ".complete" + a, f.complete),
                    u.useFailSafe && f.add.failSafe(),
                    f.set.duration(u.duration),
                    u.onStart.call(l);
                },
              },
              save: {
                animation: function(e) {
                  f.cache || (f.cache = {}), (f.cache.animation = e);
                },
                displayType: function(e) {
                  "none" !== e && m.data(n.displayType, e);
                },
                transitionExists: function(e, t) {
                  (C.fn.transition.exists[e] = t),
                    f.verbose("Saving existence of transition", e, t);
                },
              },
              restore: {
                conditions: function() {
                  var e = f.get.currentAnimation();
                  e && (m.removeClass(e), f.verbose("Removing animation class", f.cache)),
                    f.remove.duration();
                },
              },
              add: {
                failSafe: function() {
                  var e = f.get.duration();
                  (f.timer = setTimeout(function() {
                    m.triggerHandler(o);
                  }, e + u.failSafeDelay)),
                    f.verbose("Adding fail safe timer", f.timer);
                },
              },
              remove: {
                animating: function() {
                  m.removeClass(d.animating);
                },
                animationCallbacks: function() {
                  f.remove.queueCallback(), f.remove.completeCallback();
                },
                queueCallback: function() {
                  m.off(".queue" + a);
                },
                completeCallback: function() {
                  m.off(".complete" + a);
                },
                display: function() {
                  m.css("display", "");
                },
                direction: function() {
                  m.removeClass(d.inward).removeClass(d.outward);
                },
                duration: function() {
                  m.css("animation-duration", "");
                },
                failSafe: function() {
                  f.verbose("Removing fail safe timer", f.timer),
                    f.timer && clearTimeout(f.timer);
                },
                hidden: function() {
                  m.removeClass(d.hidden);
                },
                visible: function() {
                  m.removeClass(d.visible);
                },
                looping: function() {
                  f.debug("Transitions are no longer looping"),
                    f.is.looping() && (f.reset(), m.removeClass(d.looping));
                },
                transition: function() {
                  m.removeClass(d.visible).removeClass(d.hidden);
                },
              },
              get: {
                settings: function(e, t, n) {
                  return "object" == typeof e
                    ? C.extend(!0, {}, C.fn.transition.settings, e)
                    : "function" == typeof n
                    ? C.extend({}, C.fn.transition.settings, {
                        animation: e,
                        onComplete: n,
                        duration: t,
                      })
                    : "string" == typeof t || "number" == typeof t
                    ? C.extend({}, C.fn.transition.settings, {
                        animation: e,
                        duration: t,
                      })
                    : "object" == typeof t
                    ? C.extend({}, C.fn.transition.settings, t, { animation: e })
                    : "function" == typeof t
                    ? C.extend({}, C.fn.transition.settings, {
                        animation: e,
                        onComplete: t,
                      })
                    : C.extend({}, C.fn.transition.settings, { animation: e });
                },
                animationClass: function(e) {
                  var t = e || u.animation,
                    n =
                      f.can.transition() && !f.has.direction()
                        ? f.get.direction() + " "
                        : "";
                  return d.animating + " " + d.transition + " " + n + t;
                },
                currentAnimation: function() {
                  return !(!f.cache || f.cache.animation === k) && f.cache.animation;
                },
                currentDirection: function() {
                  return f.is.inward() ? d.inward : d.outward;
                },
                direction: function() {
                  return f.is.hidden() || !f.is.visible() ? d.inward : d.outward;
                },
                animationDirection: function(e) {
                  var n;
                  return (
                    "string" == typeof (e = e || u.animation) &&
                      ((e = e.split(" ")),
                      C.each(e, function(e, t) {
                        t === d.inward
                          ? (n = d.inward)
                          : t === d.outward && (n = d.outward);
                      })),
                    n || !1
                  );
                },
                duration: function(e) {
                  return (
                    !1 === (e = e || u.duration) &&
                      (e = m.css("animation-duration") || 0),
                    "string" == typeof e
                      ? -1 < e.indexOf("ms")
                        ? parseFloat(e)
                        : 1e3 * parseFloat(e)
                      : e
                  );
                },
                displayType: function(e) {
                  return (
                    (e = e === k || e),
                    u.displayType
                      ? u.displayType
                      : (e && m.data(n.displayType) === k && f.can.transition(!0),
                        m.data(n.displayType))
                  );
                },
                userStyle: function(e) {
                  return (e = e || m.attr("style") || "").replace(/display.*?;/, "");
                },
                transitionExists: function(e) {
                  return C.fn.transition.exists[e];
                },
                animationStartEvent: function() {
                  var e,
                    t = x.createElement("div"),
                    n = {
                      animation: "animationstart",
                      OAnimation: "oAnimationStart",
                      MozAnimation: "mozAnimationStart",
                      WebkitAnimation: "webkitAnimationStart",
                    };
                  for (e in n) if (t.style[e] !== k) return n[e];
                  return !1;
                },
                animationEndEvent: function() {
                  var e,
                    t = x.createElement("div"),
                    n = {
                      animation: "animationend",
                      OAnimation: "oAnimationEnd",
                      MozAnimation: "mozAnimationEnd",
                      WebkitAnimation: "webkitAnimationEnd",
                    };
                  for (e in n) if (t.style[e] !== k) return n[e];
                  return !1;
                },
              },
              can: {
                transition: function(e) {
                  var t,
                    n,
                    i,
                    o,
                    a,
                    r,
                    s = u.animation,
                    l = f.get.transitionExists(s),
                    c = f.get.displayType(!1);
                  if (l === k || e) {
                    if (
                      (f.verbose("Determining whether animation exists"),
                      (t = m.attr("class")),
                      (n = m.prop("tagName")),
                      (o = (i = C("<" + n + " />")
                        .addClass(t)
                        .insertAfter(m))
                        .addClass(s)
                        .removeClass(d.inward)
                        .removeClass(d.outward)
                        .addClass(d.animating)
                        .addClass(d.transition)
                        .css("animationName")),
                      (a = i.addClass(d.inward).css("animationName")),
                      c ||
                        ((c = i
                          .attr("class", t)
                          .removeAttr("style")
                          .removeClass(d.hidden)
                          .removeClass(d.visible)
                          .show()
                          .css("display")),
                        f.verbose("Determining final display state", c),
                        f.save.displayType(c)),
                      i.remove(),
                      o != a)
                    )
                      f.debug("Direction exists for animation", s), (r = !0);
                    else {
                      if ("none" == o || !o)
                        return void f.debug("No animation defined in css", s);
                      f.debug("Static animation found", s, c), (r = !1);
                    }
                    f.save.transitionExists(s, r);
                  }
                  return l !== k ? l : r;
                },
                animate: function() {
                  return f.can.transition() !== k;
                },
              },
              is: {
                animating: function() {
                  return m.hasClass(d.animating);
                },
                inward: function() {
                  return m.hasClass(d.inward);
                },
                outward: function() {
                  return m.hasClass(d.outward);
                },
                looping: function() {
                  return m.hasClass(d.looping);
                },
                occurring: function(e) {
                  return (
                    (e = "." + (e = e || u.animation).replace(" ", ".")),
                    0 < m.filter(e).length
                  );
                },
                visible: function() {
                  return m.is(":visible");
                },
                hidden: function() {
                  return "hidden" === m.css("visibility");
                },
                supported: function() {
                  return !1 !== o;
                },
              },
              hide: function() {
                f.verbose("Hiding element"),
                  f.is.animating() && f.reset(),
                  l.blur(),
                  f.remove.display(),
                  f.remove.visible(),
                  f.set.hidden(),
                  f.force.hidden(),
                  u.onHide.call(l),
                  u.onComplete.call(l);
              },
              show: function(e) {
                f.verbose("Showing element", e),
                  f.remove.hidden(),
                  f.set.visible(),
                  f.force.visible(),
                  u.onShow.call(l),
                  u.onComplete.call(l);
              },
              toggle: function() {
                f.is.visible() ? f.hide() : f.show();
              },
              stop: function() {
                f.debug("Stopping current animation"), m.triggerHandler(o);
              },
              stopAll: function() {
                f.debug("Stopping all animation"),
                  f.remove.queueCallback(),
                  m.triggerHandler(o);
              },
              clear: {
                queue: function() {
                  f.debug("Clearing animation queue"), f.remove.queueCallback();
                },
              },
              enable: function() {
                f.verbose("Starting animation"), m.removeClass(d.disabled);
              },
              disable: function() {
                f.debug("Stopping animation"), m.addClass(d.disabled);
              },
              setting: function(e, t) {
                if ((f.debug("Changing setting", e, t), C.isPlainObject(e)))
                  C.extend(!0, u, e);
                else {
                  if (t === k) return u[e];
                  C.isPlainObject(u[e]) ? C.extend(!0, u[e], t) : (u[e] = t);
                }
              },
              internal: function(e, t) {
                if (C.isPlainObject(e)) C.extend(!0, f, e);
                else {
                  if (t === k) return f[e];
                  f[e] = t;
                }
              },
              debug: function() {
                !u.silent &&
                  u.debug &&
                  (u.performance
                    ? f.performance.log(arguments)
                    : ((f.debug = Function.prototype.bind.call(
                        console.info,
                        console,
                        u.name + ":"
                      )),
                      f.debug.apply(console, arguments)));
              },
              verbose: function() {
                !u.silent &&
                  u.verbose &&
                  u.debug &&
                  (u.performance
                    ? f.performance.log(arguments)
                    : ((f.verbose = Function.prototype.bind.call(
                        console.info,
                        console,
                        u.name + ":"
                      )),
                      f.verbose.apply(console, arguments)));
              },
              error: function() {
                u.silent ||
                  ((f.error = Function.prototype.bind.call(
                    console.error,
                    console,
                    u.name + ":"
                  )),
                  f.error.apply(console, arguments));
              },
              performance: {
                log: function(e) {
                  var t, n;
                  u.performance &&
                    ((n = (t = new Date().getTime()) - (p || t)),
                    (p = t),
                    h.push({
                      Name: e[0],
                      Arguments: [].slice.call(e, 1) || "",
                      Element: l,
                      "Execution Time": n,
                    })),
                    clearTimeout(f.performance.timer),
                    (f.performance.timer = setTimeout(f.performance.display, 500));
                },
                display: function() {
                  var e = u.name + ":",
                    n = 0;
                  (p = !1),
                    clearTimeout(f.performance.timer),
                    C.each(h, function(e, t) {
                      n += t["Execution Time"];
                    }),
                    (e += " " + n + "ms"),
                    g && (e += " '" + g + "'"),
                    1 < r.length && (e += " (" + r.length + ")"),
                    (console.group !== k || console.table !== k) &&
                      0 < h.length &&
                      (console.groupCollapsed(e),
                      console.table
                        ? console.table(h)
                        : C.each(h, function(e, t) {
                            console.log(t.Name + ": " + t["Execution Time"] + "ms");
                          }),
                      console.groupEnd()),
                    (h = []);
                },
              },
              invoke: function(i, e, t) {
                var o,
                  a,
                  n,
                  r = s;
                return (
                  (e = e || y),
                  (t = l || t),
                  "string" == typeof i &&
                    r !== k &&
                    ((i = i.split(/[\. ]/)),
                    (o = i.length - 1),
                    C.each(i, function(e, t) {
                      var n =
                        e != o
                          ? t + i[e + 1].charAt(0).toUpperCase() + i[e + 1].slice(1)
                          : i;
                      if (C.isPlainObject(r[n]) && e != o) r = r[n];
                      else {
                        if (r[n] !== k) return (a = r[n]), !1;
                        if (!C.isPlainObject(r[t]) || e == o)
                          return r[t] !== k && (a = r[t]), !1;
                        r = r[t];
                      }
                    })),
                  C.isFunction(a) ? (n = a.apply(t, e)) : a !== k && (n = a),
                  C.isArray(c) ? c.push(n) : c !== k ? (c = [c, n]) : n !== k && (c = n),
                  a !== k && a
                );
              },
            }).initialize();
          }),
          c !== k ? c : this
        );
      }),
      (C.fn.transition.exists = {}),
      (C.fn.transition.settings = {
        name: "Transition",
        silent: !1,
        debug: !1,
        verbose: !1,
        performance: !0,
        namespace: "transition",
        interval: 0,
        reverse: "auto",
        onStart: function() {},
        onComplete: function() {},
        onShow: function() {},
        onHide: function() {},
        useFailSafe: !0,
        failSafeDelay: 100,
        allowRepeats: !1,
        displayType: !1,
        animation: "fade",
        duration: !1,
        queue: !0,
        metadata: { displayType: "display" },
        className: {
          animating: "animating",
          disabled: "disabled",
          hidden: "hidden",
          inward: "in",
          loading: "loading",
          looping: "looping",
          outward: "out",
          transition: "transition",
          visible: "visible",
        },
        error: {
          noAnimation:
            "Element is no longer attached to DOM. Unable to animate.  Use silent setting to surpress this warning in production.",
          repeated: "That animation is already occurring, cancelling repeated animation",
          method: "The method you called is not defined",
          support: "This browser does not support CSS animations",
        },
      });
  })(jQuery, window, document);
